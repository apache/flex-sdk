/*
 *
 *  THIS FILE IS AUTO-GENERATED. DO NOT EDIT THIS FILE.
 *  Use the script 'lintWarningGen' to generate this file.
 */

/*
 *
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *

/* 
 *  ErrorConstants.java defines the ID's of error messages output
 *  by the compiler.  Localized tables of strings exist for
 *  each language supported.  These ids are used to reference 
 *  the error message without regard to language 
 */

package macromedia.asc.embedding;
public class WarningConstants
{
   static final int kNumWarningConstants = 521;
   static final int kNumPropertyWarnings = 174;
   static final int kNumMethodWarnings = 218;
   static final int kNumEventWarnings = 81;


      public static final int kWarning_ConstructorReturnsValue = 1030;
      public static final int kWarning_ConstructorReturnsValue_specific = 1031;
      public static final int kWarning_BooleanConstructorWithNoArgs = 1034;
      public static final int kWarning_BooleanConstructorWithNoArgs_specific = 1035;
      public static final int kWarning_NumberFromStringChanges = 1038;
      public static final int kWarning_NumberFromStringChanges_specific = 1039;
      public static final int kWarning_ArrayToStringChanges = 1044;
      public static final int kWarning_ArrayToStringChanges_specific = 1045;
      public static final int kWarning_DepricatedPropertyError = 1058;
      public static final int kWarning_DepricatedPropertyError_specific = 1059;
      public static final int kWarning_DepricatedFunctionError = 1060;
      public static final int kWarning_DepricatedFunctionError_specific = 1061;
      public static final int kWarning_ChangesInResolve = 1066;
      public static final int kWarning_ChangesInResolve_specific = 1067;
      public static final int kUnsupportedProp_Highquality = 2092;
      public static final int kUnsupportedProp_DisplayObj_HighQuality = 2093;
      public static final int kWarning_LevelNotSupported = 1070;
      public static final int kWarning_LevelNotSupported_specific = 1071;
      public static final int kWarning_ClassIsSealed = 1072;
      public static final int kWarning_ClassIsSealed_specific = 1073;
      public static final int kUnsupportedProp_version = 2090;
      public static final int kUnsupportedProp_Focusrect = 2091;
      public static final int kUnsupportedProp_DisplayObj_Quality = 2094;
      public static final int kUnsupportedProp_Quality = 2095;
      public static final int kUnsupportedProp_TextField_Soundbuftime = 2096;
      public static final int kUnsupportedProp_TextField_Target = 2097;
      public static final int kWarning_ScopingChangeInThis = 1082;
      public static final int kWarning_ScopingChangeInThis_specific = 1083;
      public static final int kWarning_MissingNamespaceDecl = 1084;
      public static final int kWarning_MissingNamespaceDecl_specific = 1085;
      public static final int kWarning_ForVarInChanges = 1086;
      public static final int kWarning_ForVarInChanges_specific = 1087;
      public static final int kWarning_InternalError = 1088;
      public static final int kWarning_InternalError_specific = 1089;
      public static final int kWarning_DepricatedEventHandlerError = 1090;
      public static final int kWarning_DepricatedEventHandlerError_specific = 1091;
      public static final int kWarning_NegativeUintLiteral = 1092;
      public static final int kWarning_NegativeUintLiteral_specific = 1093;
      public static final int kUnsupportedProp_MovieClip_target = 2110;
      public static final int kUnsupportedProp_NewLine = 2102;
      public static final int kWarning_BadNullComparision = 1096;
      public static final int kWarning_BadNullComparision_specific = 1097;
      public static final int kWarning_BadNaNComparision = 1098;
      public static final int kWarning_BadNaNComparision_specific = 1099;
      public static final int kWarning_AssignmentWithinConditional = 1100;
      public static final int kWarning_AssignmentWithinConditional_specific = 1101;
      public static final int kWarning_BadNullAssignment = 1102;
      public static final int kWarning_BadNullAssignment_specific = 1103;
      public static final int kWarning_NoConstructor = 1104;
      public static final int kWarning_NoConstructor_specific = 1105;
      public static final int kWarning_UnexpectedEmptyStatement = 1106;
      public static final int kWarning_UnexpectedEmptyStatement_specific = 1107;
      public static final int kUnsupportedProp_Parent = 2105;
      public static final int kUnsupportedProp_Root = 2106;
      public static final int kWarning_ConstNotInitialized = 1110;
      public static final int kWarning_ConstNotInitialized_specific = 1111;
      public static final int kWarning_BadArrayCast = 1112;
      public static final int kWarning_BadArrayCast_specific = 1113;
      public static final int kWarning_NoExplicitSuperCallInConstructor = 1114;
      public static final int kWarning_NoExplicitSuperCallInConstructor_specific = 1115;
      public static final int kUnsupportedProp_TargetPath = 2113;
      public static final int kUnsupportedProp_MaxScroll = 2103;
      public static final int kUnsupportedProp_Video_Width = 2115;
      public static final int kUnsupportedProp__Proto__ = 2116;
      public static final int kUnsupportedProp_Stage = 2117;
      public static final int kUnsupportedProp__remoteClass = 2118;
      public static final int kUnsupportedProp_Button_Target = 2108;
      public static final int kUnsupportedProp_MovieClip_Parent = 2109;
      public static final int kUnsupportedProp_TextField_Url = 2098;
      public static final int kUnsupportedProp_TextField_Variable = 2099;
      public static final int kUnsupportedProp_Scroll = 2112;
      public static final int kUnsupportedProp_Video_Height = 2114;
      public static final int kUnsupportedProp_Level = 2104;
      public static final int kUnsupportedProp_Arguments_Caller = 2107;
      public static final int kUnsupportedProp_MovieClip_hitArea = 2111;
      public static final int kWarning_Event_onStatus = 3187;
      public static final int kWarning_Event_onID3 = 3188;
      public static final int kWarning_Event_onLoad = 3189;
      public static final int kWarning_Event_onSoundComplete = 3190;
      public static final int kWarning_Event_onSetFocus = 3191;
      public static final int kWarning_Event_onResize = 3192;
      public static final int kWarning_Event_onChanged = 3193;
      public static final int kWarning_Event_onKillFocus = 3194;
      public static final int kWarning_Event_onScroller = 3195;
      public static final int kWarning_Event_onMouseDown = 3198;
      public static final int kWarning_Event_onMouseUp = 3199;
      public static final int kWarning_Event_onMouseMove = 3200;
      public static final int kWarning_Event_onMouseWheel = 3201;
      public static final int kWarning_Event_onKeyDown = 3202;
      public static final int kWarning_Event_onKeyUp = 3203;
      public static final int kWarning_Event_onData = 3204;
      public static final int kWarning_Event_onHTTPStatus = 3205;
      public static final int kWarning_Event_onDragOut = 3206;
      public static final int kWarning_Event_onDragOver = 3207;
      public static final int kWarning_Event_onPress = 3211;
      public static final int kWarning_Event_onRelease = 3212;
      public static final int kWarning_Event_onReleaseOutside = 3213;
      public static final int kWarning_Event_onRollOut = 3214;
      public static final int kWarning_Event_onRollOver = 3215;
      public static final int kWarning_Event_onActivity = 3217;
      public static final int kWarning_Event_onSelect = 3219;
      public static final int kWarning_Event_onEnterFrame = 3226;
      public static final int kWarning_Event_onUnload = 3240;
      public static final int kWarning_Event_onLoadComplete = 3241;
      public static final int kWarning_Event_onLoadError = 3242;
      public static final int kWarning_Event_onLoadInit = 3243;
      public static final int kWarning_Event_onLoadProgress = 3244;
      public static final int kWarning_Event_onLoadStart = 3245;
      public static final int kWarning_Event_onClose = 3249;
      public static final int kWarning_Event_onConnect = 3250;
      public static final int kWarning_Event_onXML = 3252;
      public static final int kUnsupportedMeth_hasChildNodes = 3253;
      public static final int kUnsupportedMeth_XMLEvent = 3254;
      public static final int kUnsupportedMeth_XMLDoc = 3255;
      public static final int kUnsupportedMeth_Accessibility_isActive = 3256;
      public static final int kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE = 3257;
      public static final int kUnsupportedMeth_SimpleButton_getDepth = 3258;
      public static final int kUnsupportedMeth_SimpleButton_swapDepths = 3259;
      public static final int kUnsupportedMeth_SimpleButton_getInstanceAtDepth = 3260;
      public static final int kUnsupportedMeth_SimpleButton_getNextHighestDepth = 3261;
      public static final int kUnsupportedMeth_ByteArray_available = 3262;
      public static final int kUnsupportedMeth_ByteArray_getFilePointer = 3263;
      public static final int kUnsupportedMeth_ByteArray_seek = 3264;
      public static final int kUnsupportedMeth_Camera_get = 3265;
      public static final int kUnsupportedProp_Camera_currentFps = 3266;
      public static final int kUnsupportedMeth_Camera_setKeyFrameInterval = 3267;
      public static final int kUnsupportedMeth_Camera_setLoopback = 3268;
      public static final int kUnsupportedMeth_ColorTransform_getRGB = 3269;
      public static final int kUnsupportedMeth_ColorTransform_setRGB = 3270;
      public static final int kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot = 3271;
      public static final int kUnsupportedMeth_ContextMenu_copy = 3272;
      public static final int kUnsupportedProp_ContextMenu_forward_back = 3273;
      public static final int kUnsupportedMeth_ContextMenuItem_copy = 3274;
      public static final int kUnsupportedMeth_CustomActions_listActions = 3275;
      public static final int kUnsupportedProp_DataEvent_DATA_TYPE = 3276;
      public static final int kUnsupportedProp_DisplayObject_xscale = 3277;
      public static final int kUnsupportedProp_DisplayObject__xscale = 3278;
      public static final int kUnsupportedProp_DisplayObject_yscale = 3279;
      public static final int kUnsupportedProp_DisplayObject__yscale = 3280;
      public static final int kUnsupportedProp_DisplayObject_xmouse = 3281;
      public static final int kUnsupportedProp_DisplayObject__xmouse = 3282;
      public static final int kUnsupportedProp_DisplayObject_ymouse = 3283;
      public static final int kUnsupportedProp_DisplayObject__ymouse = 3284;
      public static final int kUnsupportedProp_DisplayObject_setRootClass = 3285;
      public static final int kUnsupportedProp_DisplayObject_mapSymbolToClass = 3286;
      public static final int kUnsupportedProp_DisplayObject__name = 3287;
      public static final int kUnsupportedProp_DisplayObject__parent = 3288;
      public static final int kUnsupportedProp_DisplayObject__mask = 3289;
      public static final int kUnsupportedProp_DisplayObject__visible = 3290;
      public static final int kUnsupportedProp_DisplayObject__x = 3291;
      public static final int kUnsupportedProp_DisplayObject__y = 3292;
      public static final int kUnsupportedProp_DisplayObject__rotation = 3293;
      public static final int kUnsupportedProp_DisplayObject__alpha = 3294;
      public static final int kUnsupportedProp_DisplayObject__width = 3295;
      public static final int kUnsupportedProp_DisplayObject__height = 3296;
      public static final int kUnsupportedMeth_ExternalInterface_available = 3297;
      public static final int kUnsupportedProp_ErrorEvent_ERROR_TYPE = 3298;
      public static final int kUnsupportedMeth_Event_isDefaultPrevented = 3299;
      public static final int kUnsupportedProp_Event_ACTIVATE_TYPE = 3300;
      public static final int kUnsupportedProp_Event_ADDED_TYPE = 3301;
      public static final int kUnsupportedProp_Event_CANCEL_TYPE = 3302;
      public static final int kUnsupportedProp_Event_CHANGE_TYPE = 3303;
      public static final int kUnsupportedProp_Event_CLOSE_TYPE = 3304;
      public static final int kUnsupportedProp_Event_COMPLETE_TYPE = 3305;
      public static final int kUnsupportedProp_Event_CONNECT_TYPE = 3306;
      public static final int kUnsupportedProp_Event_DEACTIVATE_TYPE = 3307;
      public static final int kUnsupportedProp_Event_ENTER_FRAME_TYPE = 3308;
      public static final int kUnsupportedProp_Event_ID3_TYPE = 3309;
      public static final int kUnsupportedProp_Event_INIT_TYPE = 3310;
      public static final int kUnsupportedProp_Event_MOUSE_LEAVE_TYPE = 3311;
      public static final int kUnsupportedProp_Event_OPEN_TYPE = 3312;
      public static final int kUnsupportedProp_Event_REMOVED_TYPE = 3313;
      public static final int kUnsupportedProp_Event_RENDER_TYPE = 3314;
      public static final int kUnsupportedProp_Event_RESIZE_TYPE = 3315;
      public static final int kUnsupportedProp_Event_SCROLL_TYPE = 3316;
      public static final int kUnsupportedProp_Event_SELECT_TYPE = 3317;
      public static final int kUnsupportedProp_Event_SOUND_COMPLETE_TYPE = 3318;
      public static final int kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE = 3319;
      public static final int kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE = 3320;
      public static final int kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE = 3321;
      public static final int kUnsupportedProp_Event_UNLOAD_TYPE = 3322;
      public static final int kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE = 3323;
      public static final int kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE = 3324;
      public static final int kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE = 3325;
      public static final int kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE = 3326;
      public static final int kUnsupportedMeth_Graphics_beginImageFill = 3327;
      public static final int kUnsupportedProp_BitmapFilter_XYZ_QUALITY = 3328;
      public static final int kUnsupportedMeth_Keyboard_getAscii = 3329;
      public static final int kUnsupportedMeth_Keyboard_getCode = 3330;
      public static final int kUnsupportedMeth_Keyboard_isDown = 3331;
      public static final int kUnsupportedMeth_Keyboard_isToggled = 3332;
      public static final int kUnsupportedProp_Keyboard_PGDN = 3333;
      public static final int kUnsupportedProp_Keyboard_PGUP = 3334;
      public static final int kUnsupportedProp_Keyboard_DELETEKEY = 3335;
      public static final int kUnsupportedProp_Keyboard_CAPSLOCK = 3336;
      public static final int kUnsupportedProp_Keyboard_NUMPAD = 3337;
      public static final int kUnsupportedProp_InteractiveObject__focusrect = 3338;
      public static final int kUnsupportedProp_InteractiveObject_menu = 3339;
      public static final int kUnsupportedProp_KeyboardEvent_ascii = 3340;
      public static final int kUnsupportedProp_KeyboardEvent_code = 3341;
      public static final int kUnsupportedProp_Loader_loaderInfo = 3342;
      public static final int kUnsupportedProp_Loader_preload = 3343;
      public static final int kUnsupportedProp_Loader_loadCached = 3344;
      public static final int kUnsupportedProp_LoaderInfo_loaderUrl = 3345;
      public static final int kUnsupportedMeth_LocalConnection_domain = 3346;
      public static final int kUnsupportedProp_ContextMenuEvent_menuOwner = 3347;
      public static final int kUnsupportedMeth_Microphone_get = 3348;
      public static final int kUnsupportedMeth_MovieClip_attachMovie = 3349;
      public static final int kUnsupportedMeth_MovieClip_createEmptyMovieClip = 3350;
      public static final int kUnsupportedMeth_MovieClip_createTextField = 3351;
      public static final int kUnsupportedMeth_MovieClip_removeMovieClip = 3352;
      public static final int kUnsupportedMeth_MovieClip_loadMovie = 3353;
      public static final int kUnsupportedMeth_MovieClip_unloadMovie = 3354;
      public static final int kUnsupportedMeth_MovieClip_unloadMovieNum = 3355;
      public static final int kUnsupportedMeth_MovieClip_getDepth = 3356;
      public static final int kUnsupportedMeth_MovieClip_swapDepths = 3357;
      public static final int kUnsupportedMeth_MovieClip_getInstanceAtDepth = 3358;
      public static final int kUnsupportedMeth_MovieClip_getNextHighestDepth = 3359;
      public static final int kUnsupportedMeth_MovieClip_attachAudio = 3360;
      public static final int kUnsupportedMeth_MovieClip_getBytesLoaded = 3361;
      public static final int kUnsupportedMeth_MovieClip_getBytesTotal = 3362;
      public static final int kUnsupportedMeth_MovieClip_getURL = 3363;
      public static final int kUnsupportedProp_MovieClip_url = 3364;
      public static final int kUnsupportedProp_MovieClip__url = 3365;
      public static final int kUnsupportedMeth_MovieClip_setMask = 3366;
      public static final int kUnsupportedMeth_MovieClip_getSWFVersion = 3367;
      public static final int kUnsupportedProp_MovieClip__currentframe = 3368;
      public static final int kUnsupportedProp_MovieClip__framesloaded = 3369;
      public static final int kUnsupportedProp_MovieClip__totalframes = 3370;
      public static final int kUnsupportedProp_MovieClip_lockroot = 3371;
      public static final int kUnsupportedProp_MovieClip__lockroot = 3372;
      public static final int kUnsupportedProp_MovieClip__soundbuftime = 3373;
      public static final int kUnsupportedMeth_MovieClip_clear = 3374;
      public static final int kUnsupportedMeth_MovieClip_beginFill = 3375;
      public static final int kUnsupportedMeth_MovieClip_beginGradientFill = 3376;
      public static final int kUnsupportedMeth_MovieClip_lineGradientStyle = 3377;
      public static final int kUnsupportedMeth_MovieClip_beginImageFill = 3378;
      public static final int kUnsupportedMeth_MovieClip_lineStyle = 3379;
      public static final int kUnsupportedMeth_MovieClip_drawRect = 3380;
      public static final int kUnsupportedMeth_MovieClip_drawRoundRect = 3381;
      public static final int kUnsupportedMeth_MovieClip_drawRoundRectComplex = 3382;
      public static final int kUnsupportedMeth_MovieClip_drawCircle = 3383;
      public static final int kUnsupportedMeth_MovieClip_moveTo = 3384;
      public static final int kUnsupportedMeth_MovieClip_lineTo = 3385;
      public static final int kUnsupportedMeth_MovieClip_curveTo = 3386;
      public static final int kUnsupportedMeth_MovieClip_endFill = 3387;
      public static final int kUnsupportedMeth_NetStream_setBufferTime = 3388;
      public static final int kUnsupportedProp_NetStream_currentFps = 3389;
      public static final int kUnsupportedProp_NetStream_videocodec = 3390;
      public static final int kUnsupportedProp_NetStream_audiocodec = 3391;
      public static final int kUnsupportedMeth_ProductManager_isIntalled = 3392;
      public static final int kUnsupportedMeth_ProductManager_installedVersion = 3393;
      public static final int kUnsupportedMeth_ProductManager_isRunning = 3394;
      public static final int kUnsupportedMeth_Point_addTo = 3395;
      public static final int kUnsupportedProp_Proxy_delDescendants = 3396;
      public static final int kUnsupportedMeth_Profiler_heapdump = 3397;
      public static final int kUnsupportedProp_ProgressEvent_current = 3398;
      public static final int kUnsupportedProp_ProgressEvent_total = 3399;
      public static final int kUnsupportedMeth_Rectangle_isEmpty = 3400;
      public static final int kUnsupportedMeth_SoundTransform_setPan = 3401;
      public static final int kUnsupportedMeth_Socket_available = 3402;
      public static final int kUnsupportedMeth_SharedObject_getSize = 3403;
      public static final int kUnsupportedMeth_SharedObject_setFps = 3404;
      public static final int kUnsupportedMeth_Sprite_getSWF = 3405;
      public static final int kUnsupportedMeth_Sprite_constructChild = 3406;
      public static final int kUnsupportedProp_Sprite__droptarget = 3407;
      public static final int kUnsupportedMeth_Stage_getFocus = 3408;
      public static final int kUnsupportedMeth_Stage_setFocus = 3409;
      public static final int kUnsupportedProp_Stage_showMenu = 3411;
      public static final int kUnsupportedMeth_StyleSheet_getStyleNames = 3412;
      public static final int kUnsupportedMeth_StyleSheet_onData = 3413;
      public static final int kUnsupportedMeth_StyleSheet_load = 3414;
      public static final int kUnsupportedProp_StyleSheet_loaded = 3415;
      public static final int kUnsupportedMeth_StyleSheet_getBytesLoaded = 3416;
      public static final int kUnsupportedMeth_StyleSheet_getBytesTotal = 3417;
      public static final int kUnsupportedMeth_IME_getEnabled = 3418;
      public static final int kUnsupportedMeth_IME_setEnabled = 3419;
      public static final int kUnsupportedMeth_IME_getInstance = 3420;
      public static final int kUnsupportedMeth_IME_getConversionMode = 3421;
      public static final int kUnsupportedMeth_IME_setConversionMode = 3422;
      public static final int kUnsupportedProp_System_getAvmplusVersion = 3423;
      public static final int kUnsupportedProp_SWFLoaderInfo_SWFVersion = 3424;
      public static final int kUnsupportedProp_SWFLoaderInfo_ASVersion = 3425;
      public static final int kUnsupportedMeth_TextField_getNewTextFormat = 3426;
      public static final int kUnsupportedMeth_TextField_setNewTextFormat = 3427;
      public static final int kUnsupportedMeth_TextField_getDepth = 3428;
      public static final int kUnsupportedMeth_TextField_swapDepths = 3429;
      public static final int kUnsupportedMeth_TextField_getInstanceAtDepth = 3430;
      public static final int kUnsupportedMeth_TextField_getNextHighestDepth = 3431;
      public static final int kUnsupportedMeth_TextField_replaceSel = 3432;
      public static final int kUnsupportedMeth_TextField_getLineIndexOfCharacter = 3433;
      public static final int kUnsupportedMeth_TextField_getSelectionBeginIndex = 3434;
      public static final int kUnsupportedMeth_TextField_getSelectionEndIndex = 3435;
      public static final int kUnsupportedMeth_TextField_getCaretIndex = 3436;
      public static final int kUnsupportedMeth_TextField_getFontList = 3437;
      public static final int kUnsupportedProp_TextField_maxscroll = 3438;
      public static final int kUnsupportedProp_TextField_hscroll = 3439;
      public static final int kUnsupportedProp_TextField_maxhscroll = 3440;
      public static final int kUnsupportedProp_TextField_newTextFormat = 3441;
      public static final int kUnsupportedMeth_TextFormat_getTextExtent = 3442;
      public static final int kUnsupportedMeth_TextSnapshot_getCount = 3443;
      public static final int kUnsupportedProp_URLLoader_navigate = 3444;
      public static final int kUnsupportedMeth_URLLoader_send = 3445;
      public static final int kUnsupportedProp_URLLoader_binary = 3446;
      public static final int kUnsupportedMeth_URLStream_available = 3447;
      public static final int kUnsupportedProp_URLRequest_digest = 3448;
      public static final int kUnsupportedProp_URLRequest_importToSandbox = 3449;
      public static final int kUnsupportedMeth_URLRequest_addRequestHeader = 3450;
      public static final int kUnsupportedMeth_XMLDocument_load = 3451;
      public static final int kUnsupportedMeth_XMLDocument_send = 3452;
      public static final int kUnsupportedMeth_XMLDocument_sendAndLoad = 3453;
      public static final int kUnsupportedMeth_XMLDocument_onData = 3454;
      public static final int kUnsupportedMeth_XMLDocument_addRequestHeader = 3455;
      public static final int kUnsupportedMeth_XMLDocument_getBytesLoaded = 3456;
      public static final int kUnsupportedMeth_XMLDocument_getBytesTotal = 3457;
      public static final int kUnsupportedProp_XMLDocument_loaded = 3458;
      public static final int kUnsupportedProp_XMLDocument_contentType = 3459;
      public static final int kUnsupportedProp_XMLDocument_status = 3460;
      public static final int kUnsupportedProp_Button = 3461;
      public static final int kUnsupportedProp_Container = 3462;
      public static final int kUnsupportedProp_Image = 3463;
      public static final int kUnsupportedProp_ImageFilter = 3464;
      public static final int kUnsupportedProp_ImageSprite = 3465;
      public static final int kUnsupportedProp_ImageLoaderInfo = 3466;
      public static final int kUnsupportedProp_ImeEvent = 3467;
      public static final int kUnsupportedProp_Key = 3468;
      public static final int kUnsupportedProp_LineMetrics = 3469;
      public static final int kUnsupportedProp_LoadVars = 3470;
      public static final int kUnsupportedProp_MenuEvent = 3471;
      public static final int kUnsupportedProp_SystemCapabilities = 3472;
      public static final int kUnsupportedProp_TextExtents = 3473;
      public static final int kUnsupportedMeth_Button = 3475;
      public static final int kUnsupportedMeth_Container = 3476;
      public static final int kUnsupportedMeth_Image = 3477;
      public static final int kUnsupportedMeth_ImageFilter = 3478;
      public static final int kUnsupportedMeth_ImageSprite = 3479;
      public static final int kUnsupportedMeth_ImageLoaderInfo = 3480;
      public static final int kUnsupportedMeth_ImeEvent = 3481;
      public static final int kUnsupportedMeth_Key = 3482;
      public static final int kUnsupportedMeth_LineMetrics = 3483;
      public static final int kUnsupportedMeth_LoadVars = 3484;
      public static final int kUnsupportedMeth_MenuEvent = 3485;
      public static final int kUnsupportedMeth_SystemCapabilities = 3486;
      public static final int kUnsupportedMeth_TextExtents = 3487;
      public static final int kUnsupportedProp_Object___resolve  = 3488;
      public static final int kUnsupportedMeth_XMLUI_get = 3489;
      public static final int kUnsupportedMeth_XMLUI_set = 3490;
      public static final int kUnsupportedProp_DisplayObject_accProps = 3491;
      public static final int kUnsupportedMeth_DisplayObject_setScalingGrid = 3492;
      public static final int kUnsupportedMeth_Graphics_drawCircle = 3493;
      public static final int kUnsupportedProp_NetConnection_isConnected = 3494;
      public static final int kUnsupportedProp_Socket_isConnected = 3495;
      public static final int kUnsupportedProp_URLStream_isConnected = 3496;
      public static final int kUnsupportedProp_SyncEvent_list = 3497;
      public static final int kUnsupportedProp_TextField_scroll = 3498;
      public static final int kUnsupportedProp_TextField_bottomScroll = 3499;
      public static final int kUnsupportedProp_BitmapData_RED_CHANNEL = 3500;
      public static final int kUnsupportedProp_BitmapData_GREEN_CHANNEL = 3501;
      public static final int kUnsupportedProp_BitmapData_BLUE_CHANNEL = 3502;
      public static final int kUnsupportedProp_BitmapData_ALPHA_CHANNEL = 3503;
      public static final int kUnsupportedMeth_instanceof = 3504;
      public static final int kUnsupportedMeth_System_showSettings = 3505;
      public static final int kUnsupportedProp_System_useCodepage = 3506;
      public static final int kUnsupportedProp_AsBroadcaster = 3507;
      public static final int kUnsupportedProp_SimpleButton_Soundbuftime = 3508;
      public static final int kUnsupportedMeth_BitmapData_loadBitmap = 3509;
      public static final int kUnsupportedMeth_MovieClip_loadVariables = 3510;
      public static final int kUnsupportedProp_MovieClipLoader = 3511;
      public static final int kUnsupportedMeth_MovieClipLoader = 3512;
      public static final int kUnsupportedMeth_IME_addListener = 3513;
      public static final int kUnsupportedMeth_IME_removeListener = 3514;
      public static final int kUnsupportedProp_IME_ALPHANUMERIC_FULL = 3515;
      public static final int kUnsupportedProp_IME_ALPHANUMERIC_HALF = 3516;
      public static final int kUnsupportedProp_IME_CHINESE = 3517;
      public static final int kUnsupportedProp_IME_JAPANESE_HIRAGANA = 3518;
      public static final int kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL = 3519;
      public static final int kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF = 3520;
      public static final int kUnsupportedProp_IME_KOREAN = 3521;
      public static final int kUnsupportedProp_IME_UNKNOWN = 3522;
      public static final int kUnsupportedMeth_FileReferenceList_addListener = 3523;
      public static final int kUnsupportedMeth_FileReferenceList_removeListener = 3524;
      public static final int kWarning_Event_onCancel = 3527;
      public static final int kUnsupportedProp_Keyboard__listeners = 3528;
      public static final int kWarning_Event_onIMEComposition = 3529;
      public static final int kUnsupportedProp_SimpleButton__url = 3530;
      public static final int kUnsupportedMeth_Date_getYear = 3531;
      public static final int kUnsupportedMeth_Date_setYear = 3532;
      public static final int kUnsupportedMeth_Date_getUTCYear = 3533;
      public static final int kUnsupportedMeth_Microphone_setRate = 3534;
      public static final int kUnsupportedProp_Selection = 3535;
      public static final int kUnsupportedMeth_Selection = 3536;
      public static final int kUnsupportedMeth_Microphone_setGain = 3537;
      public static final int kUnsupportedMeth_ColorTransform_getTransform = 3538;
      public static final int kUnsupportedMeth_ColorTransform_setTransform = 3539;
      public static final int kUnsupportedProp_MovieClip_focusEnabled = 3540;
      public static final int kUnsupportedMeth_MovieClip_beginBitmapFill = 3541;
      public static final int kUnsupportedMeth_MovieClip_hitTest = 3542;
      public static final int kUnsupportedMeth_MovieClip_attachBitmap = 3543;
      public static final int kUnsupportedMeth_Sound_loadSound = 3544;
      public static final int kUnsupportedMeth_Sound_getVolume = 3545;
      public static final int kUnsupportedMeth_Sound_getTransform = 3546;
      public static final int kUnsupportedMeth_Sound_getPan = 3547;
      public static final int kUnsupportedMeth_Sound_setPan = 3548;
      public static final int kUnsupportedMeth_Sound_getBytesLoaded = 3549;
      public static final int kUnsupportedMeth_Sound_getBytesTotal = 3550;
      public static final int kWarning_SlowTextFieldAddition = 3551;
      public static final int kWarning_SlowTextFieldAddition_specific = 3552;
      public static final int kWarning_UnlikelyFunctionValue = 3553;
      public static final int kWarning_UnlikelyFunctionValue_specific = 3554;
      public static final int kWarning_InstanceOfChanges = 3555;
      public static final int kWarning_InstanceOfChanges_specific = 3556;
      public static final int kUnsupportedProp_LocalConnection_allowDomain = 3557;
      public static final int kUnsupportedProp_LocalConnection_allowInsecureDomain = 3558;
      public static final int kUnsupportedMeth_call = 3559;
      public static final int kUnsupportedProp_Color = 3560;
      public static final int kUnsupportedMeth_Color = 3561;
      public static final int kUnsupportedProp_System_exactSettings = 3562;
      public static final int kUnsupportedProp_capabilities = 3563;
      public static final int kUnsupportedMeth_capabilities = 3564;
      public static final int kUnsupportedMeth_FileReference_addListener = 3565;
      public static final int kUnsupportedMeth_FileReference_removeListener = 3566;
      public static final int kWarning_Event_onComplete = 3567;
      public static final int kWarning_Event_onHTTPError = 3568;
      public static final int kWarning_Event_onIOError = 3569;
      public static final int kWarning_Event_onProgress = 3570;
      public static final int kWarning_Event_onSecurityError = 3571;
      public static final int kWarning_Event_onOpen = 3572;
      public static final int kWarning_XML_ClassHasChanged = 3573;
      public static final int kWarning_XML_ClassHasChanged_specific = 3574;
      public static final int kWarning_BadDateCast = 3575;
      public static final int kWarning_BadDateCast_specific = 3576;
      public static final int kWarning_ImportHidesClass = 3581;
      public static final int kWarning_ImportHidesClass_specific = 3582;
      public static final int kWarning_DuplicateArgumentNames = 3583;
      public static final int kWarning_DuplicateArgumentNames_specific = 3584;
      public static final int kUnsupportedMeth_Rectangle_containsRectangle = 3585;
      public static final int kUnsupportedMeth_eval = 3586;
      public static final int kUnsupportedMeth_getVersion = 3587;
      public static final int kUnsupportedMeth_ifFrameLoaded = 3588;
      public static final int kUnsupportedProp__global = 3589;
      public static final int kWarning_BadBoolAssignment = 3590;
      public static final int kWarning_BadBoolAssignment_specific = 3591;
      public static final int kWarning_BadES3TypeProp = 3592;
      public static final int kWarning_BadES3TypeProp_specific = 3593;
      public static final int kWarning_BadES3TypeMethod = 3594;
      public static final int kWarning_BadES3TypeMethodProp_specific = 3595;
      public static final int kWarning_DuplicateVariableDef = 3596;
      public static final int kWarning_DuplicateVariableDef_specific = 3597;
      public static final int kWarning_DefinitionShadowedByPackageName = 3598;
      public static final int kWarning_DefinitionShadowedByPackageName_specific = 3599;
      public static final int kWarning_DeleteOfFixedProperty = 3600;
      public static final int kWarning_DeleteOfFixedProperty_specific = 3601;
      public static final int kWarning_Deprecated = 3602;
      public static final int kWarning_Deprecated_specific = 3603;
      public static final int kWarning_DeprecatedMessage = 3604;
      public static final int kWarning_DeprecatedMessage_specific = 3605;
      public static final int kWarning_DeprecatedUseReplacement = 3606;
      public static final int kWarning_DeprecatedUseReplacement_specific = 3607;
      public static final int kWarning_DeprecatedSince = 3608;
      public static final int kWarning_DeprecatedSince_specific = 3609;
      public static final int kWarning_DeprecatedSinceNoReplacement = 3610;
      public static final int kWarning_DeprecatedSinceNoReplacement_specific = 3611;
      public static final int kUnsupportedMeth_random = 2617;
      public static final int kUnsupportedMeth_chr = 2618;
      public static final int kUnsupportedMeth_mbchr = 2619;
      public static final int kUnsupportedMeth_ord = 2621;
      public static final int kUnsupportedMeth_mbord = 2622;
      public static final int kUnsupportedMeth_substring = 2623;
      public static final int kUnsupportedMeth_mbsubstring = 2624;
      public static final int kUnsupportedMeth_length = 2625;
      public static final int kUnsupportedMeth_mblength = 2626;
      public static final int kUnsupportedMeth_ASNative = 2627;
      public static final int kUnsupportedMeth_addProperty = 2628;
      public static final int kUnsupportedMeth_getProperty = 2629;
      public static final int kUnsupportedMeth_setProperty = 2630;
      public static final int kUnsupportedMeth_asfunction = 2631;
      public static final int kUnsupportedMeth_clearInterval = 2633;
      public static final int kUnsupportedMeth_duplicateMovieClip = 2634;
      public static final int kUnsupportedMeth_fscommand = 2636;
      public static final int kUnsupportedMeth_getURL = 2638;
      public static final int kUnsupportedMeth_gotoAndPlay = 2639;
      public static final int kUnsupportedMeth_gotoAndStop = 2640;
      public static final int kUnsupportedMeth_play = 2641;
      public static final int kUnsupportedMeth_print = 2642;
      public static final int kUnsupportedMeth_printAsBitmap = 2643;
      public static final int kUnsupportedMeth_printAsBitmapNum = 2644;
      public static final int kUnsupportedMeth_printNum = 2645;
      public static final int kUnsupportedMeth_removeMovieClip = 2646;
      public static final int kUnsupportedMeth_setInterval = 2647;
      public static final int kUnsupportedMeth_nextFrame = 2648;
      public static final int kUnsupportedMeth_startDrag = 2649;
      public static final int kUnsupportedMeth_stop = 2650;
      public static final int kUnsupportedMeth_stopAllSounds = 2651;
      public static final int kUnsupportedMeth_stopDrag = 2652;
      public static final int kUnsupportedMeth_tellTarget = 2653;
      public static final int kUnsupportedMeth_toggleHighQuality = 2654;
      public static final int kUnsupportedMeth_unloadMovie = 2656;
      public static final int kUnsupportedMeth_unloadMovieNum = 2657;
      public static final int kUnsupportedMeth_updateAfterEvent = 2658;
      public static final int kUnsupportedMeth_Video_attachVideo = 2659;
      public static final int kUnsupportedMeth_TextField_StyleSheet_load = 2660;
      public static final int kUnsupportedMeth_Object_registerClass = 2663;
      public static final int kUnsupportedMeth_Object_unwatch = 2664;
      public static final int kUnsupportedMeth_Object_watch = 2665;
      public static final int kUnsupportedMeth_loadMovie = 2666;
      public static final int kUnsupportedMeth_loadMovieNum = 2667;
      public static final int kUnsupportedMeth_loadVariables = 2668;
      public static final int kUnsupportedMeth_loadVariablesNum = 2669;
      public static final int kUnsupportedMeth_Stage_addListener = 2678;
      public static final int kUnsupportedMeth_Stage_removeListener = 2679;
      public static final int kUnsupportedMeth_TextField_addListener = 2680;
      public static final int kUnsupportedMeth_TextField_removeListener = 2681;
      public static final int kUnsupportedMeth_Mouse_addListener = 2682;
      public static final int kUnsupportedMeth_Mouse_removeListener = 2683;
      public static final int kUnsupportedMeth_Keyboard_addListener = 2684;
      public static final int kUnsupportedMeth_Keyboard_removeListener = 2685;
      public static final int kUnsupportedMeth_Sound_attachSound = 2686;
      public static final int kWarning_NoTypeDecl = 1008;
      public static final int kWarning_NoTypeDecl_specific = 1009;
      public static final int kWarning_BadUndefinedComparision = 1012;
      public static final int kWarning_BadUndefinedComparision_specific = 1013;
   
   
   
   // enum for common types we need to lookup quickly
   public static final int kVoidType = 0;
   public static final int kObjectType = 1;
   public static final int kFunctionType = 2;
   public static final int kStringType = 3;
   public static final int kNumberType = 4;
   public static final int kBooleanType = 5;
   public static final int kArrayType = 6;
   public static final int kDateType = 7;
   public static final int kMathType = 8;
   public static final int kErrorType = 9;
   public static final int kRegExpType = 10;
   public static final int kDisplayObjectType = 11;
   public static final int kMovieClipType = 12;
   public static final int kTextFieldType = 13;
   public static final int kTextFormatType = 14;
   public static final int kMicrophoneType = 15;
   public static final int kSimpleButtonType = 16;
   public static final int kVideoType = 17;
   public static final int kStyleSheetType = 18;
   public static final int kSelectionType = 19;
   public static final int kColorType = 20;
   public static final int kStageType = 21;
   public static final int kMouseType = 22;
   public static final int kKeyboardType = 23;
   public static final int kSoundType = 24;
   public static final int kSystemType = 25;
   public static final int kXMLType = 26;
   public static final int kXMLSocketType = 27;
   public static final int kXMLListType = 28;
   public static final int kQNameType = 29;
   public static final int kLoadVarsType = 30;
   public static final int kCameraType = 31;
   public static final int kContextMenuType = 32;
   public static final int kContextMenuItemType = 33;
   public static final int kMovieClipLoaderType = 34;
   public static final int kNetStreamType = 35;
   public static final int kAccessibilityType = 36;
   public static final int kActivityEventType = 37;
   public static final int kByteArrayType = 38;
   public static final int kColorTransformType = 39;
   public static final int kDisplayObjectContainerType = 40;
   public static final int kCustomActionsType = 41;
   public static final int kDataEventType = 42;
   public static final int kExternalInterfaceType = 43;
   public static final int kErrorEventType = 44;
   public static final int kEventType = 45;
   public static final int kFocusEventType = 46;
   public static final int kGraphicsType = 47;
   public static final int kBitmapFilterType = 48;
   public static final int kInteractiveObjectType = 49;
   public static final int kKeyboardEventType = 50;
   public static final int kLoaderType = 51;
   public static final int kLoaderInfoType = 52;
   public static final int kLocalConnectionType = 53;
   public static final int kContextMenuEventType = 54;
   public static final int kProductManagerType = 55;
   public static final int kPointType = 56;
   public static final int kProxyType = 57;
   public static final int kProfilerType = 58;
   public static final int kProgressEventType = 59;
   public static final int kRectangleType = 60;
   public static final int kSoundTransformType = 61;
   public static final int kSocketType = 62;
   public static final int kSharedObjectType = 63;
   public static final int kSpriteType = 64;
   public static final int kIMEType = 65;
   public static final int kSWFLoaderInfoType = 66;
   public static final int kTextSnapshotType = 67;
   public static final int kURLLoaderType = 68;
   public static final int kURLStreamType = 69;
   public static final int kURLRequestType = 70;
   public static final int kXMLDocumentType = 71;
   public static final int kXMLNodeType = 72;
   public static final int kNetConnectionType = 73;
   public static final int kSyncEventType = 74;
   public static final int kBitmapDataType = 75;
   public static final int kXMLUIType = 76;
   public static final int kFileReferenceListType = 77;
   public static final int kFileReferenceType = 78;
   public static final int kNumDefaultTypes =  79;
   
   public static class AscWarning
   {
      int code;  // enum used to identify or lookup this message/problem
      String pWarning; // a particular warning message    '
      AscWarning(int c, String s) { code = c; pWarning = s; }
   }

   public static class AscWarningInstance
   {
      int code;			// enum identifying the warning to use if we find a match for baseType and name
      int baseType;		// type of the base in the member expression we are looking for 
      boolean is_static;  // is a static property or method
      String name;		// name of the property or method we are looking for
      AscWarningInstance(int c, int b, String s, boolean isStatic) { code = c; baseType = b; name = s; is_static = isStatic; }
   }


   public static void initWarningConstants() 
   {
      initWarningConstantsEN();
      initWarningConstantsCN();
      initWarningConstantsCS();
      initWarningConstantsDA();
      initWarningConstantsDE();
      initWarningConstantsES();
      initWarningConstantsFI();
      initWarningConstantsFR();
      initWarningConstantsIT();
      initWarningConstantsJP();
      initWarningConstantsKR();
      initWarningConstantsNB();
      initWarningConstantsNL();
      initWarningConstantsPL();
      initWarningConstantsPT();
      initWarningConstantsRU();
      initWarningConstantsSV();
      initWarningConstantsTR();
      initWarningConstantsTW();
   }

   static final AscWarning[] warningConstantsEN= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsEN() 
   {
      int index=0;
        warningConstantsEN[index++] = new AscWarning(kWarning_NoTypeDecl, "Missing type declaration." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' has no type declaration." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Illogical comparison with undefined.  Only untyped variables (or variables of type *) can be undefined." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Variables of type %s cannot be undefined. The value undefined will be type coerced to %s before comparison." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "Function used in new expression returns a value.  Result will be what the function returns, rather than a new instance of that function." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Migration issue: Result of new %s will be the return value of %s, rather than a new instance of that function." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() with no arguments returns false in ActionScript 3.0.  Boolean() returned undefined in ActionScript 2.0." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Use of Boolean() with no arguments." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NumberFromStringChanges, "In ActionScript 3.0, white space is ignored and '' returns 0. Number() returns NaN in ActionScript 2.0 when the parameter is '' or contains white space." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Migration issue: When the Number('') function is called with an empty string argument it returns 0 in ActionScript 3.0, and NaN in ActionScript 2.0." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString() format has changed." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Migration issue: Array.toString() handling of null and undefined elements has changed." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Unsupported ActionScript 2.0 property." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Migration issue: The property %s is no longer supported.  %s." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Unsupported ActionScript 2.0 function." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Migration issue: The method %s is no longer supported.  %s." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Migration issue: __resolve is no longer supported.  Use the new Proxy class for similar functionality." );
        warningConstantsEN[index++] = new AscWarning(kWarning_LevelNotSupported, "_level is no longer supported. For more information, see the flash.display package." );
        warningConstantsEN[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Migration issue: _level is no longer supported. For more information, see the flash.display package." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ClassIsSealed, "Class is sealed.  It cannot have members added to it dynamically." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Migration issue: %s is not a dynamic class.  Instances cannot have members added to them dynamically." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Change in scoping for the this keyword.  Class methods extracted from an instance of a class will always resolve this back to that instance.  In ActionScript 2.0 this is looked up dynamically based on where the method is invoked from." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Migration issue: Method %s will behave differently in ActionScript 3.0 due to the change in scoping for the this keyword. See the entry for warning 1083 for additional information." );
        warningConstantsEN[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Missing namespace declaration (e.g. variable is not defined to be public, private, etc.)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s will be scoped to the default namespace: %s internal.  It will not be visible outside of this package." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 iterates over an object's properties within a \"for x in target\" statement in random order." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Migration issue: ActionScript 3.0 iterates over an object's properties within a \"for x in target\" statement in random order." );
        warningConstantsEN[index++] = new AscWarning(kWarning_InternalError, "Internal error in compiler." );
        warningConstantsEN[index++] = new AscWarning(kWarning_InternalError_specific, "Error code: %s." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler was not added as a listener." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Migration issue: %s" );
        warningConstantsEN[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Negative value will become a large positive value when assigned to a uint data type." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Negative value used where a uint (non-negative) value is expected." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadNullComparision, "Illogical comparison with null." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Illogical comparison with null.  Variables of type %s cannot be null." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadNaNComparision, "Illogical comparison with NaN. Any comparison operation involving NaN will evaluate to false because NaN != NaN." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Illogical comparison with NaN.  This statement always evaluates to false." );
        warningConstantsEN[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Assignment within conditional." );
        warningConstantsEN[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Assignment within conditional.  Did you mean == instead of =?" );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadNullAssignment, "Impossible null assignment." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "null used where a %s value was expected." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NoConstructor, "Missing constructor." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NoConstructor_specific, "No constructor function was specified for class %s." );
        warningConstantsEN[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Empty statement." );
        warningConstantsEN[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Empty statement found where block of code expected. Did you type ';' accidentally?" );
        warningConstantsEN[index++] = new AscWarning(kWarning_ConstNotInitialized, "Constant not initialized." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "The constant was not initialized." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadArrayCast, "Possibly invalid Array cast operation." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) behaves the same as new Array(x).  To cast a value to type Array use the expression x as Array instead of Array(x)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "The super() statement was not called within the constructor." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "The super() statement will be executed prior to entering this constructor.  Add a call to super() within the constructor if you want to explicitly control when it is executed." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_version, "Use Capabilities.version instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Focusrect, "For more information, see InteractiveObject.focusRect." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Highquality, "For more information, see Stage.quality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "For more information, see Stage.quality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "For more information, see Stage.quality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Quality, "For more information, see Stage.quality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Use the static property flash.media.SoundMixer.bufferTime instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "This functionality is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "For more information, see LoaderInfo.url." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "This functionality is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_NewLine, "Use '\n' for newline." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "For more information, see textField.maxScroll." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Level, "The concept of levels does not exist in ActionScript 3.0, which instead provides direct access to the display list. See the flash.display package for details." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Parent, "Use the parent property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Root, "This property has been removed. The closest equivalent is the Stage, which serves as the root of the ActionScript 3.0 display list." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Try declaring caller as an argument of the function instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Button_Target, "This functionality is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Use the parent property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "This functionality is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "For more information, see Sprite.hitArea." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Scroll, "For more information, see the scrollH and scrollV properties of flash.text.TextField class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Use MovieClip objects directly as arguments instead of paths." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Video_Height, "For more information, see Video.videoHeight." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Video_Width, "For more information, see Video.videoWidth." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp__Proto__, "For more information, see obsolete  __proto__." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Stage, "For more information, see DisplayObject.stage." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Use the registerClass() method in the flash.net package instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_random, "Use Math.random() instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_chr, "Use String.fromCharCode() instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Use String.fromCharCode() instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ord, "Use String.charCodeAt() instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_mbord, "Use String.charCodeAt() instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_substring, "Use the String.substr method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Use the String.substr method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_length, "Use the length property of the argument instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_mblength, "Use the length property of the argument instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ASNative, "For more information, see changes to ASnative." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Set properties directly on the instance using dot (.) notation instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Access properties directly using dot (.) notation instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Set properties directly on the instance using dot (.) notation instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_asfunction, "For more information, see TextEvent.LINK and addEventListener()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "This method has moved to the flash.utils package." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Replaced by new MovieClip class constructor function." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Moved to flash.system package. Also, please see flash.external.ExternalInterface class for Javascript/ActionScript communication." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_getURL, "For equivalent functionality, see flash.net.URLLoader.  The flash.net package also contains package-level functions navigateToURL() and sendToURL()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "For more information, see MovieClip.gotoAndPlay()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "For more information, see MovieClip.gotoAndStop()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_play, "For more information, see MovieClip.play()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_print, "For more information, see PrintJob.start()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "For more information, see PrintJob." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "For more information, see PrintJob." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_printNum, "For more information, see PrintJob." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Use Container.removeChild(childName). For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Moved to the flash.utils package.  Consider using the Timer class instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "For more information, see MovieClip.nextFrame()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_startDrag, "For more information, see MovieClip.startDrag()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_stop, "For more information, see MovieClip.stop()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "For more information, see Sound.stopAllSounds()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "For more information, see MovieClip.stopDrag()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Use the dot (.) operator or the with statement instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "For more information, see DisplayObject.stage and Stage.quality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Use DisplayObjectContainer.removeChild(childName) instead. For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Use DisplayObjectContainer.removeChild(childName) instead. For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "This function is no longer a global function, but is still available as a method of the TimerEvent, MouseEvent, and KeyboardEvent classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "For more information, see Video.attachNetStream, Video.attachCamera." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Use the URLLoader class to perform loading and pass the result to StyleSheet.parseCSS()" );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "In ActionScript 3.0 all classes are registered by default.  If you are using AMF, see flash.utils.registerClassAlias() for more information." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Use accessor properties (get/set functions) or the flash.utils.Proxy class for similar functionality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Use accessor properties (get/set functions) or the flash.utils.Proxy class for similar functionality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "For more information, see MovieClip.loadMovie()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "For more information, see MovieClip.loadMovieNum()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "For more information, see Loader.load()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "For more information, see Loader.load()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "For more information, see addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "For more information, see removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "For more information, see addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "For more information, see removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "For more information, see addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "For more information, see removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "For more information, see addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "For more information, see removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Use SWF class to create sounds from library" );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onStatus, "The onStatus event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'status', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onID3, "The onID3 event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'id3', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onLoad, "The onLoad event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'load', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onSoundComplete, "The onSoundComplete event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'soundComplete', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onSetFocus, "The onSetFocus event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'focusIn', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onResize, "The onResize event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'resize', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onChanged, "The onChanged event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'change', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onKillFocus, "The onKillFocus event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'focusOut', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onScroller, "The onScroller event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'scroll', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onMouseDown, "The onMouseDown event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseDown', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onMouseUp, "The onMouseUp event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseUp', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onMouseMove, "The onMouseMove event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseMove', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onMouseWheel, "The onMouseWheel event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseWheel', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onKeyDown, "The onKeyDown event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'keyDown', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onKeyUp, "The onKeyUp event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'keyUp', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onData, "The onData event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'data', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "The onHTTPStatus event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'httpStatus', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onDragOut, "The onDragOut event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseOut', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onDragOver, "The onDragOver event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseOver', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onPress, "The onPress event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseDown', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onRelease, "The onRelease event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'click', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "The onReleaseOutside event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseUp', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onRollOut, "The onRollOut event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseOut', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onRollOver, "The onRollOver event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseOver', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onActivity, "The onActivity event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'activity', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onSelect, "The onSelect event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'menuSelect', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onEnterFrame, "The onEnterFrame is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'enterFrame', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onUnload, "The onUnload event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'unload', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onLoadComplete, "The onLoadComplete is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'load', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onLoadError, "The onLoadError event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'error', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onLoadInit, "The onLoadInit event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'init', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onLoadProgress, "The onLoadProgress event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'progress', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onLoadStart, "The onLoadStart is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'start', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onClose, "The onClose event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'close', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onConnect, "The onConnect event handler is not triggered automatically by Flash player in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'connect', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onXML, "onXML is not triggered automatically by Flash Player in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'xml', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Use the property hasChildNodes instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "The XMLEvent class is obsolete, and the xml event is no longer dispatched. Only the data event is dispatched during file loading." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "The XMLDoc class has been renamed XMLDocument." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Use the Accessibility.active property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Use ActivityEvent.ACTIVITY constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Use DisplayObjectContainer.parent.getChildIndex instead. See help for the DisplayObjectContainer class, which is extended by MovieClip." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Use DisplayObjectContainer.parent.setChildIndex instead. See help for the DisplayObjectContainer class, which is extended by MovieClip." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Use DisplayObjectContainer.getChildAt instead. See help for the DisplayObjectContainer class, which is extended by MovieClip." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Use DisplayObjectContainer.numChildren instead. DisplayObjectContainer.addChild always adds the new child to index DisplayObjectContainer.numChildren." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Use the ByteArray.bytesAvailable property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Use the ByteArray.position property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Use the ByteArray.position property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Use the Camera.getCamera() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Use the Camera.currentFPS property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Use the Camera.keyFrameInterval property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Use the Camera.loopback property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Use the ColorTransform.color property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Use the ColorTransform.color property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Use the Container.textSnapshot property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Use the ContextMenu.clone() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Use the ContextMenu.forwardAndBack property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Use the ContextMenuItem.clone() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Use the CustomActions.actionsList property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Use the DataEvent.DATA constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Use the DisplayObject.scaleX property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Use the DisplayObject.scaleX property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Use the DisplayObject.scaleY property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Use the DisplayObject.scaleY property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Use the DisplayObject.mouseX property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Use the DisplayObject.mouseX property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Use the DisplayObject.mouseY property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Use the DisplayObject.mouseY property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "This feature is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "This feature is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Use the DisplayObject.name property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Use the DisplayObject.parent property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Use the DisplayObject.mask property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Use the DisplayObject.visible property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Use the DisplayObject.x property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Use the DisplayObject.y property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Use the DisplayObject.rotation property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Use the DisplayObject.alpha property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Use the DisplayObject.width property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Use the DisplayObject.height property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Use the ExternalInterface.available property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Use the ErrorEvent.ERROR constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Use the Event.isDefaultPrevented property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Use the Event.ACTIVATE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Use the Event.ADDED constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Use the Event.CANCEL constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Use the Event.CHANGE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Use the Event.CLOSE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Use the Event.COMPLETE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Use the Event.CONNECT constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Use the Event.DEACTIVATE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Use the Event.ENTER_FRAME constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Use the Event.ID3 constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Use the Event.INIT constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Use the Event.MOUSE_LEAVE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Use the Event.OPEN constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Use the Event.REMOVED constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Use the Event.RENDER constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Use the Event.RESIZE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Use the Event.SCROLL constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Use the Event.SELECT constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Use the Event.SOUND_COMPLETE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Use the Event.TAB_CHILDREN_CHANGE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Use the Event.TAB_ENABLED_CHANGE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Use the Event.TAB_INDEX_CHANGE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Use the Event.UNLOAD constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Use the FocusEvent.FOCUS_IN constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Use the FocusEvent.FOCUS_OUT constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Use the FocusEvent.KEY_FOCUS_CHANGE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Use the FocusEvent.MOUSE_FOCUS_CHANGE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Use the Graphics.beginBitmapFill() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Use the BitmapFilter.quality property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Use KeyboardEvent.charCode instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Use KeyboardEvent.keyCode instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "For more information, see the KeyboardEvent class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "For more information, see KeyboardEvent.ctrlKey, KeyboardEvent.altKey, and KeyboardEvent.shiftKey." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Use the PAGE_DOWN constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Use the PAGE_UP constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Use the DELETE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Use the CAPS_LOCK constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Use one of the NUMPAD_0 -> NUMPAD_9 constants instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Use the InteractiveObject.focusRect property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Use the InteractiveObject.contextMenu property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Use the KeyboardEvent.charCode property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Use the KeyboardEvent.keyCode property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Use the Loader.contentLoaderInfo property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "This feature is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "This feature is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Use the LoaderInfo.loaderURL property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Use the LocalConnection.domain property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Use the MenuEvent.contextMenuOwner property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Use the Microphone.getMicrophone() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "If the MovieClip subclass name is A use var mc= new A(); addChild(mc). For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Use var mc= new MovieClip(); addChild(mc). For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Use var tf= new TextField(); addChild(mc). For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Use Container.removeChild(childName). For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Use var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));. For more information, see the Loader and DisplayObjectContainer classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Use DisplayObjectContainer.removeChild(childName) instead. For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Use DisplayObjectContainer.removeChild(childName) instead. For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Use DisplayObjectContainer.parent.getChildIndex instead. For more information, see the DisplayObjectContainer class, is extended by MovieClip." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Use DisplayObjectContainer.parent.setChildIndex instead. For more information, see the DisplayObjectContainer class, which is extended by MovieClip." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Use DisplayObjectContainer.getChildAt instead. For more information, see the DisplayObjectContainer class, which is extended by MovieClip." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Use DisplayObjectContainer.numChildren instead. DisplayObjectContainer.addChild always adds the new child to index DisplayObjectContainer.numChildren." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "For more information, see DisplayObject.addChild." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "For more information, see LoaderInfo.bytesLoaded and the Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "For more information, see LoaderInfo.bytesTotal and the Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "For equivalent functionality, see flash.net.URLLoader.  The flash.net package also contains package-level functions navigateToURL() and sendToURL()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "For more information, see LoaderInfo.url and the Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "For more information, see LoaderInfo.url and the Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Use the MovieClip.mask property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "For more information, see LoaderInfo.swfVersion and the Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Use the MovieClip.currentFrame property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Use the MovieClip.framesLoaded property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Use the MovieClip.totalFrames property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "For more information, see displayObjectInstance.root." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "For more information, see displayObjectInstance.root." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Use the static propery flash.media.SoundMixer.bufferTime instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Use the NetStream.bufferTime property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Use the NetStream.currentFPS property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Use the NetStream.videoCodec property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Use the NetStream.audioCodec property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Use the ProductManager.isInstalled property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Use the ProductManager.installedVersion property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Use the ProductManager.isRunning property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Use the Point.add() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Use the Proxy.deleteDescendants property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Use the heapDump() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Use the ProgressEvent.bytesLoaded property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Use the ProgressEvent.bytesTotal property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Use the Rectangle.isEmpty property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Use the SoundTransform.pan property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Use the Sockect.bytesAvailable property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Use the SharedObject.size property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Use the SharedObject.fps property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "This is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Use the Sprite.constructChildren() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Use the Sprite.dropTarget property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Use the Stage.focus property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Use the Stage.focus property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Use the Stage.showDefaultContextMenu property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Use the StyleSheet.styleNames property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Use an instance of URLLoader to load the StyleSheet data, and then pass the loaders data to the StyleSheet.parseCSS method. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Use an instance of URLLoader to load the StyleSheet data, and then pass the loaders data to the StyleSheet.parseCSS method. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Use an instance of URLLoader to load the StyleSheet data, and then pass the loaders data to the StyleSheet.parseCSS method. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Use an instance of URLLoader to load the StyleSheet data, and then pass the loaders data to the StyleSheet.parseCSS method. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Use an instance of URLLoader to load the StyleSheet data, and then pass the loaders data to the StyleSheet.parseCSS method. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Use the IME.enabled property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Use the IME.enabled property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Use the IME.instance property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Use the IME.conversionMode property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Use the IME.conversionMode property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Use the System.vmVersion property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Use the SWFLoaderInfo.swfVersion property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Use the SWFLoaderInfo.actionScriptVersion property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Use the TextField.defaultTextFormat property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Use the TextField.defaultTextFormat property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Use DisplayObjectContainer.parent.getChildIndex instead. For more information, see the DisplayObjectContainer class, which MovieClip extends." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Use DisplayObjectContainer.parent.setChildIndex instead. For more information, see the DisplayObjectContainer class, which MovieClip extends." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Use DisplayObjectContainer.getChildAt instead. For more information, see the DisplayObjectContainer class, which MovieClip extends." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Use DisplayObjectContainer.numChildren instead.  DisplayObjectContainer.addChild always adds the new child to index DisplayObjectContainer.numChildren." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Use the TextField.replaceSelectedText() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Use the TextField.getLineIndexOfChar() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Use the TextField.selectionBeginIndex property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Use the TextField.selectionEndIndex property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Use the TextField.caretIndex property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Use the Font.enumerateFonts() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Use the TextField.maxScrollV property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Use the TextField.scrollH property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Use the TextField.maxScrollH property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Use the TextField.defaultTextFormat property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Create a temporary TextField and use TextField.getLineMetrics instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Use the TextSnapshot.charCount property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Use the navigateToURL() method in the flash.net package instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Use the sendToURL() method in the flash.net package instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Use the URLLoader.dataFormat property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Use the URLStream.bytesAvailable property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "This property is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Use the URLRequest.applicationDomain property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "To add request headers, set the URLRequest.requestHeaders property to an array of URLRequestHeader objects." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Use an instance of URLLoader to load the XML file, then pass the URLLoaders data to the XMLDocuments constructor. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Use the sendToURL() method in the flash.net package instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Set a URLRequest object postData property and use it with a URLLoader object to load the XML file.  Pass the URLLoaders data to the XMLDocuments constructor. For more information, see the URLLoader, URLRequest and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Use an instance of URLLoader to load the XML file, then pass the URLLoaders data to the XMLDocuments constructor. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "To add request headers, set the URLRequest.requestHeaders property to an array of URLRequestHeader objects." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "For more information, see URLLoader.bytesLoaded and the URLLoader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "For more information, see URLLoader.bytesTotal and the URLLoader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Use an instance of URLLoader to load the XML file, then pass the loaders data to the StyleSheet.parseCSS method. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Use the URLRequest.contentType property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Check for the possible exceptions thrown by the XMLDocument constructor or the XMLDocument.parseXML method instead. For more information, see XMLDocument." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Button, "The Button class has been renamed SimpleButton." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Container, "The Container class has been renamed DisplayObjectContainer." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Image, "The Image class has been renamed BitmapData." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "The ImageFilter class has been renamed BitmapFilter." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "The ImageSprite class has been renamed Bitmap." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "The ImageLoaderInfo class has been renamed BitmapLoaderInfo." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "The ImeEvent class has been renamed IMEEvent." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Key, "The Key class has been renamed Keyboard." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "The LineMetrics class has been renamed TextLineMetrics." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_LoadVars, "For more information, see the URLVariables class, the URLRequest.urlVariables and URLRequest.postData properties, and the URLLoader.dataFormat property." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "The MenuEvent class has been renamed ContextMenuEvent." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "The SystemCapabilities class has been renamed Capabilities." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Use the TextField.getLineMetrics property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Button, "The Button class has been renamed SimpleButton." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Container, "The Container class has been renamed DisplayObjectContainer." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Image, "The Image class has been renamed BitmapData." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "The ImageFilter class has been renamed BitmapFilter." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "The ImageSprite class has been renamed Bitmap." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "The ImageLoaderInfo class has been renamed BitmapLoaderInfo." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "The ImeEvent class has been renamed IMEEvent." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Key, "The Key class has been renamed Keyboard." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "The LineMetrics class has been renamed TextLineMetrics." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "For more information, see the URLVariables class, the URLRequest.urlVariables and URLRequest.postData properties, and the URLLoader.dataFormat property." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "The MenuEvent class has been renamed ContextMenuEvent." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "The SystemCapabilities class has been renamed Capabilities." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Use the TextField.getLineMetrics property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "For more information, see help for the Proxy class, which offers similar functionality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Use the XMLUI.getProperty method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Use the XMLUI.setProperty method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Use the DisplayObject.accessibilityProperties property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Use the DisplayObject.scale9Grid property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Use the Graphics.drawOval method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Use the NetConnection.connected property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Use the Socket.connected property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Use the URLStream.connected property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Use the SyncEvent.changeList property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Use the TextField.scrollV property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Use the TextField.bottomScrollV property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Use the BitmapDataChannel.RED constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Use the BitmapDataChannel.GREEN constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Use the BitmapDataChannel.BLUE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Use the BitmapDataChannel.ALPHA constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Use the is operator instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Use the flash.system.Security.showSettings method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Use the System.useCodePage property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Use the flash.events.EventDispatcher class instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Use the static propery flash.media.SoundMixer.bufferTime instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Create a new instance of the bitmap library symbol class, i.e. new myBitmapName(), instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "For more information, see Loader.load()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "The MovieClipLoader class has been replaced by the flash.display.Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "The MovieClipLoader class has been replaced by the flash.display.Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "For more information, see addEventListener(eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "For more information, see removeEventListener(eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Use the flash.system.IMEConversionMode.ALPHANUMERIC_FULL constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Use the flash.system.IMEConversionMode.ALPHANUMERIC_HALF constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Use the flash.system.IMEConversionMode.CHINESE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Use the flash.system.IMEConversionMode.JAPANESE_HIRAGANA constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Use the flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Use the flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Use the flash.system.IMEConversionMode.KOREAN constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Use the flash.system.IMEConversionMode.UNKNOWN constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "For more information, see addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "For more information, see removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onCancel, "The onCancel event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( cancel, onCancel)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "There is no direct replacement. The willTrigger() method can be used to tell if any listeners have been registered." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onIMEComposition, "The onIMEComposition event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( imeComposition, handlerName)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "For more information, see LoaderInfo.url and the Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Use the getFullYear() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Use the setFullYear() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Use the getUTCFullYear() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Use the rate property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Selection, "The Selection class has been removed. For more information, see the addEventListener method of the class you want selection information from." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Selection, "The Selection class has been removed. For more information, see the addEventListener method of the class you want selection information from." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Use the gain property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Color values can be assigned directly using the ColorTransform class constructor or properties." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Color values can be assigned directly using the ColorTransform class constructor or properties." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "See help for the focus related properties of the flash.display.InteractiveObject class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "See help for the flash.display.Graphics.beginBitmapFill method." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "See help for the flash.display.DisplayObject.hitTestObject() method." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "See help for the addChild() method." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Use the load() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Use flash.media.SoundChannel.leftPeak and flash.media.SoundChannel.rightPeak to monitor and control the amplitude of a sound channel." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Use the soundTransform property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Use the SoundTransform.pan property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Use the SoundTransform.pan property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Use the bytesLoaded property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Use the bytesTotal property instead." );
        warningConstantsEN[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Inefficient use of += on a TextField." );
        warningConstantsEN[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Appending text to a TextField using += is many times slower than using the TextField.appendText() method." );
        warningConstantsEN[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Possible missing parentheses." );
        warningConstantsEN[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Function value used where type %s was expected.  Possibly the parentheses () are missing after this function reference." );
        warningConstantsEN[index++] = new AscWarning(kWarning_InstanceOfChanges, "Use of the instanceof operator." );
        warningConstantsEN[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "The instanceof operator is deprecated, use the is operator instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "The allowDomain() event handler is now a standard method, rather than an event callback. For more information, see the new LocalConnection.allowDomain method." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "The allowInsecureDomain() event handler is now a standard method, rather than an event callback. For more information, see the new LocalConnection.allowInsecureDomain method." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_call, "The global call() method is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Color, "The Color class has been removed. Use the flash.geom.ColorTransform class for equivalent functionality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Color, "The Color class has been removed. Use the flash.geom.ColorTransform class for equivalent functionality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF files always use exact domain matching rules." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_capabilities, "The capabilities class has been renamed Capabilities." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_capabilities, "The capabilities class has been renamed Capabilities." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "For more information, see addEventListener(eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "For more information, see removeEventListener(eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onComplete, "The onComplete event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ('complete', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onHTTPError, "The onHTTPError event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ('httpError', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onIOError, "The onIOError event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ('ioError', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onProgress, "The onProgress event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ('progress', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onSecurityError, "The onSecurityError event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ('securityError', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onOpen, "The onOpen event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ('open', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Possible usage of the ActionScript 2.0 XML class." );
        warningConstantsEN[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Migration issue: The ActionScript 2.0 XML class has been renamed XMLDocument." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadDateCast, "Invalid Date cast operation." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) behaves the same as new Date().toString(). To cast a value to type Date use \"x as Date\" instead of Date(x)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ImportHidesClass, "Importing a package by the same name as the current class will hide that class identifier in this scope." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Importing a package by the same name as the current class will hide that class identifier in this scope." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "More than one argument has the same name." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "More than one argument named '%s' specified.  References to that argument will always resolve to the last one." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Use the Rectangle.containsRect method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_eval, "This functionality has been removed." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_getVersion, "This functionality has been replaced by the flash.system.Capabilities.version property." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "This functionality has been replaced by the flash.display.MovieClip.framesLoaded property." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp__global, "The _global property has been removed.  For equivalent functionality, use a static member of a class." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadBoolAssignment, "Non-Boolean value used where a Boolean value was expected." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "%s used where a Boolean value was expected.  The expression will be type coerced to Boolean." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadES3TypeProp, "Unknown property." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s is not a recognized property of the dynamic class %s." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Unknown method." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s is not a recognized method of the dynamic class %s." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Duplicate variable definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Duplicate variable definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Definition name is the same as an imported package name.  Unqualified references to that name will resolve to the package and not the definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Definition name is the same as an imported package name.  Unqualified references to that name will resolve to the package and not the definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Possible attempt to delete a fixed property." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "The declared property %s cannot be deleted. To free associated memory, set its value to null." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Deprecated_specific, "'%s' has been deprecated." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "'%s' has been deprecated.  Please use '%s'." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "'%s' has been deprecated since %s.  Please use '%s'." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "'%s' has been deprecated since %s." );
   }

   static final AscWarning[] warningConstantsCN= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsCN() 
   {
      int index=0;
        warningConstantsCN[index++] = new AscWarning(kWarning_NoTypeDecl, "缺少类型声明。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s“%s”没有类型声明。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadUndefinedComparision, "与 undefined 的比较不合逻辑。只有无类型变量(或 * 类型变量)可以是 undefined。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "%s 类型变量不能是 undefined。在比较之前，值 undefined 会被强制转换为类型 %s。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "new 表达式中所用的函数有返回值。结果将是函数的返回值，而不是该函数的一个新实例。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "迁移问题: new %s 的结果将是 %s 的返回值，而不是该函数的一个新实例。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "在 ActionScript 3.0 中，不含参数的 Boolean() 返回 false。在 ActionScript 2.0 中，Boolean() 返回 undefined。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "使用不含参数的 Boolean()。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NumberFromStringChanges, "在 ActionScript 3.0 中，空白将被忽略，并且当参数为 '' 时返回 0。在 ActionScript 2.0 中，当参数为 '' 或包含空白时，Number() 将返回 NaN。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "迁移问题: 使用空字符串参数调用 Number('') 函数时，在 ActionScript 3.0 中返回 0，在 ActionScript 2.0 中返回 NaN。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString() 格式已更改。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "迁移问题: Array.toString() 对 null 和 undefined 元素的处理方式已更改。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DepricatedPropertyError, "不支持的 ActionScript 2.0 属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "迁移问题: 不再支持 %s 属性。%s。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DepricatedFunctionError, "不支持的 ActionScript 2.0 函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "迁移问题: 不再支持 %s 方法。%s。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ChangesInResolve, "不再支持 __resolve。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "迁移问题: 不再支持 __resolve。对类似的功能使用新的 Proxy 类。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_LevelNotSupported, "不再支持 _level。有关详细信息，请参阅 flash.display 包。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "迁移问题: 不再支持 _level。有关详细信息，请参阅 flash.display 包。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ClassIsSealed, "类为密封类。不能为其动态的添加成员。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "迁移问题: %s 不是动态类。不能为实例动态的添加成员。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ScopingChangeInThis, "更改了 this 关键字的作用范围。从某个类的实例中提取的类方法始终会将 this 解析还原为该实例。在 ActionScript 2.0 中，会根据调用该方法的位置动态查找 this。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "迁移问题: 方法 %s 在 ActionScript 3.0 中的作用将因 this 关键字作用范围的变化而有所不同。有关详细信息，请参阅警告条目 1083。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "缺少 namespace 声明(例如，变量未定义为 public、private 等)。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s 的作用范围将是默认的 namespace: %s 内部。它在此包的外部不可见。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 按随机顺序迭代“for x in target”语句中的对象属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "迁移问题: ActionScript 3.0 按随机顺序迭代“for x in target”语句中的对象属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_InternalError, "编译器中出现内部错误。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_InternalError_specific, "错误代码: %s。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "没有将 EventHandler 作为一个监听器添加进来。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "迁移问题: %s" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NegativeUintLiteral, "负值在被赋予 uint 数据类型以后将变成大的正值。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "在应为 uint (非负)值的地方使用了负值。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadNullComparision, "与 null 的比较不合逻辑。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadNullComparision_specific, "与 null 的比较不合逻辑。%s 类型的变量不能为 null。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadNaNComparision, "与 NaN 的比较不合逻辑。由于 NaN != NaN，因此任何涉及 NaN 的比较运算的结果都将为 false。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "与 NaN 的比较不合逻辑。此语句的结果总是 false。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "作为条件的赋值。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "作为条件的赋值。您指的是 == 而不是 = ?" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadNullAssignment, "不可能进行 null 赋值。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "在应为 %s 值的地方使用了 null。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NoConstructor, "缺少构造函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NoConstructor_specific, "没有为类 %s 指定构造函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "空的语句。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "空的语句找到了应使用代码块的位置。是否意外键入了“;”？" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ConstNotInitialized, "常数未经初始化。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "常数未经初始化。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadArrayCast, "Array 转换操作可能无效。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) 的作用像新的 Array(x) 一样。要将某个值转换为 Array 类型，请将表达式 x 作为 Array 而不是 Array(x) 使用。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "没有在构造函数内调用 super() 语句。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "在进入此构造函数之前将执行 super() 语句。如果希望显式控制执行 super() 语句的时间，请在构造函数中添加对该语句的调用。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_version, "请改用 Capabilities.version。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Focusrect, "有关详细信息，请参阅 InteractiveObject.focusRect。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Highquality, "有关详细信息，请参阅 Stage.quality。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "有关详细信息，请参阅 Stage.quality。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "有关详细信息，请参阅 Stage.quality。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Quality, "有关详细信息，请参阅 Stage.quality。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "请改用静态属性 flash.media.SoundMixer.bufferTime。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "有关详细信息，请参阅 LoaderInfo.url。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_NewLine, "请用 '\n' 作为换行符。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "有关详细信息，请参阅 textField.maxScroll。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Level, "ActionScript 3.0 中不存在级别的概念，但提供对显示列表的直接访问。有关详细信息，请参阅 flash.display 包。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Parent, "请改用 parent 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Root, "此属性已被删除。最接近的等效项是 Stage，它可以作为 ActionScript 3.0 显示列表的根。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "请尝试改为将 caller 声明为函数的参数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Button_Target, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "请改用 parent 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "有关详细信息，请参阅 Sprite.hitArea。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Scroll, "有关详细信息，请参阅 flash.text.TextField 类的 scrollH 和 scrollV 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TargetPath, "请直接将 MovieClip 对象作为参数而不是路径使用。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Video_Height, "有关详细信息，请参阅 Video.videoHeight。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Video_Width, "有关详细信息，请参阅 Video.videoWidth。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp__Proto__, "有关详细信息，请参阅已废弃的 __proto__。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Stage, "有关详细信息，请参阅 DisplayObject.stage。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp__remoteClass, "请改用 flash.net 包中的 registerClass() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_random, "请改用 Math.random()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_chr, "请改用 String.fromCharCode()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_mbchr, "请改用 String.fromCharCode()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ord, "请改用 String.charCodeAt()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_mbord, "请改用 String.charCodeAt()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_substring, "请改用 String.substr 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "请改用 String.substr 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_length, "请改用参数的 length 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_mblength, "请改用参数的 length 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ASNative, "有关详细信息，请参阅对 ASnative 的更改。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_addProperty, "请改为使用点 (.) 记号直接在实例上设置属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_getProperty, "请改为使用点 (.) 记号直接访问属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_setProperty, "请改为使用点 (.) 记号直接在实例上设置属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_asfunction, "有关详细信息，请参阅 TextEvent.LINK 和 addEventListener()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "此方法已移至 flash.utils 包。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "已被新的 MovieClip 类构造函数所取代。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_fscommand, "已移至 flash.system 包。此外，请参阅 Javascript/ActionScript 通信的 flash.external.ExternalInterface 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_getURL, "有关等效的功能，请参阅 flash.net.URLLoader。flash.net 包中还包含了包级函数 navigateToURL() 和 sendToURL()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "有关详细信息，请参阅 MovieClip.gotoAndPlay()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "有关详细信息，请参阅 MovieClip.gotoAndStop()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_play, "有关详细信息，请参阅 MovieClip.play()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_print, "有关详细信息，请参阅 PrintJob.start()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "有关详细信息，请参阅 PrintJob。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "有关详细信息，请参阅 PrintJob。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_printNum, "有关详细信息，请参阅 PrintJob。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "请使用 Container.removeChild(childName)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_setInterval, "已移至 flash.utils 包。请考虑改用 Timer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "有关详细信息，请参阅 MovieClip.nextFrame()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_startDrag, "有关详细信息，请参阅 MovieClip.startDrag()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_stop, "有关详细信息，请参阅 MovieClip.stop()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "有关详细信息，请参阅 Sound.stopAllSounds()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "有关详细信息，请参阅 MovieClip.stopDrag()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "请改用点 (.) 运算符或 with 语句。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "有关详细信息，请参阅 DisplayObject.stage 和 Stage.quality。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "请改用 DisplayObjectContainer.removeChild(childName)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "请改用 DisplayObjectContainer.removeChild(childName)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "此函数不再是全局函数，但仍可作为 TimerEvent、MouseEvent 和 KeyboardEvent 类的方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "有关详细信息，请参阅 Video.attachNetStream 和 Video.attachCamera。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "请使用 URLLoader 类来执行加载并将结果传递给 StyleSheet.parseCSS()" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "在 ActionScript 3.0 中，默认情况下对所有类进行注册。如果您使用的是 AMF，请参阅 flash.utils.registerClassAlias() 以了解详细信息。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "请使用存取器属性(get/set 函数)或 flash.utils.Proxy 类来实现类似功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "请使用存取器属性(get/set 函数)或 flash.utils.Proxy 类来实现类似功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "有关详细信息，请参阅 MovieClip.loadMovie()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "有关详细信息，请参阅 MovieClip.loadMovieNum()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "有关详细信息，请参阅 Loader.load()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "有关详细信息，请参阅 Loader.load()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "使用 SWF 类从库中创建声音" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onStatus, "在 ActionScript 3.0 中，onStatus 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('status', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onID3, "在 ActionScript 3.0 中，onID3 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('id3', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onLoad, "在 ActionScript 3.0 中，onLoad 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('load', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onSoundComplete, "在 ActionScript 3.0 中，onSoundComplete 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('soundComplete', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onSetFocus, "在 ActionScript 3.0 中，onSetFocus 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('focusIn', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onResize, "在 ActionScript 3.0 中，onResize 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('resize', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onChanged, "在 ActionScript 3.0 中，onChanged 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('change', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onKillFocus, "在 ActionScript 3.0 中，onKillFocus 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('focusOut', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onScroller, "在 ActionScript 3.0 中，onScroller 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('scroll', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onMouseDown, "在 ActionScript 3.0 中，onMouseDown 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseDown', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onMouseUp, "在 ActionScript 3.0 中，onMouseUp 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseUp', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onMouseMove, "在 ActionScript 3.0 中，onMouseMove 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseMove', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onMouseWheel, "在 ActionScript 3.0 中，onMouseWheel 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseWheel', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onKeyDown, "在 ActionScript 3.0 中，onKeyDown 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('keyDown', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onKeyUp, "在 ActionScript 3.0 中，onKeyUp 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('keyUp', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onData, "在 ActionScript 3.0 中，onData 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('data', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "在 ActionScript 3.0 中，onHTTPStatus 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('httpStatus', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onDragOut, "在 ActionScript 3.0 中，onDragOut 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseOut', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onDragOver, "在 ActionScript 3.0 中，onDragOver 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseOver', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onPress, "在 ActionScript 3.0 中，onPress 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseDown', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onRelease, "在 ActionScript 3.0 中，onRelease 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('click', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "在 ActionScript 3.0 中，onReleaseOutside 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseUp', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onRollOut, "在 ActionScript 3.0 中，onRollOut 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseOut', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onRollOver, "在 ActionScript 3.0 中，onRollOver 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseOver', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onActivity, "在 ActionScript 3.0 中，onActivity 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('activity', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onSelect, "在 ActionScript 3.0 中，onSelect 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('menuSelect', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onEnterFrame, "在 ActionScript 3.0 中，onEnterFrame 不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('enterFrame', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onUnload, "在 ActionScript 3.0 中，onUnload 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('unload', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onLoadComplete, "在 ActionScript 3.0 中，onLoadComplete 不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('load', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onLoadError, "在 ActionScript 3.0 中，onLoadError 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('error', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onLoadInit, "在 ActionScript 3.0 中，onLoadInit 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('init', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onLoadProgress, "在 ActionScript 3.0 中，onLoadProgress 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('progress', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onLoadStart, "在 ActionScript 3.0 中，onLoadStart 不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('start', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onClose, "在 ActionScript 3.0 中，onClose 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('close', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onConnect, "在 ActionScript 3.0 中，onConnect 事件处理函数不是由 Flash Player 自动触发。必须首先使用 addEventListener ('connect', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onXML, "在 ActionScript 3.0 中，onXML 不是由 Flash Player 自动触发的。必须首先使用 addEventListener ('xml', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "请改用属性 hasChildNodes。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "XMLEvent 类已废弃，xml 事件不再被调度。文件加载期间仅调度 data 事件。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "XMLDoc 类已更名为 XMLDocument。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "请改用 Accessibility.active 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "请改用 ActivityEvent.ACTIVITY 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "请改用 DisplayObjectContainer.parent.getChildIndex。请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "请改用 DisplayObjectContainer.parent.setChildIndex。请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "请改用 DisplayObjectContainer.getChildAt。请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "请改用 DisplayObjectContainer.numChildren。DisplayObjectContainer.addChild 总是会添加新的子项来索引 DisplayObjectContainer.numChildren。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "请改用 ByteArray.bytesAvailable 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "请改用 ByteArray.position 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "请改用 ByteArray.position 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "请改用 Camera.getCamera() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "请改用 Camera.currentFPS 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "请改用 Camera.keyFrameInterval 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "请改用 Camera.loopback 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "请改用 ColorTransform.color 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "请改用 ColorTransform.color 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "请改用 Container.textSnapshot 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "请改用 ContextMenu.clone() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "请改用 ContextMenu.forwardAndBack 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "请改用 ContextMenuItem.clone() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "请改用 CustomActions.actionsList 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "请改用 DataEvent.DATA 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "请改用 DisplayObject.scaleX 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "请改用 DisplayObject.scaleX 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "请改用 DisplayObject.scaleY 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "请改用 DisplayObject.scaleY 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "请改用 DisplayObject.mouseX 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "请改用 DisplayObject.mouseX 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "请改用 DisplayObject.mouseY 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "请改用 DisplayObject.mouseY 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "请改用 DisplayObject.name 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "请改用 DisplayObject.parent 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "请改用 DisplayObject.mask 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "请改用 DisplayObject.visible 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "请改用 DisplayObject.x 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "请改用 DisplayObject.y 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "请改用 DisplayObject.rotation 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "请改用 DisplayObject.alpha 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "请改用 DisplayObject.width 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "请改用 DisplayObject.height 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "请改用 ExternalInterface.available 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "请改用 ErrorEvent.ERROR 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "请改用 Event.isDefaultPrevented 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "请改用 Event.ACTIVATE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "请改用 Event.ADDED 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "请改用 Event.CANCEL 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "请改用 Event.CHANGE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "请改用 Event.CLOSE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "请改用 Event.COMPLETE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "请改用 Event.CONNECT 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "请改用 Event.DEACTIVATE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "请改用 Event.ENTER_FRAME 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "请改用 Event.ID3 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "请改用 Event.INIT 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "请改用 Event.MOUSE_LEAVE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "请改用 Event.OPEN 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "请改用 Event.REMOVED 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "请改用 Event.RENDER 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "请改用 Event.RESIZE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "请改用 Event.SCROLL 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "请改用 Event.SELECT 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "请改用 Event.SOUND_COMPLETE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "请改用 Event.TAB_CHILDREN_CHANGE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "请改用 Event.TAB_ENABLED_CHANGE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "请改用 Event.TAB_INDEX_CHANGE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "请改用 Event.UNLOAD 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "请改用 FocusEvent.FOCUS_IN 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "请改用 FocusEvent.FOCUS_OUT 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "请改用 FocusEvent.KEY_FOCUS_CHANGE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "请改用 FocusEvent.MOUSE_FOCUS_CHANGE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "请改用 Graphics.beginBitmapFill() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "请改用 BitmapFilter.quality 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "请改用 KeyboardEvent.charCode。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "请改用 KeyboardEvent.keyCode。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "有关详细信息，请参阅 KeyboardEvent 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "有关详细信息，请参阅 KeyboardEvent.ctrlKey、KeyboardEvent.altKey 和 KeyboardEvent.shiftKey。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "请改用 PAGE_DOWN 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "请改用 PAGE_UP 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "请改用 DELETE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "请改用 CAPS_LOCK 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "请改用 NUMPAD_0 -> NUMPAD_9 常数中的一个。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "请改用 InteractiveObject.focusRect 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "请改用 InteractiveObject.contextMenu 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "请改用 KeyboardEvent.charCode 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "请改用 KeyboardEvent.keyCode 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "请改用 Loader.contentLoaderInfo 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "请改用 LoaderInfo.loaderURL 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "请改用 LocalConnection.domain 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "请改用 MenuEvent.contextMenuOwner 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "请改用 Microphone.getMicrophone() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "如果 MovieClip 子类名为 A，请使用 var mc= new A(); addChild(mc)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "请使用 var mc= new MovieClip(); addChild(mc)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "请使用 var tf= new TextField(); addChild(mc)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "请使用 Container.removeChild(childName)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "请使用 var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));。有关详细信息，请参阅 Loader 和 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "请改用 DisplayObjectContainer.removeChild(childName)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "请改用 DisplayObjectContainer.removeChild(childName)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "请改用 DisplayObjectContainer.parent.getChildIndex。有关详细信息，请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "请改用 DisplayObjectContainer.parent.setChildIndex。有关详细信息，请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "请改用 DisplayObjectContainer.getChildAt。有关详细信息，请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "请改用 DisplayObjectContainer.numChildren。DisplayObjectContainer.addChild 总是会添加新的子项来索引 DisplayObjectContainer.numChildren。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "有关详细信息，请参阅 DisplayObject.addChild。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "有关详细信息，请参阅 LoaderInfo.bytesLoaded 和 Loader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "有关详细信息，请参阅 LoaderInfo.bytesTotal 和 Loader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "有关等效的功能，请参阅 flash.net.URLLoader。flash.net 包中还包含了包级函数 navigateToURL() 和 sendToURL()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "有关详细信息，请参阅 LoaderInfo.url 和 Loader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "有关详细信息，请参阅 LoaderInfo.url 和 Loader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "请改用 MovieClip.mask 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "有关详细信息，请参阅 LoaderInfo.swfVersion 和 Loader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "请改用 MovieClip.currentFrame 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "请改用 MovieClip.framesLoaded 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "请改用 MovieClip.totalFrames 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "有关详细信息，请参阅 displayObjectInstance.root。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "有关详细信息，请参阅 displayObjectInstance.root。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "请改用静态属性 flash.media.SoundMixer.bufferTime。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "请改用 NetStream.bufferTime 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "请改用 NetStream.currentFPS 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "请改用 NetStream.videoCodec 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "请改用 NetStream.audioCodec 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "请改用 ProductManager.isInstalled 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "请改用 ProductManager.installedVersion 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "请改用 ProductManager.isRunning 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "请改用 Point.add() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "请改用 Proxy.deleteDescendants 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "请改用 heapDump() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "请改用 ProgressEvent.bytesLoaded 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "请改用 ProgressEvent.bytesTotal 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "请改用 Rectangle.isEmpty 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "请改用 SoundTransform.pan 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "请改用 Sockect.bytesAvailable 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "请改用 SharedObject.size 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "请改用 SharedObject.fps 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "不再支持此属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "请改用 Sprite.constructChildren() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "请改用 Sprite.dropTarget 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "请改用 Stage.focus 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "请改用 Stage.focus 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "请改用 Stage.showDefaultContextMenu 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "请改用 StyleSheet.styleNames 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "请使用 URLLoader 的实例加载 StyleSheet 数据，然后将加载程序数据传递给 StyleSheet.parseCSS 方法。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "请使用 URLLoader 的实例加载 StyleSheet 数据，然后将加载程序数据传递给 StyleSheet.parseCSS 方法。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "请使用 URLLoader 的实例加载 StyleSheet 数据，然后将加载程序数据传递给 StyleSheet.parseCSS 方法。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "请使用 URLLoader 的实例加载 StyleSheet 数据，然后将加载程序数据传递给 StyleSheet.parseCSS 方法。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "请使用 URLLoader 的实例加载 StyleSheet 数据，然后将加载程序数据传递给 StyleSheet.parseCSS 方法。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "请改用 IME.enabled 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "请改用 IME.enabled 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "请改用 IME.instance 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "请改用 IME.conversionMode 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "请改用 IME.conversionMode 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "请改用 System.vmVersion 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "请改用 SWFLoaderInfo.swfVersion 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "请改用 SWFLoaderInfo.actionScriptVersion 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "请改用 TextField.defaultTextFormat 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "请改用 TextField.defaultTextFormat 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "请改用 DisplayObjectContainer.parent.getChildIndex。有关详细信息，请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "请改用 DisplayObjectContainer.parent.setChildIndex。有关详细信息，请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "请改用 DisplayObjectContainer.getChildAt。有关详细信息，请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "请改用 DisplayObjectContainer.numChildren。DisplayObjectContainer.addChild 总是会添加新的子项来索引 DisplayObjectContainer.numChildren。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "请改用 TextField.replaceSelectedText() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "请改用 TextField.getLineIndexOfChar() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "请改用 TextField.selectionBeginIndex 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "请改用 TextField.selectionEndIndex 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "请改用 TextField.caretIndex 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "请改用 Font.enumerateFonts() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "请改用 TextField.maxScrollV 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "请改用 TextField.scrollH 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "请改用 TextField.maxScrollH 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "请改用 TextField.defaultTextFormat 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "请创建临时的 TextField 并改用 TextField.getLineMetrics。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "请改用 TextSnapshot.charCount 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "请改用 flash.net 包中的 navigateToURL() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "请改用 flash.net 包中的 sendToURL() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "请改用 URLLoader.dataFormat 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "请改用 URLStream.bytesAvailable 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "不再支持此属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "请改用 URLRequest.applicationDomain 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "要添加请求标头，请将 URLRequest.requestHeaders 属性设置为 URLRequestHeader 对象的数组。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "请使用 URLLoader 的实例加载 XML 文件，然后将 URLLoaders 数据传递给 XMLDocuments 构造函数。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "请改用 flash.net 包中的 sendToURL() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "请设置 URLRequest 对象的 postData 属性，然后将该属性与 URLLoader 对象配合使用以加载 XML 文件。将 URLLoaders 数据传递给 XMLDocuments 构造函数。有关详细信息，请参阅 URLLoader、URLRequest 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "请使用 URLLoader 的实例加载 XML 文件，然后将 URLLoaders 数据传递给 XMLDocuments 构造函数。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "要添加请求标头，请将 URLRequest.requestHeaders 属性设置为 URLRequestHeader 对象的数组。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "有关详细信息，请参阅 URLLoader.bytesLoaded 和 URLLoader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "有关详细信息，请参阅 URLLoader.bytesTotal 和 URLLoader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "请使用 URLLoader 的实例加载 XML 文件，然后将加载程序数据传递给 StyleSheet.parseCSS 方法。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "请改用 URLRequest.contentType 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "请检查 XMLDocument 构造函数或 XMLDocument.parseXML 方法可能引发的异常。有关详细信息，请参阅 XMLDocument。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Button, "Button 类已更名为 SimpleButton。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Container, "Container 类已更名为 DisplayObjectContainer。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Image, "Image 类已更名为 BitmapData。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "ImageFilter 类已更名为 BitmapFilter。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "ImageSprite 类已更名为 Bitmap。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "ImageLoaderInfo 类已更名为 BitmapLoaderInfo。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "ImeEvent 类已更名为 IMEEvent。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Key, "Key 类已更名为 Keyboard。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "LineMetrics 类已更名为 TextLineMetrics。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_LoadVars, "有关详细信息，请参阅 URLVariables 类、URLRequest.urlVariables 属性、URLRequest.postData 属性和 URLLoader.dataFormat 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "MenuEvent 类已更名为 ContextMenuEvent。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "SystemCapabilities 类已更名为 Capabilities。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextExtents, "请改用 TextField.getLineMetrics 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Button, "Button 类已更名为 SimpleButton。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Container, "Container 类已更名为 DisplayObjectContainer。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Image, "Image 类已更名为 BitmapData。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "ImageFilter 类已更名为 BitmapFilter。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "ImageSprite 类已更名为 Bitmap。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "ImageLoaderInfo 类已更名为 BitmapLoaderInfo。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "ImeEvent 类已更名为 IMEEvent。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Key, "Key 类已更名为 Keyboard。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "LineMetrics 类已更名为 TextLineMetrics。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "有关详细信息，请参阅 URLVariables 类、URLRequest.urlVariables 属性、URLRequest.postData 属性和 URLLoader.dataFormat 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "MenuEvent 类已更名为 ContextMenuEvent。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "SystemCapabilities 类已更名为 Capabilities。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "请改用 TextField.getLineMetrics 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "有关详细信息，请参阅提供类似功能的 Proxy 类的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "请改用 XMLUI.getProperty 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "请改用 XMLUI.setProperty 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "请改用 DisplayObject.accessibilityProperties 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "请改用 DisplayObject.scale9Grid 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "请改用 Graphics.drawOval 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "请改用 NetConnection.connected 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "请改用 Socket.connected 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "请改用 URLStream.connected 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "请改用 SyncEvent.changeList 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "请改用 TextField.scrollV 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "请改用 TextField.bottomScrollV 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "请改用 BitmapDataChannel.RED 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "请改用 BitmapDataChannel.GREEN 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "请改用 BitmapDataChannel.BLUE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "请改用 BitmapDataChannel.ALPHA 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_instanceof, "请改用 is 运算符。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "请改用 flash.system.Security.showSettings 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "请改用 System.useCodePage 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "请改用 flash.events.EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "请改用静态属性 flash.media.SoundMixer.bufferTime。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "请改为创建一个位图库元件类的新实例，即新的 myBitmapName()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "有关详细信息，请参阅 Loader.load()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "MovieClipLoader 类已被 flash.display.Loader 类所取代。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "MovieClipLoader 类已被 flash.display.Loader 类所取代。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "请改用 flash.system.IMEConversionMode.ALPHANUMERIC_FULL 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "请改用 flash.system.IMEConversionMode.ALPHANUMERIC_HALF 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "请改用 flash.system.IMEConversionMode.CHINESE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "请改用 flash.system.IMEConversionMode.JAPANESE_HIRAGANA 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "请改用 flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "请改用 flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "请改用 flash.system.IMEConversionMode.KOREAN 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "请改用 flash.system.IMEConversionMode.UNKNOWN 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onCancel, "在 ActionScript 3.0 中，onCancel 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener (cancel, onCancel) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "不存在直接替换。willTrigger() 方法可用于辨别是否已注册任何监听器。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onIMEComposition, "在 ActionScript 3.0 中，onIMEComposition 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener (imeComposition, handlerName) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "有关详细信息，请参阅 LoaderInfo.url 和 Loader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "请改用 getFullYear() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "请改用 setFullYear() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "请改用 getUTCFullYear() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "请改用 rate 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Selection, "Selection 类已被删除。有关详细信息，请参阅需要其中的 selection 信息的类的 addEventListener 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Selection, "Selection 类已被删除。有关详细信息，请参阅需要其中的 selection 信息的类的 addEventListener 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "请改用 gain 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "使用 ColorTransform 类构造函数或属性可以直接赋颜色值。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "使用 ColorTransform 类构造函数或属性可以直接赋颜色值。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "请参阅 flash.display.InteractiveObject 类的与焦点相关的属性的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "请参阅 flash.display.Graphics.beginBitmapFill 方法的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "请参阅 flash.display.DisplayObject.hitTestObject() 方法的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "请参阅 addChild() 方法的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "请改用 load() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "请使用 flash.media.SoundChannel.leftPeak 和 flash.media.SoundChannel.rightPeak 监控声道的幅度。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "请改用 soundTransform 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "请改用 SoundTransform.pan 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "请改用 SoundTransform.pan 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "请改用 bytesLoaded 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "请改用 bytesTotal 属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "在 TextField 中使用 += 的效率很低。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "与使用 TextField.appendText() 方法相比，使用 += 将文本追加到 TextField 要慢许多倍。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "可能缺少括号。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "在需要 %s 类型的地方使用了函数值。在此函数引用之后可能缺少括号 ()。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_InstanceOfChanges, "使用 instanceof 运算符。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "已不再使用 instanceof 运算符，请改用 is 运算符。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "allowDomain() 事件处理函数目前是标准方法而不是事件回调。有关详细信息，请参阅新的 LocalConnection.allowDomain 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "allowInsecureDomain() 事件处理函数目前是标准方法而不是事件回调。有关详细信息，请参阅新的 LocalConnection.allowInsecureDomain 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_call, "不再支持全局 call() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Color, "Color 类已被删除。请使用 flash.geom.ColorTransform 类来实现等效的功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Color, "Color 类已被删除。请使用 flash.geom.ColorTransform 类来实现等效的功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF 文件始终使用精确域匹配规则。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_capabilities, "capabilities 类已更名为 Capabilities。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_capabilities, "capabilities 类已更名为 Capabilities。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onComplete, "在 ActionScript 3.0 中，onComplete 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('complete', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onHTTPError, "在 ActionScript 3.0 中，onHTTPError 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('httpError', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onIOError, "在 ActionScript 3.0 中，onIOError 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('ioError', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onProgress, "在 ActionScript 3.0 中，onProgress 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('progress', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onSecurityError, "在 ActionScript 3.0 中，onSecurityError 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('securityError', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onOpen, "在 ActionScript 3.0 中，onOpen 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('open', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "可能使用 ActionScript 2.0 XML 类。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "迁移问题:ActionScript 2.0 XML 类已更名为 XMLDocument。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadDateCast, "Date 转换操作无效。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) 的工作方式与新的 Date().toString() 相同。要将某个值转换为 Date 类型，请使用 \"x as Date\" 而不是 Date(x)。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ImportHidesClass, "使用与当前类相同的名称导入包会在此范围内隐藏该类标识符。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "使用与当前类相同的名称导入包会在此范围内隐藏该类标识符。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "多个参数的名称相同。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "已指定多个名为 '%s' 的参数。对该参数的引用将始终解析到最后一个参数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "请改用 Rectangle.containsRect 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_eval, "此功能已被删除。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_getVersion, "此功能已被 flash.system.Capabilities.version 属性所取代。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "此功能已被 flash.display.MovieClip.framesLoaded 属性所取代。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp__global, "_global 属性已被删除。要实现等效的功能，请使用类的静态成员。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadBoolAssignment, "在需要 Boolean 值的地方使用了非 Boolean 值。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "在需要 Boolean 值的地方使用了 %s。表达式会被强制转换为 Boolean 类型。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadES3TypeProp, "未知的属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s 不是动态类 %s 的可识别属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadES3TypeMethod, "未知的方法。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s 不是动态类 %s 的可识别方法。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DuplicateVariableDef, "变量定义重复。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "变量定义重复。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "定义名称与导入的包名称相同。对该名称的非限定引用将解析到包而不是定义。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "定义名称与导入的包名称相同。对该名称的非限定引用将解析到包而不是定义。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "可能尝试删除某固定属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "无法删除声明的属性 %s。要释放关联的内存，请将其值设置为 null。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Deprecated, "使用了已弃用的定义。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Deprecated_specific, "已弃用“%s”。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedMessage, "使用了已弃用的定义。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "使用了已弃用的定义。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "已弃用“%s”。请使用“%s”。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedSince, "使用了已弃用的定义。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "“%s”从 %s 开始已弃用。请使用“%s”。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "使用了已弃用的定义。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "“%s”从 %s 开始已弃用。" );
   }

   static final AscWarning[] warningConstantsCS= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsCS() 
   {
      int index=0;
        warningConstantsCS[index++] = new AscWarning(kWarning_NoTypeDecl, "Chybí deklarace typu." );
        warningConstantsCS[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' nemá žádnou deklaraci typu." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Nelogické porovnání s nedefinovanou proměnnou. Pouze proměnné bez typu (nebo proměnné typu *) mohou být nedefinované." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Proměnné typu %s nemohou být nedefinované. U nedefinované hodnoty bude před porovnáním vynuceně nastaven typ %s." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "Funkce použitá v novém výrazu vrací hodnotu. Výsledkem bude to, co tato funkce vrací, nikoli nová instance této funkce." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Problém při přesunutí: Výsledkem nové položky %s bude vrácená hodnota %s, nikoli nová instance této funkce." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Funkce Boolean() bez argumentů vrací hodnotu false v ActionScriptu 3.0. Funkce Boolean() vracela hodnotu undefined v ActionScriptu 2.0." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Použití funkce Boolean() bez argumentů." );
        warningConstantsCS[index++] = new AscWarning(kWarning_NumberFromStringChanges, "V ActionScriptu 3.0 se prázdná místa (mezery) ignorují a parametr '' vrací se hodnota 0. V ActionScriptu 2.0 vrací funkce Number() hodnotu NaN (Not a Number), pokud má parametr hodnotu '' nebo obsahuje prázdná místa (mezery)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Problém při přesunutí: Pokud je funkce Number('') volána s argumentem s prázdným řetězcem, vrátí hodnotu 0 v ActionScriptu 3.0 a hodnotu NaN v ActionScriptu 2.0." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Formát Array.toString() se změnil." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Problém při přesunutí: Způsob zpracování nulových a nedefinovaných prvků ve formátu Array.toString() se změnil." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Nepodporovaná vlastnost ActionScriptu 2.0." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Problém při přesunutí: Vlastnost %s již není podporována.  %s." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Nepodporovaná funkce ActionScriptu 2.0." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Problém při přesunutí: Metoda %s již není podporována.  %s." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ChangesInResolve, "Funkce __resolve již není podporována." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Problém při přesunutí: Funkce __resolve již není podporována. Pro podobné funkce používejte novou třídu Proxy." );
        warningConstantsCS[index++] = new AscWarning(kWarning_LevelNotSupported, "Funkce __level již není podporována. Další informace naleznete v balíčku flash.display." );
        warningConstantsCS[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Problém při přesunutí: Funkce __level již není podporována. Další informace naleznete v balíčku flash.display." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ClassIsSealed, "Třída je uzavřená. Nelze k ní dynamicky přidávat členy." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Problém při přesunutí: %s nepředstavuje dynamickou třídu. K instancím nelze dynamicky přidávat členy." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Změna rozsahu platnosti pro klíčové slovo this. V metodách třídy získaných z instance třídy bude this vždy odkazovat na tuto instanci. V ActionScriptu 2.0 se this vyhledává dynamicky na základě toho, odkud se metoda vyvolá." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Problém při přesunutí: Metoda %s se bude chovat jinak v ActionScriptu 3.0 z důvodu změny v rozsahu platnosti pro klíčové slovo this. Další informace naleznete u položky pro upozornění 1083." );
        warningConstantsCS[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Chybí deklarace prostoru názvů (např. proměnná není definovaná jako public, private atd.)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "Rozsah platnosti položky %s bude nastaven na výchozí prostor názvů: %s interní. Položka nebude viditelná mimo tento balíček." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 iteruje přes vlastnosti objektu uvnitř příkazu \"for x in target\" v náhodném pořadí." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Problém při přesunutí: ActionScript 3.0 iteruje přes vlastnosti objektu uvnitř příkazu \"for x in target\" v náhodném pořadí." );
        warningConstantsCS[index++] = new AscWarning(kWarning_InternalError, "Interní chyba v kompilátoru." );
        warningConstantsCS[index++] = new AscWarning(kWarning_InternalError_specific, "Kód chyby: %s." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler nebyl přidán jako posluchač." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Problém při přesunutí: %s" );
        warningConstantsCS[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Záporná hodnota se při přiřazení k typu dat uint změní na velkou kladnou hodnotu." );
        warningConstantsCS[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Záporná hodnota byla použita na místě, kde je očekávána hodnota uint (nezáporná)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadNullComparision, "Nelogické porovnání s null." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Nelogické porovnání s null. Proměnné typu %s nemohou mít hodnotu null." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadNaNComparision, "Nelogické porovnání s NaN (Not a Number). Jakákoli operace porovnání zahrnující hodnotu NaN se vyhodnotí jako nepravdivá, protože NaN != NaN." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Nelogické porovnání s NaN (Not a Number). Tento příkaz se vždy vyhodnocuje jako nepravdivý." );
        warningConstantsCS[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Přiřazení uvnitř podmínky." );
        warningConstantsCS[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Přiřazení uvnitř podmínky. Opravdu jste chtěli zadat == namísto =?" );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadNullAssignment, "Nemožné přiřazení hodnoty null." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "Hodnota null byla použita na místě, kde byla očekávána hodnota %s." );
        warningConstantsCS[index++] = new AscWarning(kWarning_NoConstructor, "Chybí konstruktor." );
        warningConstantsCS[index++] = new AscWarning(kWarning_NoConstructor_specific, "Pro třídu %s nebyla určena žádná funkce konstruktoru." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ConstNotInitialized, "Konstanta není inicializovaná." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "Konstanta nebyla inicializovaná." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadArrayCast, "Možná neplatná operace přetypování pole." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Funkce Array(x) se chová stejně jako nová funkce Array(x). Chcete-li přetypovat hodnotu na typ Pole, použijte jako pole výraz x namísto funkce Array(x)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "V konstruktoru nebyl volán příkaz super()." );
        warningConstantsCS[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "Příkaz super() bude proveden před vstupem do tohoto konstruktoru. Přidejte volání příkazu super() do konstruktoru, pokud chcete explicitně řídit, kdy bude proveden." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_version, "Použijte vlastnost Capabilities.version." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Další informace viz vlastnost InteractiveObject.focusRect." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Highquality, "Další informace viz vlastnost Stage.quality." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Další informace viz vlastnost Stage.quality." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Další informace viz vlastnost Stage.quality." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Quality, "Další informace viz vlastnost Stage.quality." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Použijte místo toho statickou vlastnost flash.media.SoundMixer.bufferTime." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Tato funkce již není podporována." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Další informace viz vlastnost LoaderInfo.url." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Tato funkce již není podporována." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_NewLine, "Pro zadání nového řádku použijte '\n'." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Další informace viz vlastnost textField.maxScroll." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Level, "V ActionScriptu 3.0 neexistuje koncept úrovní. Místo něj je k dispozici přímý přístup k seznamu zobrazení. Podrobnosti naleznete v balíčku flash.display." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Parent, "Použijte místo toho rodičovskou vlastnost." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Root, "Tato vlastnost byla odstraněna. Nejbližším ekvivalentem je vlastnost Stage, která slouží jako kořen seznamu zobrazení v ActionScriptu 3.0." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Zkuste místo toho volající objekt deklarovat jako argument funkce." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Tato funkce již není podporována." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Použijte místo toho rodičovskou vlastnost." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Tato funkce již není podporována." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Další informace viz vlastnost Sprite.hitArea." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Scroll, "Další informace viz vlastnosti scrollH a scrollV třídy flash.text.TextField." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Namísto cest použijte objekty MovieClip přímo jako argumenty." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Další informace viz vlastnost Video.videoHeight." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Další informace viz vlastnost Video.videoWidth." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp__Proto__, "Další informace viz zastaralá vlastnost __proto__." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Stage, "Další informace viz vlastnost DisplayObject.stage." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Použijte místo toho metodu registerClass() v balíčku flash.net." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_random, "Použijte místo toho metodu Math.random()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_chr, "Použijte místo toho metodu String.fromCharCode()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Použijte místo toho metodu String.fromCharCode()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ord, "Použijte místo toho metodu String.charCodeAt()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_mbord, "Použijte místo toho metodu String.charCodeAt()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_substring, "Použijte místo toho vlastnost String.substr." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Použijte místo toho vlastnost String.substr." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_length, "Použijte místo toho vlastnost length argumentu." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_mblength, "Použijte místo toho vlastnost length argumentu." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Další informace viz změny funkce ASnative." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Místo toho nastavte vlastnosti přímo u instance pomocí tečkového (.) zápisu." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Místo toho získejte k vlastnostem přístup přímo pomocí tečkového (.) zápisu." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Místo toho nastavte vlastnosti přímo u instance pomocí tečkového (.) zápisu." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Další informace viz vlastnosti TextEvent.LINK a addEventListener()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Tato metoda se přesunula do balíčku flash.utils." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Nahrazeno novou funkcí konstruktoru tříd MovieClip." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Přesunuto do balíčku flash.system. Viz také třída flash.external.ExternalInterface pro komunikaci Javascript/ActionScript." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_getURL, "Informace o ekvivalentních funkcích viz funkce flash.net.URLLoader. Balíček flash.net obsahuje také funkce na úrovni balíčku navigateToURL() a sendToURL()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Další informace viz metoda MovieClip.gotoAndPlay()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Další informace viz metoda MovieClip.gotoAndStop()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_play, "Další informace viz metoda MovieClip.play()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_print, "Další informace viz metoda PrintJob.start()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Další informace viz funkce PrintJob." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Další informace viz funkce PrintJob." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_printNum, "Další informace viz funkce PrintJob." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Použijte metodu Container.removeChild(childName). Další informace viz třída DisplayObjectContainer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Přesunuto do balíčku flash.utils. Místo toho zvažte použití třídy Timer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Další informace viz metoda MovieClip.nextFrame()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Další informace viz metoda MovieClip.startDrag()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_stop, "Další informace viz metoda MovieClip.stop()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Další informace viz metoda Sound.stopAllSounds()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Další informace viz metoda MovieClip.stopDrag()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Použijte místo toho tečkový (.) operátor nebo příkaz with." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Další informace viz vlastnost DisplayObject.stage a Stage.quality." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Použijte místo toho metodu DisplayObjectContainer.removeChild(childName). Další informace viz třída DisplayObjectContainer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Použijte místo toho metodu DisplayObjectContainer.removeChild(childName). Další informace viz třída DisplayObjectContainer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Tato funkce již není globální funkcí, avšak je stále k dispozici jako metoda tříd TimerEvent, MouseEvent a KeyboardEvent." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Další informace viz funkce Video.attachNetStream a Video.attachCamera." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Pomocí třídy URLLoader proveďte načítání a výsledek předejte do metody StyleSheet.parseCSS()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "V ActionScriptu 3.0 jsou ve výchozím nastavení registrovány všechny třídy. Používáte-li formát AMF, naleznete další informace u metody flash.utils.registerClassAlias()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Podobné funkce získáte použitím vlastností mechanismu přístupu (funkce get/set) nebo třídy flash.utils.Proxy." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Podobné funkce získáte použitím vlastností mechanismu přístupu (funkce get/set) nebo třídy flash.utils.Proxy." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Další informace viz metoda MovieClip.loadMovie()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Další informace viz metoda MovieClip.loadMovieNum()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Další informace viz metoda Loader.load()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Další informace viz metoda Loader.load()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Další informace viz funkce addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Další informace viz funkce removeEventListener (eventName, listener, useCapture)." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Další informace viz funkce addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Další informace viz funkce removeEventListener (eventName, listener, useCapture)." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Další informace viz funkce addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Další informace viz funkce removeEventListener (eventName, listener, useCapture)." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Další informace viz funkce addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Další informace viz funkce removeEventListener (eventName, listener, useCapture)." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "K vytváření zvuků z knihovny použijte třídu SWF." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onStatus, "Zpracování události onStatus není přehrávačem Flash za běhu v ActionScriptu 3.0 spouštěno automaticky. Toto zpracování je třeba pro danou událost nejprve zaregistrovat pomocí funkce addEventListener ('status', callback_handler)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onID3, "Zpracování události onID3 není přehrávačem Flash za běhu v ActionScriptu 3.0 spouštěno automaticky. Toto zpracování je třeba pro danou událost nejprve zaregistrovat pomocí funkce addEventListener ('id3', callback_handler)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onLoad, "Zpracování události onLoad není přehrávačem Flash za běhu v ActionScriptu 3.0 spouštěno automaticky. Toto zpracování je třeba pro danou událost nejprve zaregistrovat pomocí funkce addEventListener ('load', callback_handler)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onSoundComplete, "Zpracování události onSoundComplete není přehrávačem Flash za běhu v ActionScriptu 3.0 spouštěno automaticky. Toto zpracování je třeba pro danou událost nejprve zaregistrovat pomocí funkce addEventListener ('soundComplete', callback_handler)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onSetFocus, "Zpracování události onSetFocus není přehrávačem Flash za běhu v ActionScriptu 3.0 spouštěno automaticky. Toto zpracování je třeba pro danou událost nejprve zaregistrovat pomocí funkce addEventListener ('focusIn', callback_handler)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onResize, "Zpracování události onResize není přehrávačem Flash za běhu v ActionScriptu 3.0 spouštěno automaticky. Toto zpracování je třeba pro danou událost nejprve zaregistrovat pomocí funkce addEventListener ('resize', callback_handler)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onChanged, "Ovladač události onChanged není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'change', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onKillFocus, "Ovladač události onKillFocus není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'focusOut', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onScroller, "Ovladač události onScroller není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'scroll', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onMouseDown, "Ovladač události onMouseDown není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'mouseDown', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onMouseUp, "Ovladač události onMouseUp není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'mouseUp', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onMouseMove, "Ovladač události onMouseMove není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'mouseMove', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onMouseWheel, "Ovladač události onMouseWheel není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'mouseWheel', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onKeyDown, "Ovladač události onKeyDown není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'keyDown', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onKeyUp, "Ovladač události onKeyUp není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'keyUp', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onData, "Ovladač události onData není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'data', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "Ovladač události onHTTPStatus není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'httpStatus', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onDragOut, "Ovladač události onDragOut není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'mouseOut', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onDragOver, "Ovladač události onDragOver není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'mouseOver', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onPress, "Ovladač události onPress není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'mouseDown', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onRelease, "Ovladač události onRelease není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'click', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "Ovladač události onReleaseOutside není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'mouseUp', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onRollOut, "Ovladač události onRollOut není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'mouseOut', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onRollOver, "Ovladač události onRollOver není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'mouseOver', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onActivity, "Ovladač události onActivity není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'activity', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onSelect, "Ovladač události onSelect není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'menuSelect', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onEnterFrame, "Ovladač události onEnterFrame není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'enterFrame', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onUnload, "Ovladač události onUnload není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'unload', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onLoadComplete, "Ovladač události onLoadComplete není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'load', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onLoadError, "Ovladač události onLoadError není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'error', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onLoadInit, "Ovladač události onLoadInit není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'init', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onLoadProgress, "Ovladač události onLoadProgress není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'progress', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onLoadStart, "Ovladač události onLoadStart není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'start', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onClose, "Ovladač události onClose není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'close', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onConnect, "Ovladač události onConnect není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'connect', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onXML, "Ovladač události onXML není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( 'xml', ovladač_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Místo toho použijte metodu hasChildNodes dané vlastnosti." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "Třída XMLEvent je zastaralá a událost xml již není odesílána. Při načítání souboru je odesílána pouze událost data." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "Třída XMLDoc byla přejmenována na XMLDocument." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Místo toho použijte vlastnost Accessibility.active." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Místo toho použijte konstantu ActivityEvent.ACTIVITY." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Místo toho použijte DisplayObjectContainer.parent.getChildIndex. Viz nápověda pro třídu DisplayObjectContainer, kterou MovieClip rozšiřuje." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Místo toho použijte DisplayObjectContainer.parent.setChildIndex. Viz nápověda pro třídu DisplayObjectContainer, kterou MovieClip rozšiřuje." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Místo toho použijte DisplayObjectContainer.getChildAt. Viz nápověda pro třídu DisplayObjectContainer, kterou MovieClip rozšiřuje." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Místo toho použijte DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild vždy přidá nový podřízený objekt do DisplayObjectContainer.numChildren indexu." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Místo toho použijte vlastnost ByteArray.bytesAvailable." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Místo toho použijte vlastnost ByteArray.position." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Místo toho použijte vlastnost ByteArray.position." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Místo toho použijte metodu Camera.getCamera()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Místo toho použijte vlastnost  Camera.currentFPS." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Místo toho použijte vlastnost Camera.keyFrameInterval." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Místo toho použijte vlastnost Camera.loopback." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Místo toho použijte vlastnost ColorTransform.color." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Místo toho použijte vlastnost ColorTransform.color." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Místo toho použijte vlastnost Container.textSnapshot." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Místo toho použijte metodu ContextMenu.clone()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Místo toho použijte vlastnost ContextMenu.forwardAndBack." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Místo toho použijte metodu ContextMenuItem.clone()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Místo toho použijte vlastnost CustomActions.actionsList." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Místo toho použijte konstantu DataEvent.DATA." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Místo toho použijte vlastnost DisplayObject.scaleX." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Místo toho použijte vlastnost DisplayObject.scaleX." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Místo toho použijte vlastnost DisplayObject.scaleY." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Místo toho použijte vlastnost DisplayObject.scaleY." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Místo toho použijte vlastnost DisplayObject.mouseX." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Místo toho použijte vlastnost DisplayObject.mouseX." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Místo toho použijte vlastnost DisplayObject.mouseY." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Místo toho použijte vlastnost DisplayObject.mouseY." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Tato funkce již není podporována." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Tato funkce již není podporována." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Místo toho použijte vlastnost DisplayObject.name." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Místo toho použijte vlastnost DisplayObject.parent." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Místo toho použijte vlastnost DisplayObject.mask." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Místo toho použijte vlastnost DisplayObject.visible." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Místo toho použijte vlastnost DisplayObject.x." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Místo toho použijte vlastnost DisplayObject.y." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Místo toho použijte vlastnost DisplayObject.rotation." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Místo toho použijte vlastnost DisplayObject.alpha." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Místo toho použijte vlastnost DisplayObject.width." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Místo toho použijte vlastnost DisplayObject.height." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Místo toho použijte vlastnost ExternalInterface.available." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Místo toho použijte konstantu ErrorEvent.ERROR." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Místo toho použijte vlastnost Event.isDefaultPrevented." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Místo toho použijte konstantu Event.ACTIVATE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Místo toho použijte konstantu Event.ADDED." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Místo toho použijte konstantu Event.CANCEL." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Místo toho použijte konstantu Event.CHANGE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Místo toho použijte konstantu Event.CLOSE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Místo toho použijte konstantu Event.COMPLETE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Místo toho použijte konstantu Event.CONNECT." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Místo toho použijte konstantu Event.DEACTIVATE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Místo toho použijte konstantu Event.ENTER_FRAME." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Místo toho použijte konstantu Event.ID3." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Místo toho použijte konstantu Event.INIT." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Místo toho použijte konstantu Event.MOUSE_LEAVE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Místo toho použijte konstantu Event.OPEN." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Místo toho použijte konstantu Event.REMOVED." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Místo toho použijte konstantu Event.RENDER." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Místo toho použijte konstantu Event.RESIZE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Místo toho použijte konstantu Event.SCROLL." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Místo toho použijte konstantu Event.SELECT." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Místo toho použijte konstantu Event.SOUND_COMPLETE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Místo toho použijte konstantu Event.TAB_CHILDREN_CHANGE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Místo toho použijte konstantu Event.TAB_ENABLED_CHANGE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Místo toho použijte konstantu Event.TAB_INDEX_CHANGE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Místo toho použijte konstantu Event.UNLOAD." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Místo toho použijte konstantu FocusEvent.FOCUS_IN." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Místo toho použijte konstantu FocusEvent.FOCUS_OUT." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Místo toho použijte konstantu FocusEvent.KEY_FOCUS_CHANGE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Místo toho použijte konstantu FocusEvent.MOUSE_FOCUS_CHANGE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Místo toho použijte metodu Graphics.beginBitmapFill()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Místo toho použijte vlastnost BitmapFilter.quality." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Místo toho použijte KeyboardEvent.charCode." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Místo toho použijte KeyboardEvent.keyCode." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Více informací viz třída KeyboardEvent." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Více informací viz KeyboardEvent.ctrlKey, KeyboardEvent.altKey a KeyboardEvent.shiftKey." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Místo toho použijte konstantu PAGE_DOWN." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Místo toho použijte konstantu PAGE_UP." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Místo toho použijte konstantu DELETE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Místo toho použijte konstantu CAPS_LOCK." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Místo toho použijte jednu z konstant NUMPAD_0 -> NUMPAD_9." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Místo toho použijte vlastnost InteractiveObject.focusRect." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Místo toho použijte vlastnost InteractiveObject.contextMenu." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Místo toho použijte vlastnost KeyboardEvent.charCode." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Místo toho použijte vlastnost KeyboardEvent.keyCode." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Místo toho použijte vlastnost Loader.contentLoaderInfo." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Tato funkce již není podporována." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Tato funkce již není podporována." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Místo toho použijte vlastnost LoaderInfo.loaderURL." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Místo toho použijte vlastnost LocalConnection.domain." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Místo toho použijte vlastnost MenuEvent.contextMenuOwner." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Místo toho použijte metodu Microphone.getMicrophone()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Pokud název podtřídy MovieClip je A, použijte var mc= new A(); addChild(mc). Více informací viz třída DisplayObjectContainer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Použijte var mc= new MovieClip(); addChild(mc). Více informací viz třída DisplayObjectContainer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Použijte var tf= new TextField(); addChild(mc). Více informací viz třída DisplayObjectContainer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Použijte Container.removeChild(childName). Více informací viz třída DisplayObjectContainer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Použijte var l = new Loader(); addChild(l); l.load(new URLRequest(\"vaše url\"));. Více informací viz třídy Loader a DisplayObjectContainer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Místo toho použijte DisplayObjectContainer.removeChild(childName). Více informací viz třída DisplayObjectContainer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Místo toho použijte DisplayObjectContainer.removeChild(childName). Více informací viz třída DisplayObjectContainer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Místo toho použijte DisplayObjectContainer.parent.getChildIndex. Více informací viz třída DisplayObjectContainer, kterou MovieClip rozšiřuje." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Místo toho použijte DisplayObjectContainer.parent.setChildIndex. Více informací viz třída DisplayObjectContainer, kterou MovieClip rozšiřuje." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Místo toho použijte DisplayObjectContainer.getChildAt. Více informací viz třída DisplayObjectContainer, kterou MovieClip rozšiřuje." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Místo toho použijte DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild vždy přidá nový podřízený objekt do DisplayObjectContainer.numChildren indexu." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Více informací viz DisplayObject.addChild." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Více informací viz LoaderInfo.bytesLoaded a třída Loader." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Více informací viz LoaderInfo.bytesTotal a třída Loader." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Ekvivalentní funkčnost viz flash.net.URLLoader. Balíček flash.net obsahuje rovněž funkce úrovně balíčku navigateToURL() a sendToURL()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Více informací viz LoaderInfo.url a třída Loader." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Více informací viz LoaderInfo.url a třída Loader." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Místo toho použijte vlastnost MovieClip.mask." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Více informací viz LoaderInfo.swfVersion a třída Loader." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Místo toho použijte vlastnost MovieClip.currentFrame." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Místo toho použijte vlastnost MovieClip.framesLoaded." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Místo toho použijte vlastnost MovieClip.totalFrames." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Více informací viz displayObjectInstance.root." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Více informací viz displayObjectInstance.root." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Místo toho použijte statickou vlastnost flash.media.SoundMixer.bufferTime." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Více informací viz třída Graphics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Místo toho použijte vlastnost NetStream.bufferTime." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Místo toho použijte vlastnost NetStream.currentFPS." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Místo toho použijte vlastnost NetStream.videoCodec." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Místo toho použijte vlastnost NetStream.audioCodec." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Místo toho použijte vlastnost ProductManager.isInstalled." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Místo toho použijte vlastnost ProductManager.installedVersion." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Místo toho použijte vlastnost ProductManager.isRunning." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Místo toho použijte metodu Point.add()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Místo toho použijte vlastnost Proxy.deleteDescendants." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Místo toho použijte metodu heapDump()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Místo toho použijte vlastnost ProgressEvent.bytesLoaded." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Místo toho použijte vlastnost ProgressEvent.bytesTotal." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Místo toho použijte vlastnost Rectangle.isEmpty." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Místo toho použijte vlastnost SoundTransform.pan." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Místo toho použijte vlastnost Sockect.bytesAvailable." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Místo toho použijte vlastnost SharedObject.size." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Místo toho použijte vlastnost SharedObject.fps." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Tato funkce již není podporována." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Místo toho použijte metodu Sprite.constructChildren()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Místo toho použijte vlastnost Sprite.dropTarget." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Místo toho použijte vlastnost Stage.focus." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Místo toho použijte vlastnost Stage.focus." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Místo toho použijte vlastnost Stage.showDefaultContextMenu." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Místo toho použijte vlastnost StyleSheet.styleNames." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Použijte instanci URLLoader k načtení dat StyleSheet a potom pošlete data zaváděčů metodě StyleSheet.parseCSS. Více informací viz třídy URLLoader a EventDispatcher." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Použijte instanci URLLoader k načtení dat StyleSheet a potom pošlete data zaváděčů metodě StyleSheet.parseCSS. Více informací viz třídy URLLoader a EventDispatcher." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Použijte instanci URLLoader k načtení dat StyleSheet a potom pošlete data zaváděčů metodě StyleSheet.parseCSS. Více informací viz třídy URLLoader a EventDispatcher." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Použijte instanci URLLoader k načtení dat StyleSheet a potom pošlete data zaváděčů metodě StyleSheet.parseCSS. Více informací viz třídy URLLoader a EventDispatcher." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Použijte instanci URLLoader k načtení dat StyleSheet a potom pošlete data zaváděčů metodě StyleSheet.parseCSS. Více informací viz třídy URLLoader a EventDispatcher." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Místo toho použijte vlastnost IME.enabled." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Místo toho použijte vlastnost IME.enabled." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Místo toho použijte vlastnost IME.instance." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Místo toho použijte vlastnost IME.conversionMode." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Místo toho použijte vlastnost IME.conversionMode." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Místo toho použijte vlastnost System.vmVersion." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Místo toho použijte vlastnost SWFLoaderInfo.swfVersion." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Místo toho použijte vlastnost SWFLoaderInfo.actionScriptVersion." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Místo toho použijte vlastnost TextField.defaultTextFormat." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Místo toho použijte vlastnost TextField.defaultTextFormat." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Místo toho použijte DisplayObjectContainer.parent.getChildIndex. Více informací viz třída DisplayObjectContainer, kterou MovieClip rozšiřuje." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Místo toho použijte DisplayObjectContainer.parent.setChildIndex. Více informací viz třída DisplayObjectContainer, kterou MovieClip rozšiřuje." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Místo toho použijte DisplayObjectContainer.getChildAt. Více informací viz třída DisplayObjectContainer, kterou MovieClip rozšiřuje." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Místo toho použijte DisplayObjectContainer.numChildren.  DisplayObjectContainer.addChild vždy přidá nový podřízený objekt do DisplayObjectContainer.numChildren indexu." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Místo toho použijte metodu TextField.replaceSelectedText()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Místo toho použijte metodu TextField.getLineIndexOfChar()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Místo toho použijte vlastnost TextField.selectionBeginIndex." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Místo toho použijte vlastnost TextField.selectionEndIndex." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Místo toho použijte vlastnost TextField.caretIndex." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Místo toho použijte metodu Font.enumerateFonts()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Místo toho použijte vlastnost TextField.maxScrollV." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Místo toho použijte vlastnost TextField.scrollH." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Místo toho použijte vlastnost TextField.maxScrollH." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Místo toho použijte vlastnost TextField.defaultTextFormat." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Vytvořte dočasný objekt TextField a místo toho použijte TextField.getLineMetrics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Místo toho použijte vlastnost TextSnapshot.charCount." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Místo toho použijte metodu navigateToURL() v balíčku flash.net." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Místo toho použijte metodu sendToURL() v balíčku flash.net." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Místo toho použijte vlastnost URLLoader.dataFormat." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Místo toho použijte vlastnost URLStream.bytesAvailable." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Tato vlastnost již není podporována." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Místo toho použijte vlastnost URLRequest.applicationDomain." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Chcete-li přidat záhlaví požadavků, nastavte vlastnost URLRequest.requestHeaders do pole objektů URLRequestHeader." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Použijte instanci URLLoader k načtení souboru XML, potom pošlete data URLLoaders konstruktoru XMLDocuments. Více informací viz třídy URLLoader a EventDispatcher." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Místo toho použijte metodu sendToURL() v balíčku flash.net." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Nastavte vlastnost postData objektu URLRequest a použijte jej s objektem URLLoader k načtení souboru XML. Pošlete data URLLoaders konstruktoru XMLDocuments. Více informací viz třídy URLLoader, URLRequest a EventDispatcher." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Použijte instanci URLLoader k načtení souboru XML, potom pošlete data URLLoaders konstruktoru XMLDocuments. Více informací viz třídy URLLoader a EventDispatcher." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Chcete-li přidat záhlaví požadavků, nastavte vlastnost URLRequest.requestHeaders do pole objektů URLRequestHeader." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Více informací viz URLLoader.bytesLoaded a třída URLLoader." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Více informací viz URLLoader.bytesTotal a třída URLLoader." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Použijte instanci URLLoader k načtení souboru XML, potom pošlete data zaváděčů metodě StyleSheet.parseCSS. Více informací viz třídy URLLoader a EventDispatcher." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Místo toho použijte vlastnost URLRequest.contentType." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Místo toho zkontrolujte možné výjimky vyvolané konstruktorem XMLDocument nebo metodou XMLDocument.parseXML. Více informací viz XMLDocument." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Button, "Třída Button byla přejmenována na SimpleButton." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Container, "Třída Container byla přejmenována na DisplayObjectContainer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Image, "Třída Image byla přejmenována na BitmapData." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "Třída ImageFilter byla přejmenována na BitmapFilter." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "Třída ImageSprite byla přejmenována na Bitmap." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "Třída ImageLoaderInfo byla přejmenována na BitmapLoaderInfo." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "Třída ImeEvent byla přejmenována na IMEEvent." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Key, "Třída Key byla přejmenována na Keyboard." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "Třída LineMetrics byla přejmenována na TextLineMetrics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Více informací viz třída URLVariables, vlastnosti URLRequest.urlVariables a URLRequest.postData a vlastnost URLLoader.dataFormat." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "Třída MenuEvent byla přejmenována na ContextMenuEvent." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "Třída SystemCapabilities byla přejmenována na Capabilities." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Místo toho použijte vlastnost TextField.getLineMetrics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Button, "Třída Button byla přejmenována na SimpleButton." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Container, "Třída Container byla přejmenována na DisplayObjectContainer." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Image, "Třída Image byla přejmenována na BitmapData." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "Třída ImageFilter byla přejmenována na BitmapFilter." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "Třída ImageSprite byla přejmenována na Bitmap." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "Třída ImageLoaderInfo byla přejmenována na BitmapLoaderInfo." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "Třída ImeEvent byla přejmenována na IMEEvent." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Key, "Třída Key byla přejmenována na Keyboard." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "Třída LineMetrics byla přejmenována na TextLineMetrics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Více informací viz třída URLVariables, vlastnosti URLRequest.urlVariables a URLRequest.postData a vlastnost URLLoader.dataFormat." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "Třída MenuEvent byla přejmenována na ContextMenuEvent." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "Třída SystemCapabilities byla přejmenována na Capabilities." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Místo toho použijte vlastnost TextField.getLineMetrics." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Více informací viz nápověda pro třídu Proxy, jež nabízí podobnou funkčnost." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Místo toho použijte metodu XMLUI.getProperty." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Místo toho použijte metodu XMLUI.setProperty." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Místo toho použijte vlastnost DisplayObject.accessibilityProperties." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Místo toho použijte vlastnost DisplayObject.scale9Grid." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Místo toho použijte metodu Graphics.drawOval." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Místo toho použijte vlastnost NetConnection.connected." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Místo toho použijte vlastnost Socket.connected." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Místo toho použijte vlastnost URLStream.connected." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Místo toho použijte vlastnost SyncEvent.changeList." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Místo toho použijte vlastnost TextField.scrollV." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Místo toho použijte vlastnost TextField.bottomScrollV." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Místo toho použijte konstantu BitmapDataChannel.RED." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Místo toho použijte konstantu BitmapDataChannel.GREEN." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Místo toho použijte konstantu BitmapDataChannel.BLUE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Místo toho použijte konstantu BitmapDataChannel.ALPHA." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Místo toho použijte operátor is." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Místo toho použijte metodu flash.system.Security.showSettings." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Místo toho použijte vlastnost System.useCodePage." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Místo toho použijte třídu flash.events.EventDispatcher." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Místo toho použijte statickou vlastnost flash.media.SoundMixer.bufferTime." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Místo toho vytvořte novou instanci třídy bitmapových symbolů knihovny, tzn. novou myBitmapName()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Více informací viz Loader.load()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "Třída MovieClipLoader byla nahrazena třídou flash.display.Loader." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "Třída MovieClipLoader byla nahrazena třídou flash.display.Loader." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Více informací viz addEventListener(eventName, listener, useCapture, priority )." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Více informací viz removeEventListener(eventName, listener, useCapture)." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Místo toho použijte konstantu flash.system.IMEConversionMode.ALPHANUMERIC_FULL." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Místo toho použijte konstantu flash.system.IMEConversionMode.ALPHANUMERIC_HALF." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Místo toho použijte konstantu flash.system.IMEConversionMode.CHINESE." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Místo toho použijte konstantu flash.system.IMEConversionMode.JAPANESE_HIRAGANA." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Místo toho použijte konstantu flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Místo toho použijte konstantu flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Místo toho použijte konstantu flash.system.IMEConversionMode.KOREAN." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Místo toho použijte konstantu flash.system.IMEConversionMode.UNKNOWN." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Více informací viz addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Více informací viz removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onCancel, "Ovladač události onCancel není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( cancel, onCancel)." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Neexistuje žádná přímá náhrada. Pomocí metody willTrigger() lze zjistit, zda byli registrováni nějací posluchači." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onIMEComposition, "Ovladač události onIMEComposition není v ActionScriptu 3.0 spouštěn Flash Playerem automaticky za běhu. Je nutné nejprve provést registraci tohoto ovladače události pomocí addEventListener ( imeComposition, handlerName)." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Více informací viz LoaderInfo.url a třída Loader." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Místo toho použijte metodu getFullYear()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Místo toho použijte metodu setFullYear()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Místo toho použijte metodu getUTCFullYear()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Místo toho použijte vlastnost rate." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Selection, "Třída Selection byla odstraněna. Více informací viz metoda addEventListener třídy, ze které chcete informace o výběru." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Selection, "Třída Selection byla odstraněna. Více informací viz metoda addEventListener třídy, ze které chcete informace o výběru." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Místo toho použijte vlastnost gain." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Barevné hodnoty lze přiřadit přímo pomocí konstruktoru nebo vlastností třídy ColorTransform." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Barevné hodnoty lze přiřadit přímo pomocí konstruktoru nebo vlastností třídy ColorTransform." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Viz nápověda pro vlastnosti třídy flash.display.InteractiveObject, jež se týkají aktivního prvku." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Viz nápověda pro metodu flash.display.Graphics.beginBitmapFill." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Viz nápověda pro metodu flash.display.DisplayObject.hitTestObject()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Viz nápověda pro metodu addChild()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Místo toho použijte metodu load()." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Ke sledování a ovládání amplitudy zvukového kanálu použijte flash.media.SoundChannel.leftPeak a flash.media.SoundChannel.rightPeak." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Místo toho použijte vlastnost soundTransform." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Místo toho použijte vlastnost SoundTransform.pan." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Místo toho použijte vlastnost SoundTransform.pan." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Místo toho použijte vlastnost bytesLoaded." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Místo toho použijte vlastnost bytesTotal." );
        warningConstantsCS[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Neefektivní použití += pro TextField." );
        warningConstantsCS[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Připojení textu k TextField pomocí += je mnohem pomalejší než použití metody TextField.appendText()." );
        warningConstantsCS[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Možná chybí závorky." );
        warningConstantsCS[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Hodnota funkce je použitá na místě, kde byl očekáván typ %s. Za odkazem na tuto funkci možná chybí závorky ()." );
        warningConstantsCS[index++] = new AscWarning(kWarning_InstanceOfChanges, "Použití operátoru instanceof." );
        warningConstantsCS[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "Operátor instanceof není schválen, použijte místo něj operátor is." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "Ovladač události allowDomain() je nyní standardní metoda, nikoli zpětné volání události. Více informací viz nová metoda LocalConnection.allowDomain." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "Ovladač události allowInsecureDomain() je nyní standardní metoda, nikoli zpětné volání události. Více informací viz nová metoda LocalConnection.allowInsecureDomain." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_call, "Globální metoda call() již není podporována." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_Color, "Třída Color byla odstraněna. Stejnou funkci plní třída flash.geom.ColorTransform." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Color, "Třída Color byla odstraněna. Stejnou funkci plní třída flash.geom.ColorTransform." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "Soubory SWF ActionScriptu 3.0 vždy používají pravidla pro přesnou shodu domén." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp_capabilities, "Třída možností byla přejmenována na Capabilities." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_capabilities, "Třída možností byla přejmenována na Capabilities." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Pro další informace viz addEventListener(eventName, listener, useCapture, priority )." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Pro další informace viz removeEventListener(eventName, listener, useCapture)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onComplete, "Zpracování události onComplete není Flash Playerem v ActionScriptu 3.0 za běhu automaticky spuštěno. Nejdříve je nutné toto zpracování pro událost zaregistrovat pomocí addEventListener ('complete', zpracování_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onHTTPError, "Zpracování události onHTTPError není Flash Playerem v ActionScriptu 3.0 za běhu automaticky spuštěno. Nejdříve je nutné toto zpracování pro událost zaregistrovat pomocí addEventListener ('httpError', zpracování_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onIOError, "Zpracování události onIOError není Flash Playerem v ActionScriptu 3.0 za běhu automaticky spuštěno. Nejdříve je nutné toto zpracování pro událost zaregistrovat pomocí addEventListener ('ioError', zpracování_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onProgress, "Zpracování události onProgress není Flash Playerem v ActionScriptu 3.0 za běhu automaticky spuštěno. Nejdříve je nutné toto zpracování pro událost zaregistrovat pomocí addEventListener ('progress', zpracování_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onSecurityError, "Zpracování události onSecurityError není Flash Playerem v ActionScriptu 3.0 za běhu automaticky spuštěno. Nejdříve je nutné toto zpracování pro událost zaregistrovat pomocí addEventListener ('securityError', zpracování_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Event_onOpen, "Zpracování události onOpen není Flash Playerem v ActionScriptu 3.0 za běhu automaticky spuštěno. Nejdříve je nutné toto zpracování pro událost zaregistrovat pomocí addEventListener ('open', zpracování_zpětného_volání)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Možné použití třídy XML ActionScriptu 2.0." );
        warningConstantsCS[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Problém s přesunutím: Třída XML ActionScriptu 2.0 byla přejmenována na XMLDocument." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadDateCast, "Neplatná operace přetypování data." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadDateCast_specific, "Funkce Date(x) se chová stejně jako nová funkce Date().toString(). Chcete-li vyvolat hodnotu pro vypsání data, použijte \"x jako Date\" namísto Date(x)." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ImportHidesClass, "Importováním balíčku stejného názvu, jako je aktuální třída, se v tomto rozsahu skryje identifikátor dané třídy." );
        warningConstantsCS[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Importováním balíčku stejného názvu, jako je aktuální třída, se v tomto rozsahu skryje identifikátor dané třídy." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Více argumentů má stejný název." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Bylo zadáno více argumentů s názvem '%s'.  Odkazy na daný argument se vždy vztahují na poslední z nich." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Použijte místo toho metodu Rectangle.containsRect." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_eval, "Tato funkce byla odstraněna." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Tato funkce byla nahrazena vlastností flash.system.Capabilities.version." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Tato funkce byla nahrazena vlastností flash.display.MovieClip.framesLoaded." );
        warningConstantsCS[index++] = new AscWarning(kUnsupportedProp__global, "Vlastnost _global byla odstraněna.  Pro ekvivalentní funkci použijte statický člen třídy." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadBoolAssignment, "Nelogická hodnota použita tam, kde byla očekávána logická hodnota." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "Hodnota %s použitá tam, kde byla očekávána logická hodnota.  Výraz bude typem vynucen na logický." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadES3TypeProp, "Neznámá vlastnost." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s není rozpoznaná vlastnost dynamické třídy %s." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Neznámá metoda." );
        warningConstantsCS[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s není rozpoznaná metoda dynamické třídy %s." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Duplicitní definice proměnné." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Duplicitní definice proměnné." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Název definice je stejný jako název importovaného balíčku. Nekvalifikované odkazy na tento název povedou na příslušný balíček a ne na definici." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Název definice je stejný jako název importovaného balíčku. Nekvalifikované odkazy na tento název povedou na příslušný balíček a ne na definici." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Možný pokus o odstranění pevné vlastnosti." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "Deklarovanou vlastnost %s nelze odstranit. Chcete-li uvolnit přiřazenou paměť, nastavte její hodnotu na null." );
        warningConstantsCS[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Empty statement." );
        warningConstantsCS[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Empty statement found where block of code expected. Did you type ';' accidentally?" );
        warningConstantsCS[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsCS[index++] = new AscWarning(kWarning_Deprecated_specific, "'%s' has been deprecated." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsCS[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "'%s' has been deprecated.  Please use '%s'." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "'%s' has been deprecated since %s.  Please use '%s'." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsCS[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "'%s' has been deprecated since %s." );
   }

   static final AscWarning[] warningConstantsDA= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsDA() 
   {
      int index=0;
        warningConstantsDA[index++] = new AscWarning(kWarning_NoTypeDecl, "Typeerklæring mangler." );
        warningConstantsDA[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' har ingen typeerklæring." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Ugyldig sammenligning med udefineret.  Kun variabler uden type (eller variabler af typen *) kan være udefinerede." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Variabler af typen %s kan ikke være udefinerede. Den udefinerede værdi bliver tvunget til at være typen %s før sammenligningen." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "Funktionen der bruges i et nyt udtryk, returnerer en værdi.   Resultatet returneres af funktionen og er ikke en ny forekomst af denne funktion." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Migreringsproblem: Resultatet af den nye %s vil være returværdien af %s og er ikke en ny forekomst af denne funktion." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() uden argumenter returnerer falsk i ActionScript 3.0.  Boolean() returnerede udefineret i ActionScript 2.0." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Brug af Boolean() uden argumenter." );
        warningConstantsDA[index++] = new AscWarning(kWarning_NumberFromStringChanges, "I ActionScript 3.0 ignoreres mellemrum, og '' returnerer 0. Number() returnerer NaN i ActionScript 2.0, når parameteren er '' eller indeholder mellemrum." );
        warningConstantsDA[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Migreringsproblem: Når funktionen Number('') kaldes med et tomt strengeargument, returneres 0 i ActionScript 3.0 og NaN i ActionScript 2.0." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Formatet Array.toString() er ændret." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Migreringsproblem: Array.toString() håndtering af null og udefinerede elementer er ændret." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Ikke-understøttet ActionScript 2.0-egenskab." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Migreringsproblem: Egenskaben %s understøttes ikke længere.  %s." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Ikke-understøttet ActionScript 2.0-funktion." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Migreringsproblem: Metoden %s understøttes ikke længere.  %s." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve understøttes ikke længere." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Migreringsproblem: __resolve understøttes ikke længere.  Brug den nye proxy-klasse til lignende funktioner." );
        warningConstantsDA[index++] = new AscWarning(kWarning_LevelNotSupported, "__level understøttes ikke længere. Der er flere oplysninger i pakken flash.display." );
        warningConstantsDA[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Migreringsproblem: __level understøttes ikke længere. Der er flere oplysninger i pakken flash.display." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ClassIsSealed, "Klassen er forseglet.  Medlemmer kan ikke føjes dynamisk til den." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Migreringsproblem: %s er ikke en dynamisk klasse.  Forekomster kan ikke føjes dynamisk til dem." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Ændring af område for dette nøgleord.  Klassemetoder, der udtrækkes fra en forekomst af en klasse, vil altid returnere resultatet til denne forekomst.  I ActionScript 2.0 bliver dette slået op dynamisk på basis af det sted, hvor metoden kaldes fra." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Migreringsproblem: Metoden %s vil fungere anderledes i ActionScript 3.0 pga. ændringen i dette nøgleords område. Der er flere oplysninger under advarsel 1083." );
        warningConstantsDA[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Erklæring af navneområde mangler (variabel er måske ikke defineret som offentlig, privat osv.)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s vil virke i standardnavneområdet: %s internt.  Det vil ikke være synligt uden for denne pakke." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 gentages i tilfældig rækkefølge for et objekts egenskaber i et \"for x in target\"-udsagn." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Migreringsproblem: ActionScript 3.0 gentages i tilfældig rækkefølge for et objekts egenskaber i et \"for x in target\"-udsagn." );
        warningConstantsDA[index++] = new AscWarning(kWarning_InternalError, "Intern fejl i kompileringsprogrammet." );
        warningConstantsDA[index++] = new AscWarning(kWarning_InternalError_specific, "Fejlkode: %s." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler blev ikke tilføjet som en lyttefunktion." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Migreringsproblem: %s" );
        warningConstantsDA[index++] = new AscWarning(kWarning_NegativeUintLiteral, "En negativ værdi bliver til en stor positiv værdi, når den tildeles enhedsdatatypen." );
        warningConstantsDA[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Der er brugt en negativ værdi hvor en uint-værdi (ikke-negativ) var forventet." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadNullComparision, "Ugyldig sammenligning med null." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Ugyldig sammenligning med null.  Variabler af typen %s kan ikke være null." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadNaNComparision, "Ugyldig sammenligning med NaN. Enhver sammenligning, der involverer NaN, evalueres til falsk, fordi NaN != NaN." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Ugyldig sammenligning med NaN.  Dette udsagn evalueres altid til at være falsk." );
        warningConstantsDA[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Betinget tildeling." );
        warningConstantsDA[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Betinget tildeling.  Mente du == i stedet for =?" );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadNullAssignment, "Umulig null-tildeling." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "null bruges, hvor en %s-værdi forventes." );
        warningConstantsDA[index++] = new AscWarning(kWarning_NoConstructor, "Konstruktør mangler." );
        warningConstantsDA[index++] = new AscWarning(kWarning_NoConstructor_specific, "Der er ikke specificeret en konstruktørfunktion for klassen %s." );
        warningConstantsDA[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Tomt udsagn." );
        warningConstantsDA[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Der blev fundet en tom erklæring, hvor der forventedes en kodeblok. Skrev du ';' ved en fejl?" );
        warningConstantsDA[index++] = new AscWarning(kWarning_ConstNotInitialized, "Konstanten er ikke initialiseret." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "Konstanten blev ikke initialiseret." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadArrayCast, "Array-ændringshandlingen kan være ugyldig." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) opfører sig på samme måde som det nye Array(x).  Hvis du vil ændre værdi til typen Array, skal du bruge udtrykket x som Array i stedet for Array(x)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "Udsagnet super() blev ikke kaldt i konstruktøren." );
        warningConstantsDA[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "Udsagnet super() bliver udført før denne konstruktør startes.  Tilføj et kald til super() inde i konstruktøren hvis du vil styre hvornår den udføres." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_version, "Brug Capabilities.version i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Der er flere oplysninger under InteractiveObject.focusRect." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Highquality, "Der er flere oplysninger under Stage.quality." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Der er flere oplysninger under Stage.quality." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Der er flere oplysninger under Stage.quality." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Quality, "Der er flere oplysninger under Stage.quality." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Brug den statiske egenskab flash.media.SoundMixer.bufferTime i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Denne funktion understøttes ikke længere." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Der er flere oplysninger under LoaderInfo.url." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Denne funktion understøttes ikke længere." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_NewLine, "Brug '\n' til ny linje." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Der er flere oplysninger under textField.maxScroll." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Level, "Der findes ikke niveauer i ActionScript 3.0. I stedet er der direkte adgang til visningslisten. Der er flere oplysninger i flash.display-pakken." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Parent, "Brug den overordnede egenskab i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Root, "Denne egenskab er blevet fjernet. Den der ligner mest, er Stage, der fungerer som roden af visningslisten i ActionScript 3.0." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Prøv at erklære kaldefunktionen som et argument i funktionen i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Denne funktion understøttes ikke længere." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Brug den overordnede egenskab i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Denne funktion understøttes ikke længere." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Der er flere oplysninger under Sprite.hitArea." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Scroll, "Der er flere oplysninger i forbindelse med egenskaberne scrollH og scrollV til klassen flash.text.TextField." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Brug MovieClip-objekter direkte som argumenter i stedet for stier." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Der er flere oplysninger under Video.videoHeight." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Der er flere oplysninger under Video.videoWidth." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp__Proto__, "Der er flere oplysninger under forældede __proto__." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Stage, "Der er flere oplysninger under DisplayObject.stage." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Bruge metoden registerClass() i pakken flash.net i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_random, "Brug Math.random() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_chr, "Brug String.fromCharCode() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Brug String.fromCharCode() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ord, "Brug String.charCodeAt() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_mbord, "Brug String.charCodeAt() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_substring, "Brug metoden String.substr i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Brug metoden String.substr i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_length, "Brug argumentets længdeegenskab i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_mblength, "Brug argumentets længdeegenskab i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Der er flere oplysninger under ændringer af ASnative." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Du kan definere egenskaberne direkte i forekomsten vha. et punktum (.) i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Du kan få adgang til egenskaberne direkte vha. et punktum (.) i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Du kan definere egenskaberne direkte i forekomsten vha. et punktum (.) i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Der er flere oplysninger under TextEvent.LINK og addEventListener()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Denne metode er flyttet til pakken flash.utils." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Erstattet af den nye MovieClip-klassekonstruktørfunktion." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Flyttet til pakken flash.system. Se også klassen flash.external.ExternalInterface vedrørende Javascript/ActionScript-kommunikation." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_getURL, "Du kan læse om tilsvarende funktionalitet under flash.net.URLLoader.  Pakken flash.net indeholder også funktionerne navigateToURL() og sendToURL() på pakkeniveau." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Der er flere oplysninger under MovieClip.gotoAndPlay()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Der er flere oplysninger under MovieClip.gotoAndStop()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_play, "Der er flere oplysninger under MovieClip.play()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_print, "Der er flere oplysninger under PrintJob.start()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Der er flere oplysninger under PrintJob." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Der er flere oplysninger under PrintJob." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_printNum, "Der er flere oplysninger under PrintJob." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Brug Container.removeChild(childName). Der er flere oplysninger under klassen DisplayObjectContainer." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Flyttet til pakken flash.utils.  Overvej at bruge klassen Timer i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Der er flere oplysninger under MovieClip.nextFrame()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Der er flere oplysninger under MovieClip.startDrag()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_stop, "Der er flere oplysninger under MovieClip.stop()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Der er flere oplysninger under Sound.stopAllSounds()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Der er flere oplysninger under MovieClip.stopDrag()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Brug operatoren punktum (.) eller udsagnet with i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Der er flere oplysninger under DisplayObject.stage og Stage.quality." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Brug DisplayObjectContainer.removeChild(childName) i stedet. Der er flere oplysninger under klassen DisplayObjectContainer." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Brug DisplayObjectContainer.removeChild(childName) i stedet. Der er flere oplysninger under klassen DisplayObjectContainer." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Denne funktion er ikke længere en global funktion, men den kan stadig vælges som en metode til klasserne TimerEvent, MouseEvent og KeyboardEvent." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Der er flere oplysninger under Video.attachNetStream, Video.attachCamera." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Brug klassen URLLoader til at indlæse og videresende resultatet til StyleSheet.parseCSS()" );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "I ActionScript 3.0 er alle klasser registreret som standard.  Hvis du bruger AMF, kan du læse mere under flash.utils.registerClassAlias()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Der er tilsvarende funktioner i accessoregenskaber (get/set-funktioner) og klassen flash.utils.Proxy." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Der er tilsvarende funktioner i accessoregenskaber (get/set-funktioner) og klassen flash.utils.Proxy." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Der er flere oplysninger under MovieClip.loadMovie()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Der er flere oplysninger under MovieClip.loadMovieNum()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Der er flere oplysninger under Loader.load()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Der er flere oplysninger under Loader.load()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Der er flere oplysninger under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Der er flere oplysninger under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Der er flere oplysninger under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Der er flere oplysninger under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Der er flere oplysninger under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Der er flere oplysninger under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Der er flere oplysninger under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Der er flere oplysninger under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Brug SWF-klassen til at oprette lyde fra biblioteket" );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onStatus, "Hændelseshåndteringen onStatus udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('status', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onID3, "Hændelseshåndteringen onID3 udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('id3', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onLoad, "Hændelseshåndteringen onLoad udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('load', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onSoundComplete, "Hændelseshåndteringen onSoundComplete udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('soundComplete', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onSetFocus, "Hændelseshåndteringen onSetFocus udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('focusIn', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onResize, "Hændelseshåndteringen onResize udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('resize', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onChanged, "Hændelseshåndteringen onChanged udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('change', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onKillFocus, "Hændelseshåndteringen onKillFocus udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('focusOut', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onScroller, "Hændelseshåndteringen onScroller udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('scroll', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onMouseDown, "Hændelseshåndteringen onMouseDown udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('mouseDown', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onMouseUp, "Hændelseshåndteringen onMouseUp udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('mouseUp', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onMouseMove, "Hændelseshåndteringen onMouseMove udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('mouseMove', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onMouseWheel, "Hændelseshåndteringen onMouseWheel udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('mouseWheel', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onKeyDown, "Hændelseshåndteringen onKeyDown udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('keyDown', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onKeyUp, "Hændelseshåndteringen onKeyUp udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('keyUp', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onData, "Hændelseshåndteringen onData udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('data', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "Hændelseshåndteringen onHTTPStatus udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('httpStatus', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onDragOut, "Hændelseshåndteringen onDragOut udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('mouseOut', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onDragOver, "Hændelseshåndteringen onDragOver udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('mouseOver', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onPress, "Hændelseshåndteringen onPress udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('mouseDown', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onRelease, "Hændelseshåndteringen onRelease udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('click', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "Hændelseshåndteringen onReleaseOutside udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('mouseUp', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onRollOut, "Hændelseshåndteringen onRollOut udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('mouseOut', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onRollOver, "Hændelseshåndteringen onRollOver udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('mouseOver', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onActivity, "Hændelseshåndteringen onActivity udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('activity', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onSelect, "Hændelseshåndteringen onSelect udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('menuSelect', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onEnterFrame, "Hændelseshåndteringen onEnterFrame udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('enterFrame', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onUnload, "Hændelseshåndteringen onUnload udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('unload', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onLoadComplete, "Hændelseshåndteringen onLoadComplete udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('load', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onLoadError, "Hændelseshåndteringen onLoadError udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('error', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onLoadInit, "Hændelseshåndteringen onLoadInit udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('init', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onLoadProgress, "Hændelseshåndteringen onLoadProgress udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('progress', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onLoadStart, "Hændelseshåndteringen onLoadStart udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('start', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onClose, "Hændelseshåndteringen onClose udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('close', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onConnect, "Hændelseshåndteringen onConnect udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('connect', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onXML, "onXML udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('xml', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Brug egenskaben hasChildNodes i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "Klassen XMLEvent er forældet, og xml-hændelsen bliver ikke længere sendt. Det er kun datahændelsen som sendes under indlæsningen af filen." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "Klassen XMLDoc er omdøbt til XMLDocument." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Brug egenskaben Accessibility.active i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Brug konstanten ActivityEvent.ACTIVITY i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Brug DisplayObjectContainer.parent.getChildIndex i stedet. Læs hjælpen til klassen DisplayObjectContainer som er udvidet af MovieClip." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Brug DisplayObjectContainer.parent.setChildIndex i stedet. Læs hjælpen til klassen DisplayObjectContainer som er udvidet af MovieClip." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Brug DisplayObjectContainer.getChildAt i stedet. Læs hjælpen til klassen DisplayObjectContainer som er udvidet af MovieClip." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Brug DisplayObjectContainer.numChildren i stedet. DisplayObjectContainer.addChild tilføjer altid den nye underordnede til indekset DisplayObjectContainer.numChildren." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Brug egenskaben ByteArray.bytesAvailable i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Brug egenskaben ByteArray.position i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Brug egenskaben ByteArray.position i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Brug metoden Camera.getCamera() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Brug egenskaben Camera.currentFPS i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Brug egenskaben Camera.keyFrameInterval i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Brug egenskaben Camera.loopback i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Brug egenskaben ColorTransform.color i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Brug egenskaben ColorTransform.color i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Brug egenskaben Container.textSnapshot i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Brug metoden ContextMenu.clone() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Brug egenskaben ContextMenu.forwardAndBack i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Brug metoden ContextMenuItem.clone() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Brug egenskaben CustomActions.actionsList i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Brug konstanten DataEvent.DATA i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Brug egenskaben DisplayObject.scaleX i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Brug egenskaben DisplayObject.scaleX i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Brug egenskaben DisplayObject.scaleY i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Brug egenskaben DisplayObject.scaleY i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Brug egenskaben DisplayObject.mouseX i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Brug egenskaben DisplayObject.mouseX i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Brug egenskaben DisplayObject.mouseY i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Brug egenskaben DisplayObject.mouseY i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Denne funktion understøttes ikke længere." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Denne funktion understøttes ikke længere." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Brug egenskaben DisplayObject.name i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Brug egenskaben DisplayObject.parent i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Brug egenskaben DisplayObject.mask i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Brug egenskaben DisplayObject.visible i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Brug egenskaben DisplayObject.x i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Brug egenskaben DisplayObject.y i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Brug egenskaben DisplayObject.rotation i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Brug egenskaben DisplayObject.alpha i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Brug egenskaben DisplayObject.width i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Brug egenskaben DisplayObject.height i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Brug egenskaben ExternalInterface.available i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Brug konstanten ErrorEvent.ERROR i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Brug egenskaben Event.isDefaultPrevented i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Brug konstanten Event.ACTIVATE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Brug konstanten Event.ADDED i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Brug konstanten Event.CANCEL i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Brug konstanten Event.CHANGE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Brug konstanten Event.CLOSE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Brug konstanten Event.COMPLETE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Brug konstanten Event.CONNECT i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Brug konstanten Event.DEACTIVATE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Brug konstanten Event.ENTER_FRAME i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Brug konstanten Event.ID3 i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Brug konstanten Event.INIT i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Brug konstanten Event.MOUSE_LEAVE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Brug konstanten Event.OPEN i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Brug konstanten Event.REMOVED i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Brug konstanten Event.RENDER i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Brug konstanten Event.RESIZE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Brug konstanten Event.SCROLL i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Brug konstanten Event.SELECT i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Brug konstanten Event.SOUND_COMPLETE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Brug konstanten Event.TAB_CHILDREN_CHANGE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Brug konstanten Event.TAB_ENABLED_CHANGE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Brug konstanten Event.TAB_INDEX_CHANGE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Brug konstanten Event.UNLOAD i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Brug konstanten FocusEvent.FOCUS_IN i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Brug konstanten FocusEvent.FOCUS_OUT i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Brug konstanten FocusEvent.KEY_FOCUS_CHANGE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Brug konstanten FocusEvent.MOUSE_FOCUS_CHANGE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Brug metoden Graphics.beginBitmapFill() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Brug egenskaben BitmapFilter.quality i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Brug KeyboardEvent.charCode i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Brug KeyboardEvent.keyCode i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Der er flere oplysninger under klassen KeyboardEvent." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Der er flere oplysninger under KeyboardEvent.ctrlKey, KeyboardEvent.altKey og KeyboardEvent.shiftKey" );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Brug konstanten PAGE_DOWN i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Brug konstanten PAGE_UP i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Brug konstanten DELETE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Brug konstanten CAPS_LOCK i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Brug en af konstanterne NUMPAD_0 -> NUMPAD_9 i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Brug egenskaben InteractiveObject.focusRect i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Brug egenskaben InteractiveObject.contextMenu i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Brug egenskaben KeyboardEvent.charCode i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Brug egenskaben KeyboardEvent.keyCode i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Brug egenskaben Loader.contentLoaderInfo i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Denne funktion understøttes ikke længere." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Denne funktion understøttes ikke længere." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Brug egenskaben LoaderInfo.loaderURL i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Brug egenskaben LocalConnection.domain i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Brug egenskaben MenuEvent.contextMenuOwner i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Brug metoden Microphone.getMicrophone() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Hvis navnet på MovieClip-underklassen er A, skal du bruge var mc= new A(); addChild(mc). Der er flere oplysninger under klassen DisplayObjectContainer." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Brug var mc= new MovieClip(); addChild(mc). Der er flere oplysninger under klassen DisplayObjectContainer." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Brug var tf= new TextField(); addChild(mc). Der er flere oplysninger under klassen DisplayObjectContainer." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Brug Container.removeChild(childName). Der er flere oplysninger under klassen DisplayObjectContainer." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Brug var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));. Der er flere oplysninger under klasserne Loader og DisplayObjectContainer." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Brug DisplayObjectContainer.removeChild(childName) i stedet. Der er flere oplysninger under klassen DisplayObjectContainer." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Brug DisplayObjectContainer.removeChild(childName) i stedet. Der er flere oplysninger under klassen DisplayObjectContainer." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Brug DisplayObjectContainer.parent.getChildIndex i stedet. Der er flere oplysninger under klassen DisplayObjectContainer som er udvidet af MovieClip." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Brug DisplayObjectContainer.parent.setChildIndex i stedet. Der er flere oplysninger under klassen DisplayObjectContainer som er udvidet af MovieClip." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Brug DisplayObjectContainer.getChildAt i stedet. Der er flere oplysninger under klassen DisplayObjectContainer som er udvidet af MovieClip." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Brug DisplayObjectContainer.numChildren i stedet. DisplayObjectContainer.addChild tilføjer altid den nye underordnede til indekset DisplayObjectContainer.numChildren." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Der er flere oplysninger under DisplayObject.addChild." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Der er flere oplysninger under LoaderInfo.bytesLoaded og klassen Loader." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Der er flere oplysninger under LoaderInfo.bytesTotal og klassen Loader." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Du kan læse om tilsvarende funktionalitet under flash.net.URLLoader.  Pakken flash.net indeholder også funktionerne navigateToURL() og sendToURL() på pakkeniveau." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Der er flere oplysninger under LoaderInfo.url og klassen Loader." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Der er flere oplysninger under LoaderInfo.url og klassen Loader." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Brug egenskaben MovieClip.mask i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Der er flere oplysninger under LoaderInfo.swfVersion og klassen Loader." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Brug egenskaben MovieClip.currentFrame i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Brug egenskaben MovieClip.framesLoaded i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Brug egenskaben MovieClip.totalFrames i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Der er flere oplysninger under displayObjectInstance.root." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Der er flere oplysninger under displayObjectInstance.root." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Brug den statiske egenskab flash.media.SoundMixer.bufferTime i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Der er flere oplysninger under klassen Graphics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Brug egenskaben NetStream.bufferTime i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Brug egenskaben NetStream.currentFPS i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Brug egenskaben NetStream.videoCodec i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Brug egenskaben NetStream.audioCodec i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Brug egenskaben ProductManager.isInstalled i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Brug egenskaben ProductManager.installedVersion i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Brug egenskaben ProductManager.isRunning i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Brug metoden Point.add() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Brug egenskaben Proxy.deleteDescendants i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Brug metoden heapDump() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Brug egenskaben ProgressEvent.bytesLoaded i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Brug egenskaben ProgressEvent.bytesTotal i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Brug egenskaben Rectangle.isEmpty i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Brug egenskaben SoundTransform.pan i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Brug egenskaben Sockect.bytesAvailable i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Brug egenskaben SharedObject.size i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Brug egenskaben SharedObject.fps i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Dette understøttes ikke længere." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Brug metoden Sprite.constructChildren() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Brug egenskaben Sprite.dropTarget i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Brug egenskaben Stage.focus i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Brug egenskaben Stage.focus i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Brug egenskaben Stage.showDefaultContextMenu i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Brug egenskaben StyleSheet.styleNames i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Brug en forekomst af URLLoader til at indlæse StyleSheet-data, og send derefter indlæsningsfunktionens data til metoden StyleSheet.parseCSS. Der er flere oplysninger under klasserne URLLoader og EventDispatcher." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Brug en forekomst af URLLoader til at indlæse StyleSheet-data, og send derefter indlæsningsfunktionens data til metoden StyleSheet.parseCSS. Der er flere oplysninger under klasserne URLLoader og EventDispatcher." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Brug en forekomst af URLLoader til at indlæse StyleSheet-data, og send derefter indlæsningsfunktionens data til metoden StyleSheet.parseCSS. Der er flere oplysninger under klasserne URLLoader og EventDispatcher." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Brug en forekomst af URLLoader til at indlæse StyleSheet-data, og send derefter indlæsningsfunktionens data til metoden StyleSheet.parseCSS. Der er flere oplysninger under klasserne URLLoader og EventDispatcher." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Brug en forekomst af URLLoader til at indlæse StyleSheet-data, og send derefter indlæsningsfunktionens data til metoden StyleSheet.parseCSS. Der er flere oplysninger under klasserne URLLoader og EventDispatcher." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Brug egenskaben IME.enabled i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Brug egenskaben IME.enabled i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Brug egenskaben IME.instance i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Brug egenskaben IME.conversionMode i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Brug egenskaben IME.conversionMode i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Brug egenskaben System.vmVersion i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Brug egenskaben SWFLoaderInfo.swfVersion i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Brug egenskaben SWFLoaderInfo.actionScriptVersion i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Brug egenskaben TextField.defaultTextFormat i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Brug egenskaben TextField.defaultTextFormat i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Brug DisplayObjectContainer.parent.getChildIndex i stedet. Der er flere oplysninger under klassen DisplayObjectContainer som MovieClip udvider." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Brug DisplayObjectContainer.parent.setChildIndex i stedet. Der er flere oplysninger under klassen DisplayObjectContainer som MovieClip udvider." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Brug DisplayObjectContainer.getChildAt i stedet. Der er flere oplysninger under klassen DisplayObjectContainer som MovieClip udvider." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Brug DisplayObjectContainer.numChildren i stedet.  DisplayObjectContainer.addChild tilføjer altid den nye underordnede til indekset DisplayObjectContainer.numChildren." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Brug metoden TextField.replaceSelectedText() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Brug metoden TextField.getLineIndexOfChar() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Brug egenskaben TextField.selectionBeginIndex i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Brug egenskaben TextField.selectionEndIndex i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Brug egenskaben TextField.caretIndex i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Brug metoden Font.enumerateFonts() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Brug egenskaben TextField.maxScrollV i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Brug egenskaben TextField.scrollH i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Brug egenskaben TextField.maxScrollH i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Brug egenskaben TextField.defaultTextFormat i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Brug en midlertidig TextField, og brug TextField.getLineMetrics i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Brug egenskaben TextField.charCount i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Bruge metoden navigateToURL() i pakken flash.net i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Bruge metoden sendToURL() i pakken flash.net i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Brug egenskaben URLLoader.dataFormat i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Brug egenskaben URLStream.bytesAvailable i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Denne egenskab understøttes ikke længere." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Brug egenskaben URLRequest.applicationDomain i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Hvis du vil tilføje anmodningsheadere, skal du definere egenskaben URLRequest.requestHeaders til en samling URLRequestHeader-objekter." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Brug en forekomst af URLLoader til at indlæse XML-filen, og send derefter URLLoader-dataene til konstruktøren XMLDocuments. Der er flere oplysninger under klasserne URLLoader og EventDispatcher." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Bruge metoden sendToURL() i pakken flash.net i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Definer egenskaben postData for et URLRequest-objekt, og brug den med et URLLoader-objekt til at indlæse XML-filen.  Send URLLoader-dataene til konstruktøren XMLDocuments. Der er flere oplysninger under klasserne URLLoader, URLRequest og EventDispatcher." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Brug en forekomst af URLLoader til at indlæse XML-filen, og send derefter URLLoader-dataene til konstruktøren XMLDocuments. Der er flere oplysninger under klasserne URLLoader og EventDispatcher." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Hvis du vil tilføje anmodningsheadere, skal du definere egenskaben URLRequest.requestHeaders til en samling URLRequestHeader-objekter." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Der er flere oplysninger under URLLoader.bytesLoaded og klassen URLLoader." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Der er flere oplysninger under URLLoader.bytesTotal og klassen URLLoader." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Brug en forekomst af URLLoader til at indlæse XML-filen, og send derefter indlæsningsfunktionens data til metoden StyleSheet.parseCSS. Der er flere oplysninger under klasserne URLLoader og EventDispatcher." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Brug egenskaben URLRequest.contentType i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Kontroller om der er opstået undtagelser i konstruktøren XMLDocument eller metoden XMLDocument.parseXML i stedet. Der er flere oplysninger under XMLDocument." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Button, "Klassen Button er omdøbt til SimpleButton." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Container, "Klassen Container er omdøbt til DisplayObjectContainer." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Image, "Klassen Image er omdøbt til BitmapData." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "Klassen ImageFilter er omdøbt til BitmapFilter." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "Klassen ImageSprite er omdøbt til Bitmap." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "Klassen ImageLoaderInfo er omdøbt til BitmapLoaderInfo." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "Klassen ImeEvent er omdøbt til IMEEvent." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Key, "Klassen Key er omdøbt til Keyboard." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "Klassen LineMetrics er omdøbt til TextLineMetrics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Der er flere oplysninger under klassen URLVariables, egenskaberne URLRequest.urlVariables og URLRequest.postData samt egenskaben URLLoader.dataFormat." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "Klassen MenuEvent er omdøbt til ContextMenuEvent." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "Klassen SystemCapabilities er omdøbt til Capabilities." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Brug egenskaben TextField.getLineMetrics i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Button, "Klassen Button er omdøbt til SimpleButton." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Container, "Klassen Container er omdøbt til DisplayObjectContainer." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Image, "Klassen Image er omdøbt til BitmapData." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "Klassen ImageFilter er omdøbt til BitmapFilter." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "Klassen ImageSprite er omdøbt til Bitmap." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "Klassen ImageLoaderInfo er omdøbt til BitmapLoaderInfo." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "Klassen ImeEvent er omdøbt til IMEEvent." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Key, "Klassen Key er omdøbt til Keyboard." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "Klassen LineMetrics er omdøbt til TextLineMetrics." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Der er flere oplysninger under klassen URLVariables, egenskaberne URLRequest.urlVariables og URLRequest.postData samt egenskaben URLLoader.dataFormat." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "Klassen MenuEvent er omdøbt til ContextMenuEvent." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "Klassen SystemCapabilities er omdøbt til Capabilities." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Brug egenskaben TextField.getLineMetrics i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Der er flere oplysninger i hjælpen til klassen Proxy som har en lignende funktion." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Brug metoden XMLUI.getProperty i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Brug metoden XMLUI.setProperty i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Brug egenskaben DisplayObject.accessibilityProperties i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Brug egenskaben DisplayObject.scale9Grid i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Brug metoden Graphics.drawOval i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Brug egenskaben NetConnection.connected i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Brug egenskaben Socket.connected i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Brug egenskaben URLStream.connected i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Brug egenskaben SyncEvent.changeList i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Brug egenskaben TextField.scrollV i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Brug egenskaben TextField.bottomScrollV i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Brug konstanten BitmapDataChannel.RED i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Brug konstanten BitmapDataChannel.GREEN i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Brug konstanten BitmapDataChannel.BLUE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Brug konstanten BitmapDataChannel.ALPHA i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Brug operatoren is i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Brug metoden flash.system.Security.showSettings i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Brug egenskaben System.useCodePage i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Brug konstanten flash.events.EventDispatcher i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Brug den statiske egenskab flash.media.SoundMixer.bufferTime i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Opret en ny forekomst af bitmapbibliotekssymbolklassen, dvs. ny myBitmapName(), i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Der er flere oplysninger under Loader.load()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "Klassen MovieClipLoader er erstattet af klassen flash.display.Loader." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "Klassen MovieClipLoader er erstattet af klassen flash.display.Loader." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Der er flere oplysninger under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Der er flere oplysninger under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Brug konstanten flash.system.IMEConversionMode.ALPHANUMERIC_FULL i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Brug konstanten flash.system.IMEConversionMode.ALPHANUMERIC_HALF i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Brug konstanten flash.system.IMEConversionMode.CHINESE i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Brug konstanten flash.system.IMEConversionMode.JAPANESE_HIRAGANA i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Brug konstanten flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Brug konstanten flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALFi stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Brug konstanten flash.system.IMEConversionMode.KOREAN i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Brug konstanten flash.system.IMEConversionMode.UNKNOWN i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Der er flere oplysninger under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Der er flere oplysninger under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onCancel, "Hændelseshåndteringen onCancel udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener (cancel, onCancel)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Der er ikke noget som erstatter den direkte. Metoden willTrigger() kan bruges til at se om der er registreret nogen lyttefunktioner." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onIMEComposition, "Hændelseshåndteringen onIMEComposition udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener (imeComposition, handlerName)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Der er flere oplysninger under LoaderInfo.url og klassen Loader." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Brug metoden getFullYear() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Brug metoden setFullYear() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Brug metoden getUTCFullYear() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Brug egenskaben rate i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Selection, "Egenskaben Selection er blevet fjernet. Der er flere oplysninger under metoden addEventListener i den klasse du vil vælge oplysninger fra." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Selection, "Egenskaben Selection er blevet fjernet. Der er flere oplysninger under metoden addEventListener i den klasse du vil vælge oplysninger fra." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Brug egenskaben gain i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Der kan tildeles farveværdier direkte vha. ColorTransform-klassens konstruktør eller egenskaber." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Der kan tildeles farveværdier direkte vha. ColorTransform-klassens konstruktør eller egenskaber." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Se hjælpen til de fokusrelaterede egenskaber i klassen flash.display.InteractiveObject." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Se hjælpen til metoden flash.display.Graphics.beginBitmapFill." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Se hjælpen til metoden flash.display.DisplayObject.hitTestObject()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Se hjælpen til metoden addChild()." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Brug metoden load() i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Brug flash.media.SoundChannel.leftPeak og flash.media.SoundChannel.rightPeak til at overvåge og styre amplituden i en lydkanal." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Brug egenskaben soundTransform i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Brug egenskaben SoundTransform.pan i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Brug egenskaben SoundTransform.pan i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Brug egenskaben bytesLoaded i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Brug egenskaben bytesTotal i stedet." );
        warningConstantsDA[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Ineffektiv brug af += på TextField." );
        warningConstantsDA[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Det er mange gange langsommer at tilføje tekst til et TextField vha. += i stedet for at bruge metoden TextField.appendText()." );
        warningConstantsDA[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Der mangler muligvis parenteser." );
        warningConstantsDA[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Der er brugt en funktionsværdi hvor en %s-type var forventet.  Der mangler muligvis parenteser () efter denne funktionshenvisning." );
        warningConstantsDA[index++] = new AscWarning(kWarning_InstanceOfChanges, "Brug af operatoren instanceof." );
        warningConstantsDA[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "Operatoren instanceof er frarådet, brug operatoren is i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "Hændelseshåndteringen allowDomain() er nu en standardmetode og ikke en hændelsestilbagekaldsfunktion. Der er flere oplysninger under den nye metode LocalConnection.allowDomain." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "Hændelseshåndteringen allowInsecureDomain() er nu en standardmetode og ikke en hændelsestilbagekaldsfunktion. Der er flere oplysninger under den nye metode LocalConnection.allowInsecureDomain." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_call, "Den globale metode call() understøttes ikke længere." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_Color, "Klassen Color er blevet fjernet. Brug klassen flash.geom.ColorTransform som har en tilsvarende funktionalitet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Color, "Klassen Color er blevet fjernet. Brug klassen flash.geom.ColorTransform som har en tilsvarende funktionalitet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF-filer bruger altid eksakte regler til at matche domæner." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp_capabilities, "Klassen capabilities er omdøbt til Capabilities." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_capabilities, "Klassen capabilities er omdøbt til Capabilities." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Der er flere oplysninger under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Der er flere oplysninger under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onComplete, "Hændelseshåndteringen onComplete udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('complete', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onHTTPError, "Hændelseshåndteringen onHTTPError udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('httpError', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onIOError, "Hændelseshåndteringen onIOError udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('ioError', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onProgress, "Hændelseshåndteringen onProgress udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('progress', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onSecurityError, "Hændelseshåndteringen onSecurityError udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('securityError', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Event_onOpen, "Hændelseshåndteringen onOpen udløses ikke automatisk af Flash Player under kørslen i ActionScript 3.0.  Du skal først registrere denne håndteringsmåde for hændelsen vha. addEventListener ('open', callback_handler)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Mulig brug af ActionScript 2.0 XML-klasse." );
        warningConstantsDA[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Migreringsproblem: Klassen ActionScript 2.0 XML er omdøbt til XMLDocument." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadDateCast, "Ugyldig Date-ændringshandling." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) opfører sig på samme måde som den nye Date().toString(). Hvis du vil ændre værdi til typen Date, skal du bruge \"x som Date\" i stedet for Date(x)." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ImportHidesClass, "Import af en pakke med samme navn som den aktuelle klasse skjuler klassens id i dette område." );
        warningConstantsDA[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Import af en pakke med samme navn som den aktuelle klasse skjuler klassens id i dette område." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Der er mere end ét argument med samme navn." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Der er angivet mere end ét argument med navnet '%s'.  Henvisninger til det argument vil altid benytte den sidste." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Brug metoden Rectangle.containsRect i stedet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_eval, "Denne funktionalitet er blevet fjernet." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Denne funktionalitet er erstattet af egenskaben flash.system.Capabilities.version." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Denne funktionalitet er erstattet af egenskaben flash.display.MovieClip.framesLoaded." );
        warningConstantsDA[index++] = new AscWarning(kUnsupportedProp__global, "Egenskaben _global er blevet fjernet.  Du kan bruge en tilsvarende funktionalitet ved at anvende et statisk medlem af klassen." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadBoolAssignment, "Ikke-boolesk værdi bruges, hvor boolesk værdi forventes." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "%s bruges, hvor en boolesk værdi var forventet.  Udtrykkets type vil blive tvunget til at være Boolean." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadES3TypeProp, "Ukendt egenskab." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s er ikke en genkendt egenskab i den dynamiske klasse %s." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Ukendt metode." );
        warningConstantsDA[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s er ikke en genkendt metode i den dynamiske klasse %s." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Dobbelt variabeldefinition." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Dobbelt variabeldefinition." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Definitionen har det samme navn som en importeret pakke.  Henvisninger der ikke er kvalificerede, vil fortolke pakken og ikke definitionen." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Definitionen har det samme navn som en importeret pakke.  Henvisninger der ikke er kvalificerede, vil fortolke pakken og ikke definitionen." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Muligt forsøg på at slette en fast egenskab." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "Den erklærede egenskab %s kan ikke slettes. Hvis du vil frigøre til tilhørende hukommelse, skal du sætte værdien til null." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Deprecated, "Brug af frarådet definition." );
        warningConstantsDA[index++] = new AscWarning(kWarning_Deprecated_specific, "%s' er blevet frarådet." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DeprecatedMessage, "Brug af frarådet definition." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsDA[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Brug af frarådet definition." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "%s' er blevet frarådet.  Brug '%s'." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DeprecatedSince, "Brug af frarådet definition." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "%s' har været frarådet siden %s. Brug '%s'." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Brug af frarådet definition." );
        warningConstantsDA[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "%s' har været frarådet siden %s." );
   }

   static final AscWarning[] warningConstantsDE= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsDE() 
   {
      int index=0;
        warningConstantsDE[index++] = new AscWarning(kWarning_NoTypeDecl, "Typdeklaration fehlt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' hat keine Typdeklaration." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Unlogischer Vergleich mit undefinierter Variable. Nur unklassifizierte Variablen (oder Variablen des Typs *) dürfen undefiniert sein." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Variablen vom Typ %s dürfen nicht undefiniert sein. Der Typ des nicht definierten Werts wird vor dem Vergleich in %s umgewandelt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "Die in dem neuen Ausdruck verwendete Funktion gibt einen Wert zurück. Das Ergebnis ist der Rückgabewert der Funktion und nicht eine neue Instanz dieser Funktion." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Migrationsfehler: Das Ergebnis der neuen %s ist der Rückgabewert von %s und nicht eine neue Instanz dieser Funktion." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() ohne Argumente gibt falsche Werte in ActionScript 3.0 zurück. Boolean() wurde in ActionScript 2.0 als undefiniert zurückgegeben." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Verwendung von Boolean() ohne Argumente." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NumberFromStringChanges, "In ActionScript 3.0 werden Leerzeichen ignoriert und '' gibt 0 zurück. Number() gibt in ActionScript 2.0 den Wert NaN zurück, wenn der Parameter '' lautet oder Leerzeichen enthält." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Migrationsfehler: Wenn die Zahlenfunktion ('') mit einem Argument mit einem leeren String abgerufen wird, wird in ActionScript 3.0 der Wert 0 ausgegeben und in ActionScript 2.0 der Wert NaN." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Format von Array.toString() hat sich geändert." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Migrationsfehler: Array.toString()-Behandlung der Null und undefinierter Elemente hat sich geändert." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Nicht unterstützte Eigenschaft in ActionScript 2.0." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Migrationsfehler: Die Eigenschaft %s wird nicht mehr unterstützt. %s." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Nicht unterstützte ActionScript 2.0-Funktion." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Migrationsfehler: Die Methode %s wird nicht mehr unterstützt. %s." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Migrationsfehler: __resolve wird nicht mehr unterstützt. Verwenden Sie die neue Proxy-Klasse für ähnliche Funktionen." );
        warningConstantsDE[index++] = new AscWarning(kWarning_LevelNotSupported, "_level wird nicht mehr unterstützt. Weitere Informationen hierzu finden Sie im flash.display-Paket." );
        warningConstantsDE[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Migrationsfehler: _level wird nicht mehr unterstützt. Weitere Informationen hierzu finden Sie im flash.display-Paket." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ClassIsSealed, "Klasse ist versiegelt. Es können keine Mitglieder dynamisch hinzugefügt werden." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Migrationsfehler: %s ist keine dynamische Klasse. Instanzen können keine Mitglieder dynamisch hinzugefügt werden." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Änderung beim Festlegen des Gültigkeitsbereichs für dieses Schlüsselwort. Aus einer Klasseninstanz extrahierte Klassenmethoden werden immer in diese Instanz zurückgegeben. In ActionScript 2.0 wird diese Instanz dynamisch gesucht, abhängig davon, woher die Methode aufgerufen wird." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Migrationsfehler: Methode %s verhält sich in ActionScript 3.0 aufgrund einer Änderung beim Festlegen des Gültigkeitsbereichs für dieses Schlüsselwort anders. Weitere Informationen finden Sie in der Beschreibung für Warnung 1083." );
        warningConstantsDE[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Namespace-Deklaration fehlt (z. B. Variable ist nicht als 'public', 'private' usw. definiert)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "Der Gültigkeitsbereich von %s wird auf den Standard-Namespace festgelegt: %s intern. Der Namespace ist außerhalb dieses Pakets nicht sichtbar." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 durchläuft alle Objekteigenschaften innerhalb einer 'for x in target'-Anweisung in zufälliger Reihenfolge." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Migrationsfehler: ActionScript 3.0 durchläuft alle Objekteigenschaften innerhalb einer 'for x in target'-Anweisung in zufälliger Reihenfolge." );
        warningConstantsDE[index++] = new AscWarning(kWarning_InternalError, "Interner Fehler im Compiler." );
        warningConstantsDE[index++] = new AscWarning(kWarning_InternalError_specific, "Fehlercode: %s." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler wurde nicht als Listener hinzugefügt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Migrationsfehler: %s" );
        warningConstantsDE[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Der negative Wert ändert sich in einen großen positiven Wert, wenn er einem uint-Datentyp zugewiesen wird." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Negativer Wert wird verwendet, wenn ein uint-Wert (nicht negativ) erwartet wird." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadNullComparision, "Unlogischer Vergleich mit null." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Unlogischer Vergleich mit null. Variablen vom Typ %s dürfen nicht null sein." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadNaNComparision, "Unlogischer Vergleich mit NaN. Jeder Vergleichsvorgang mit NaN wird als 'false' ausgegeben, da NaN != NaN." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Unlogischer Vergleich mit NaN. Diese Anweisung wird immer als 'false' ausgegeben." );
        warningConstantsDE[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Zuweisung in Bedingung." );
        warningConstantsDE[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Zuweisung in Bedingung. Wollten Sie == statt = eingeben?" );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadNullAssignment, "Nicht ausführbare Nullzuweisung." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "Anstelle des erwarteten Werts %s wird null verwendet." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NoConstructor, "Konstruktor fehlt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NoConstructor_specific, "Für Klasse %s wurde keine Konstruktorfunktion definiert." );
        warningConstantsDE[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Leere Anweisung." );
        warningConstantsDE[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Codeblock erwartet, aber leere Anweisung gefunden. Haben Sie versehentlich ein Semikolon „;“ eingegeben?" );
        warningConstantsDE[index++] = new AscWarning(kWarning_ConstNotInitialized, "Konstante nicht initialisiert." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "Die Konstante wurde nicht initialisiert." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadArrayCast, "Möglicherweise ist der Array-Umwandlungsvorgang ungültig." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) verhält sich genauso wie neues Array(x). Um einen Wert in den Typ Array umzuwandeln, verwenden Sie den Ausdruck 'x' als Array anstelle von Array(x)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "Die super()-Anweisung wurde nicht innerhalb des Konstruktors aufgerufen." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "Die super()-Anweisung wird vor dem Aufrufen dieses Konstruktors ausgeführt. Fügen Sie innerhalb des Konstruktors einen super()-Aufruf hinzu, wenn Sie ausdrücklich steuern möchten, wann die Anweisung ausgeführt wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_version, "Verwenden Sie stattdessen Capabilities.version." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Weitere Informationen finden Sie unter InteractiveObject.focusRect." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Highquality, "Weitere Informationen finden Sie unter Stage.quality." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Weitere Informationen finden Sie unter Stage.quality." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Weitere Informationen finden Sie unter Stage.quality." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Quality, "Weitere Informationen finden Sie unter Stage.quality." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Verwenden Sie stattdessen die statische Eigenschaft flash.media.SoundMixer.bufferTime." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Weitere Informationen finden Sie unter LoaderInfo.url." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_NewLine, "Verwenden Sie '\n' für 'newline'." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Weitere Informationen finden Sie unter textField.maxScroll." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Level, "Das Stufenkonzept ist in ActionScript 3.0 nicht vorhanden; stattdessen ist der direkte Zugriff auf die Anzeigeliste möglich. Weitere Informationen finden Sie im flash.display-Paket." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Parent, "Verwenden Sie stattdessen die übergeordnete Eigenschaft." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Root, "Diese Eigenschaft wurde entfernt. Die nächstliegende Entsprechung ist Stage, die als Stammverzeichnis der ActionScript 3.0-Anzeigeliste dient." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Deklarieren Sie stattdessen den Aufruf als ein Argument der Funktion." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Verwenden Sie stattdessen die übergeordnete Eigenschaft." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Weitere Informationen finden Sie unter Sprite.hitArea." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Scroll, "Weitere Informationen hierzu finden Sie in den Eigenschaften scrollH und scrollV der flash.text.TextField-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Anstelle von Pfaden, verwenden Sie MovieClip-Objekte direkt als Argumente." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Weitere Informationen finden Sie unter Video.videoHeight." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Weitere Informationen finden Sie unter Video.videoWidth." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp__Proto__, "Weitere Informationen finden Sie unter __proto__ (veraltet)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Stage, "Weitere Informationen finden Sie unter DisplayObject.stage." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Verwenden Sie stattdessen die Methode registerClass() im flash.net-Paket." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_random, "Verwenden Sie stattdessen Math.random()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_chr, "Verwenden Sie stattdessen String.fromCharCode()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Verwenden Sie stattdessen String.fromCharCode()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ord, "Verwenden Sie stattdessen String.charCodeAt()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_mbord, "Verwenden Sie stattdessen String.charCodeAt()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_substring, "Verwenden Sie stattdessen die Methode String.substr." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Verwenden Sie stattdessen die Methode String.substr." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_length, "Verwenden Sie stattdessen die Eigenschaft length des Arguments." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_mblength, "Verwenden Sie stattdessen die Eigenschaft length des Arguments." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Weitere Informationen finden Sie in den Änderungen zu ASnative." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Legen Sie stattdessen die Eigenschaften direkt in der Instanz mithilfe der Punktsyntax (.) fest." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Greifen Sie stattdessen mit der Punktsyntax (.) direkt auf die Eigenschaften zu." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Legen Sie stattdessen die Eigenschaften direkt in der Instanz mithilfe der Punktsyntax (.) fest." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Weitere Informationen hierzu finden Sie unter TextEvent.LINK und addEventListener()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Diese Methode wurde in das flash.utils-Paket verschoben." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Ersetzt durch neue Konstruktorfunktion der MovieClip-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Verschoben in das flash.system-Paket. Siehe auch flash.external.ExternalInterface-Klasse für JavaScript/ActionScript-Kommunikation." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_getURL, "Ähnliche Funktionen finden Sie unter flash.net.URLLoader. Das flash.net-Paket enthält außerdem die Paketfunktionen navigateToURL() und sendToURL()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Weitere Informationen finden Sie unter MovieClip.gotoAndPlay()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Weitere Informationen finden Sie unter MovieClip.gotoAndStop()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_play, "Weitere Informationen finden Sie unter MovieClip.play()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_print, "Weitere Informationen finden Sie unter PrintJob.start()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Weitere Informationen finden Sie unter PrintJob." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Weitere Informationen finden Sie unter PrintJob." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_printNum, "Weitere Informationen finden Sie unter PrintJob." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Verwenden Sie Container.removeChild(childName). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Verschoben in das flash.utils-Paket. Sie können stattdessen die Timer-Klasse verwenden." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Weitere Informationen finden Sie unter MovieClip.nextFrame()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Weitere Informationen finden Sie unter MovieClip.startDrag()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_stop, "Weitere Informationen finden Sie unter MovieClip.stop()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Weitere Informationen finden Sie unter Sound.stopAllSounds()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Weitere Informationen finden Sie unter MovieClip.stopDrag()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Verwenden Sie stattdessen den Punkt-Operator (.) für die with-Anweisung." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Weitere Informationen hierzu finden Sie unter DisplayObject.stage und Stage.quality." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Verwenden Sie stattdessen DisplayObjectContainer.removeChild(childName). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Verwenden Sie stattdessen DisplayObjectContainer.removeChild(childName). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Diese Funktion ist keine globale Funktion mehr, sie ist jedoch weiterhin als eine Methode der TimerEvent-, MouseEvent- und KeyboardEvent-Klassen verfügbar." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Weitere Informationen finden Sie unter Video.attachNetStream, Video.attachCamera." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Verwenden Sie die URLLoader-Klasse, um den Ladevorgang auszuführen und das Ergebnis an StyleSheet.parseCSS() weiterzuleiten." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "In ActionScript 3.0 werden alle Klassen standardmäßig registriert. Wenn Sie AMF verwenden, erhalten Sie weitere Informationen unter flash.utils.registerClassAlias()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Verwenden Sie Zugriffsfunktionen (get/set-Funktionen) oder die flash.utils.Proxy-Klasse für ähnliche Funktionen." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Verwenden Sie Zugriffsfunktionen (get/set-Funktionen) oder die flash.utils.Proxy-Klasse für ähnliche Funktionen." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Weitere Informationen finden Sie unter MovieClip.loadMovie()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Weitere Informationen finden Sie unter MovieClip.loadMovieNum()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Weitere Informationen finden Sie unter Loader.load()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Weitere Informationen finden Sie unter Loader.load()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Verwenden Sie die SWF-Klasse, um Sound aus der Bibliothek zu erstellen" );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onStatus, "Die Ereignisprozedur onStatus wird in ActionScript 3.0 zur Laufzeit nicht automatisch vom Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('status', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onID3, "Die Ereignisprozedur onID3 wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('id3', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onLoad, "Die Ereignisprozedur onLoad wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('load', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onSoundComplete, "Die Ereignisprozedur onSoundComplete wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('soundComplete', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onSetFocus, "Die Ereignisprozedur onSetFocus wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('focusIn', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onResize, "Die Ereignisprozedur onResize wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('resize', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onChanged, "Die Ereignisprozedur onChanged wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('change', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onKillFocus, "Die Ereignisprozedur onKillFocus wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('focusOut', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onScroller, "Die Ereignisprozedur onScroller wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('scroll', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onMouseDown, "Die Ereignisprozedur onMouseDown wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseDown', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onMouseUp, "Die Ereignisprozedur onMouseUp wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseUp', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onMouseMove, "Die Ereignisprozedur onMouseMove wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseMove', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onMouseWheel, "Die Ereignisprozedur onMouseWheel wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseWheel', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onKeyDown, "Die Ereignisprozedur onKeyDown wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('keyDown', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onKeyUp, "Die Ereignisprozedur onKeyUp wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('keyUp', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onData, "Die Ereignisprozedur onData wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('data', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "Die Ereignisprozedur onHTTPStatus wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('httpStatus', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onDragOut, "Die Ereignisprozedur onDragOut wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseOut', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onDragOver, "Die Ereignisprozedur onDragOver wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseOver', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onPress, "Die Ereignisprozedur onPress wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseDown', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onRelease, "Die Ereignisprozedur onRelease wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('click', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "Die Ereignisprozedur onReleaseOutside wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseUp', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onRollOut, "Die Ereignisprozedur onRollOut wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseOut', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onRollOver, "Die Ereignisprozedur onRollOver wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseOver', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onActivity, "Die Ereignisprozedur onActivity wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('activity', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onSelect, "Die Ereignisprozedur onSelect wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('menuSelect', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onEnterFrame, "onEnterFrame wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('enterFrame', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onUnload, "Die Ereignisprozedur onUnload wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('unload', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onLoadComplete, "onLoadComplete wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('load', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onLoadError, "Die Ereignisprozedur onLoadError wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('error', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onLoadInit, "Die Ereignisprozedur onLoadInit wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('init', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onLoadProgress, "Die Ereignisprozedur onLoadProgress wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('progress', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onLoadStart, "onLoadStart wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('start', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onClose, "Die Ereignisprozedur onClose wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('close', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onConnect, "Die Ereignisprozedur onConnect wird in ActionScript 3.0 nicht automatisch von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('connect', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onXML, "onXML wird in ActionScript 3.0 nicht automatisch von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('xml', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Verwenden Sie stattdessen die Eigenschaft hasChildNodes." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "Die XMLEvent-Klasse ist veraltet und das xml-Ereignis wird nicht mehr gesendet. Beim Laden der Datei wird nur das data-Ereignis gesendet." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "Die XMLDoc-Klasse wurde in XMLDocument umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Verwenden Sie stattdessen die Eigenschaft Accessibility.active." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Verwenden Sie stattdessen die Konstante ActivityEvent.ACTIVITY." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Verwenden Sie stattdessen DisplayObjectContainer.parent.getChildIndex. Lesen Sie die Hilfe zur DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Verwenden Sie stattdessen DisplayObjectContainer.parent.setChildIndex. Lesen Sie die Hilfe zur DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Verwenden Sie stattdessen DisplayObjectContainer.getChildAt. Lesen Sie die Hilfe zur DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Verwenden Sie stattdessen DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild fügt das neue untergeordnete Element immer zum Index DisplayObjectContainer.numChildren hinzu." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Verwenden Sie stattdessen die Eigenschaft ByteArray.bytesAvailable." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Verwenden Sie stattdessen die Eigenschaft ByteArray.position." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Verwenden Sie stattdessen die Eigenschaft ByteArray.position." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Verwenden Sie stattdessen die Methode Camera.getCamera()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Verwenden Sie stattdessen die Eigenschaft Camera.currentFPS." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Verwenden Sie stattdessen die Eigenschaft Camera.keyFrameInterval." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Verwenden Sie stattdessen die Eigenschaft Camera.loopback." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Verwenden Sie stattdessen die Eigenschaft ColorTransform.color." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Verwenden Sie stattdessen die Eigenschaft ColorTransform.color." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Verwenden Sie stattdessen die Eigenschaft Container.textSnapshot." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Verwenden Sie stattdessen die Methode ContextMenu.clone()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Verwenden Sie stattdessen die Eigenschaft ContextMenu.forwardAndBack." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Verwenden Sie stattdessen die Methode ContextMenuItem.clone()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Verwenden Sie stattdessen die Eigenschaft CustomActions.actionsList." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Verwenden Sie stattdessen die Konstante DataEvent.DATA." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.scaleX." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.scaleX." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.scaleY." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.scaleY." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.mouseX." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.mouseX." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.mouseY." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.mouseY." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.name." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.parent." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.mask." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.visible." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.x." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.y." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.rotation." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.alpha." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.width." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.height." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Verwenden Sie stattdessen die Eigenschaft ExternalInterface.available." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Verwenden Sie stattdessen die Konstante ErrorEvent.ERROR." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Verwenden Sie stattdessen die Eigenschaft Event.isDefaultPrevented." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Verwenden Sie stattdessen die Konstante Event.ACTIVATE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Verwenden Sie stattdessen die Konstante Event.ADDED." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Verwenden Sie stattdessen die Konstante Event.CANCEL." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Verwenden Sie stattdessen die Konstante Event.CHANGE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Verwenden Sie stattdessen die Konstante Event.CLOSE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Verwenden Sie stattdessen die Konstante Event.COMPLETE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Verwenden Sie stattdessen die Konstante Event.CONNECT." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Verwenden Sie stattdessen die Konstante Event.DEACTIVATE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Verwenden Sie stattdessen die Konstante Event.ENTER_FRAME." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Verwenden Sie stattdessen die Konstante Event.ID3." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Verwenden Sie stattdessen die Konstante Event.INIT." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Verwenden Sie stattdessen die Konstante Event.MOUSE_LEAVE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Verwenden Sie stattdessen die Konstante Event.OPEN." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Verwenden Sie stattdessen die Konstante Event.REMOVED." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Verwenden Sie stattdessen die Konstante Event.RENDER." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Verwenden Sie stattdessen die Konstante Event.RESIZE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Verwenden Sie stattdessen die Konstante Event.SCROLL." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Verwenden Sie stattdessen die Konstante Event.SELECT." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Verwenden Sie stattdessen die Konstante Event.SOUND_COMPLETE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Verwenden Sie stattdessen die Konstante Event.TAB_CHILDREN_CHANGE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Verwenden Sie stattdessen die Konstante Event.TAB_ENABLED_CHANGE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Verwenden Sie stattdessen die Konstante Event.TAB_INDEX_CHANGE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Verwenden Sie stattdessen die Konstante Event.UNLOAD." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Verwenden Sie stattdessen die Konstante FocusEvent.FOCUS_IN." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Verwenden Sie stattdessen die Konstante FocusEvent.FOCUS_OUT." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Verwenden Sie stattdessen die Konstante FocusEvent.KEY_FOCUS_CHANGE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Verwenden Sie stattdessen die Konstante FocusEvent.MOUSE_FOCUS_CHANGE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Verwenden Sie stattdessen die Methode Graphics.beginBitmapFill()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Verwenden Sie stattdessen die Eigenschaft BitmapFilter.quality." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Verwenden Sie stattdessen KeyboardEvent.charCode." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Verwenden Sie stattdessen KeyboardEvent.keyCode." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Weitere Informationen finden Sie in der KeyboardEvent-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Weitere Informationen finden Sie unter KeyboardEvent.ctrlKey, KeyboardEvent.altKey und KeyboardEvent.shiftKey." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Verwenden Sie stattdessen die Konstante PAGE_DOWN." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Verwenden Sie stattdessen die Konstante PAGE_UP." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Verwenden Sie stattdessen die Konstante DELETE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Verwenden Sie stattdessen die Konstante CAPS_LOCK." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Verwenden Sie stattdessen eine der Konstanten NUMPAD_0 -> NUMPAD_9." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Verwenden Sie stattdessen die Eigenschaft InteractiveObject.focusRect." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Verwenden Sie stattdessen die Eigenschaft InteractiveObject.contextMenu." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Verwenden Sie stattdessen die Eigenschaft KeyboardEvent.charCode." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Verwenden Sie stattdessen die Eigenschaft KeyboardEvent.keyCode." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Verwenden Sie stattdessen die Eigenschaft Loader.contentLoaderInfo." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Verwenden Sie stattdessen die Eigenschaft LoaderInfo.loaderURL." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Verwenden Sie stattdessen die Eigenschaft LocalConnection.domain." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Verwenden Sie stattdessen die Eigenschaft MenuEvent.contextMenuOwner." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Verwenden Sie stattdessen die Methode Microphone.getMicrophone()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Wenn der Name der MovieClip-Unterklasse A lautet, verwenden Sie var mc= new A(); addChild(mc). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Verwenden Sie var mc= new MovieClip(); addChild(mc). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Verwenden Sie var tf= new TextField(); addChild(mc). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Verwenden Sie Container.removeChild(childName). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Verwenden Sie var l = new Loader(); addChild(l); l.load(new URLRequest(\"Ihre URL\"));. Weitere Informationen finden Sie in den Klassen Loader und DisplayObjectContainer." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Verwenden Sie stattdessen DisplayObjectContainer.removeChild(childName). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Verwenden Sie stattdessen DisplayObjectContainer.removeChild(childName). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Verwenden Sie stattdessen DisplayObjectContainer.parent.getChildIndex. Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Verwenden Sie stattdessen DisplayObjectContainer.parent.setChildIndex. Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Verwenden Sie stattdessen DisplayObjectContainer.getChildAt. Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Verwenden Sie stattdessen DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild fügt das neue untergeordnete Element immer zum Index DisplayObjectContainer.numChildren hinzu." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Weitere Informationen finden Sie unter DisplayObject.addChild." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Weitere Informationen finden Sie in den Klassen LoaderInfo.bytesLoaded und Loader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Weitere Informationen finden Sie in den Klassen LoaderInfo.bytesTotal und Loader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Ähnliche Funktionen finden Sie unter flash.net.URLLoader. Das flash.net-Paket enthält außerdem die Paketfunktionen navigateToURL() und sendToURL()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Weitere Informationen finden Sie in den Klassen LoaderInfo.url und Loader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Weitere Informationen finden Sie in den Klassen LoaderInfo.url und Loader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Verwenden Sie stattdessen die Eigenschaft MovieClip.mask." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Weitere Informationen finden Sie in den Klassen LoaderInfo.swfVersion und Loader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Verwenden Sie stattdessen die Eigenschaft MovieClip.currentFrame." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Verwenden Sie stattdessen die Eigenschaft MovieClip.framesLoaded." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Verwenden Sie stattdessen die Eigenschaft MovieClip.totalFrames." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Weitere Informationen finden Sie unter displayObjectInstance.root." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Weitere Informationen finden Sie unter displayObjectInstance.root." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Verwenden Sie stattdessen die statische Eigenschaft flash.media.SoundMixer.bufferTime." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Verwenden Sie stattdessen die Eigenschaft NetStream.bufferTime." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Verwenden Sie stattdessen die Eigenschaft NetStream.currentFPS." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Verwenden Sie stattdessen die Eigenschaft NetStream.videoCodec." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Verwenden Sie stattdessen die Eigenschaft NetStream.audioCodec." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Verwenden Sie stattdessen die Eigenschaft ProductManager.isInstalled." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Verwenden Sie stattdessen die Eigenschaft ProductManager.installedVersion." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Verwenden Sie stattdessen die Eigenschaft ProductManager.isRunning." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Verwenden Sie stattdessen die Methode Point.add()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Verwenden Sie stattdessen die Eigenschaft Proxy.deleteDescendants." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Verwenden Sie stattdessen die Methode heapDump()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Verwenden Sie stattdessen die Eigenschaft ProgressEvent.bytesLoaded." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Verwenden Sie stattdessen die Eigenschaft ProgressEvent.bytesTotal." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Verwenden Sie stattdessen die Eigenschaft Rectangle.isEmpty." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Verwenden Sie stattdessen die Eigenschaft SoundTransform.pan." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Verwenden Sie stattdessen die Eigenschaft Sockect.bytesAvailable." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Verwenden Sie stattdessen die Eigenschaft SharedObject.size." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Verwenden Sie stattdessen die Eigenschaft SharedObject.fps." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Diese Methode wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Verwenden Sie stattdessen die Methode Sprite.constructChildren()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Verwenden Sie stattdessen die Eigenschaft Sprite.dropTarget." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Verwenden Sie stattdessen die Eigenschaft Stage.focus." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Verwenden Sie stattdessen die Eigenschaft Stage.focus." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Verwenden Sie stattdessen die Eigenschaft Stage.showDefaultContextMenu." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Verwenden Sie stattdessen die Eigenschaft StyleSheet.styleNames." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Verwenden Sie eine Instanz von URLLoader, um die StyleSheet-Daten zu laden, und leiten Sie dann die Daten des Loaders an die Methode StyleSheet.parseCSS weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Verwenden Sie eine Instanz von URLLoader, um die StyleSheet-Daten zu laden, und leiten Sie dann die Daten des Loaders an die Methode StyleSheet.parseCSS weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Verwenden Sie eine Instanz von URLLoader, um die StyleSheet-Daten zu laden, und leiten Sie dann die Daten des Loaders an die Methode StyleSheet.parseCSS weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Verwenden Sie eine Instanz von URLLoader, um die StyleSheet-Daten zu laden, und leiten Sie dann die Daten des Loaders an die Methode StyleSheet.parseCSS weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Verwenden Sie eine Instanz von URLLoader, um die StyleSheet-Daten zu laden, und leiten Sie dann die Daten des Loaders an die Methode StyleSheet.parseCSS weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Verwenden Sie stattdessen die Eigenschaft IME.enabled." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Verwenden Sie stattdessen die Eigenschaft IME.enabled." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Verwenden Sie stattdessen die Eigenschaft IME.instance." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Verwenden Sie stattdessen die Eigenschaft IME.conversionMode." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Verwenden Sie stattdessen die Eigenschaft IME.conversionMode." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Verwenden Sie stattdessen die Eigenschaft System.vmVersion." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Verwenden Sie stattdessen die Eigenschaft SWFLoaderInfo.swfVersion." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Verwenden Sie stattdessen die Eigenschaft SWFLoaderInfo.actionScriptVersion." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Verwenden Sie stattdessen die Eigenschaft TextField.defaultTextFormat." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Verwenden Sie stattdessen die Eigenschaft TextField.defaultTextFormat." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Verwenden Sie stattdessen DisplayObjectContainer.parent.getChildIndex. Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Verwenden Sie stattdessen DisplayObjectContainer.parent.setChildIndex. Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Verwenden Sie stattdessen DisplayObjectContainer.getChildAt. Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Verwenden Sie stattdessen DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild fügt das neue untergeordnete Element immer zum Index DisplayObjectContainer.numChildren hinzu." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Verwenden Sie stattdessen die Methode TextField.replaceSelectedText()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Verwenden Sie stattdessen die Methode TextField.getLineIndexOfChar()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Verwenden Sie stattdessen die Eigenschaft TextField.selectionBeginIndex." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Verwenden Sie stattdessen die Eigenschaft TextField.selectionEndIndex." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Verwenden Sie stattdessen die Eigenschaft TextField.caretIndex." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Verwenden Sie stattdessen die Methode Font.enumerateFonts()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Verwenden Sie stattdessen die Eigenschaft TextField.maxScrollV." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Verwenden Sie stattdessen die Eigenschaft TextField.scrollH." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Verwenden Sie stattdessen die Eigenschaft TextField.maxScrollH." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Verwenden Sie stattdessen die Eigenschaft TextField.defaultTextFormat." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Erstellen Sie ein temporäres Textfeld und verwenden Sie stattdessen TextField.getLineMetrics." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Verwenden Sie stattdessen die Eigenschaft TextSnapshot.charCount." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Verwenden Sie stattdessen die Methode navigateToURL() im flash.net-Paket." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Verwenden Sie stattdessen die Methode sendToURL() im flash.net-Paket." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Verwenden Sie stattdessen die Eigenschaft URLLoader.dataFormat." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Verwenden Sie stattdessen die Eigenschaft URLStream.bytesAvailable." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Diese Eigenschaft wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Verwenden Sie stattdessen die Eigenschaft URLRequest.applicationDomain." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Um Anforderungsheader hinzuzufügen, setzen Sie die Eigenschaft URLRequest.requestHeaders auf ein Array mit URLRequestHeader-Objekten." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Verwenden Sie eine Instanz von URLLoader, um die XML-Datei zu laden, und leiten Sie dann die Daten des URLLoaders an den Konstruktor von XMLDocument weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Verwenden Sie stattdessen die Methode sendToURL() im flash.net-Paket." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Legen Sie eine postData-Eigenschaft für das URLRequest-Objekt fest und verwenden Sie sie mit einem URLLoader-Objekt, um die XML-Datei zu laden. Leiten Sie die Daten des URLLoaders an den Konstruktor von XMLDocument weiter. Weitere Informationen finden Sie in den Klassen URLLoader, URLRequest und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Verwenden Sie eine Instanz von URLLoader, um die XML-Datei zu laden, und leiten Sie dann die Daten des URLLoaders an den Konstruktor von XMLDocument weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Um Anforderungsheader hinzuzufügen, setzen Sie die Eigenschaft URLRequest.requestHeaders auf ein Array mit URLRequestHeader-Objekten." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Weitere Informationen finden Sie in den Klassen URLLoader.bytesLoaded und URLLoader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Weitere Informationen finden Sie in den Klassen URLLoader.bytesTotal und URLLoader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Verwenden Sie eine Instanz von URLLoader, um die XML-Datei zu laden, und leiten Sie dann die Daten des Loaders an die Methode StyleSheet.parseCSS weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Verwenden Sie stattdessen die Eigenschaft URLRequest.contentType." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Überprüfen Sie die möglichen Ausnahmen, die vom XMLDocument-Konstruktor ausgegeben werden könnten, oder verwenden Sie stattdessen die Methode XMLDocument.parseXML. Weitere Informationen finden Sie unter XMLDocument." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Button, "Die Button-Klasse wurde in SimpleButton umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Container, "Die Container-Klasse wurde in DisplayObjectContainer umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Image, "Die Image-Klasse wurde in BitmapData umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "Die ImageFilter-Klasse wurde in BitmapFilter umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "Die ImageSprite-Klasse wurde in Bitmap umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "Die ImageLoaderInfo-Klasse wurde in BitmapLoaderInfo umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "Die ImeEvent-Klasse wurde in IMEEvent umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Key, "Die Key-Klasse wurde in Keyboard umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "Die LineMetrics-Klasse wurde in TextLineMetrics umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Weitere Informationen hierzu finden Sie in der Klasse URLVariables und den Eigenschaften URLRequest.urlVariables, URLRequest.postData und URLLoader.dataFormat." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "Die MenuEvent-Klasse wurde in ContextMenuEvent umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "Die SystemCapabilities-Klasse wurde in Capabilities umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Verwenden Sie stattdessen die Eigenschaft TextField.getLineMetrics." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Button, "Die Button-Klasse wurde in SimpleButton umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Container, "Die Container-Klasse wurde in DisplayObjectContainer umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Image, "Die Image-Klasse wurde in BitmapData umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "Die ImageFilter-Klasse wurde in BitmapFilter umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "Die ImageSprite-Klasse wurde in Bitmap umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "Die ImageLoaderInfo-Klasse wurde in BitmapLoaderInfo umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "Die ImeEvent-Klasse wurde in IMEEvent umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Key, "Die Key-Klasse wurde in Keyboard umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "Die LineMetrics-Klasse wurde in TextLineMetrics umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Weitere Informationen hierzu finden Sie in der Klasse URLVariables und den Eigenschaften URLRequest.urlVariables, URLRequest.postData und URLLoader.dataFormat." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "Die MenuEvent-Klasse wurde in ContextMenuEvent umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "Die SystemCapabilities-Klasse wurde in Capabilities umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Verwenden Sie stattdessen die Eigenschaft TextField.getLineMetrics." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Weitere Informationen finden Sie in der Hilfe zur Proxy-Klasse, die ähnliche Funktionen ermöglicht." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Verwenden Sie stattdessen die Methode XMLUI.getProperty." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Verwenden Sie stattdessen die Methode XMLUI.setProperty." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.accessibilityProperties." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.scale9Grid." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Verwenden Sie stattdessen die Methode Graphics.drawOval." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Verwenden Sie stattdessen die Eigenschaft NetConnection.connected." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Verwenden Sie stattdessen die Eigenschaft Socket.connected." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Verwenden Sie stattdessen die Eigenschaft URLStream.connected." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Verwenden Sie stattdessen die Eigenschaft SyncEvent.changeList." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Verwenden Sie stattdessen die Eigenschaft TextField.scrollV." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Verwenden Sie stattdessen die Eigenschaft TextField.bottomScrollV." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Verwenden Sie stattdessen die Konstante BitmapDataChannel.RED." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Verwenden Sie stattdessen die Konstante BitmapDataChannel.GREEN." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Verwenden Sie stattdessen die Konstante BitmapDataChannel.BLUE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Verwenden Sie stattdessen die Konstante BitmapDataChannel.ALPHA." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Verwenden Sie stattdessen den is-Operator." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Verwenden Sie stattdessen die Methode flash.system.Security.showSettings." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Verwenden Sie stattdessen die Eigenschaft System.useCodePage." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Verwenden Sie stattdessen die Eigenschaft flash.events.EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Verwenden Sie stattdessen die statische Eigenschaft flash.media.SoundMixer.bufferTime." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Erstellen Sie stattdessen eine neue Instanz der bitmap library symbol-Klasse, z. B. new myBitmapName()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Weitere Informationen finden Sie unter Loader.load()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "Die MovieClipLoader-Klasse wurde durch die flash.display.Loader-Klasse ersetzt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "Die MovieClipLoader-Klasse wurde durch die flash.display.Loader-Klasse ersetzt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.ALPHANUMERIC_FULL." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.ALPHANUMERIC_HALF." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.CHINESE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.JAPANESE_HIRAGANA." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.KOREAN." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.UNKNOWN." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onCancel, "Die Ereignisprozedur onCancel wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren (cancel, onCancel)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Es gibt keinen direkten Ersatz. Mit der Methode willTrigger() können Sie feststellen, ob Listener registriert wurden." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onIMEComposition, "Die Ereignisprozedur onIMEComposition wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren (imeComposition, handlerName)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Weitere Informationen finden Sie in den Klassen LoaderInfo.url und Loader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Verwenden Sie stattdessen die Methode getFullYear()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Verwenden Sie stattdessen die Methode setFullYear()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Verwenden Sie stattdessen die Methode getUTCFullYear()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Verwenden Sie stattdessen die Eigenschaft rate." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Selection, "Die Selection-Klasse wurde entfernt. Weitere Informationen finden Sie in der Methode addEventListener der Klasse, aus der Sie Auswahlinformationen abrufen möchten." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Selection, "Die Selection-Klasse wurde entfernt. Weitere Informationen finden Sie in der Methode addEventListener der Klasse, aus der Sie Auswahlinformationen abrufen möchten." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Verwenden Sie stattdessen die Eigenschaft gain." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Farbwerte können direkt mit dem Konstruktor oder den Eigenschaften der ColorTransform-Klasse zugewiesen werden." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Farbwerte können direkt mit dem Konstruktor oder den Eigenschaften der ColorTransform-Klasse zugewiesen werden." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Informationen zu fokusbezogenen Eigenschaften der flash.display.InteractiveObject-Klasse finden Sie in der Hilfe." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Siehe Hilfe zur Methode flash.display.Graphics.beginBitmapFill." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Siehe Hilfe zur Methode flash.display.DisplayObject.hitTestObject()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Siehe Hilfe zur Methode addChild()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Verwenden Sie stattdessen die Methode load()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Verwenden Sie flash.media.SoundChannel.leftPeak und flash.media.SoundChannel.rightPeak, um die Lautstärke des Soundkanals zu überwachen und zu steuern." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Verwenden Sie stattdessen die Eigenschaft soundTransform." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Verwenden Sie stattdessen die Eigenschaft SoundTransform.pan." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Verwenden Sie stattdessen die Eigenschaft SoundTransform.pan." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Verwenden Sie stattdessen die Eigenschaft bytesLoaded." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Verwenden Sie stattdessen die Eigenschaft bytesTotal." );
        warningConstantsDE[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Ineffiziente Verwendung von += in einem TextField." );
        warningConstantsDE[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Das Anhängen von Text an ein TextField mit += ist wesentlich langsamer als das Verwenden der Methode TextField.appendText()." );
        warningConstantsDE[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Möglicherweise fehlen Klammern." );
        warningConstantsDE[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Anstelle des erwarteten Werts %s wird der Funktionswert verwendet. Möglicherweise fehlen hinter dieser Funktionsreferenz die Klammern ()." );
        warningConstantsDE[index++] = new AscWarning(kWarning_InstanceOfChanges, "Verwenden Sie den instanceof-Operator." );
        warningConstantsDE[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "Der instanceof-Operator ist veraltet; verwenden Sie stattdessen den is-Operator." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "Die Ereignisprozedur allowDomain() ist jetzt kein Ereignisrückruf mehr, sondern eine Standardmethode. Weitere Informationen finden Sie in der neuen Methode LocalConnection.allowDomain." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "Die Ereignisprozedur allowInsecureDomain() ist jetzt kein Ereignisrückruf mehr, sondern eine Standardmethode. Weitere Informationen finden Sie in der neuen Methode LocalConnection.allowInsecureDomain." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_call, "Die globale Methode call() wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Color, "Die Color-Klasse wurde entfernt. Verwenden Sie die flash.geom.ColorTransform-Klasse für ähnliche Funktionen." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Color, "Die Color-Klasse wurde entfernt. Verwenden Sie die flash.geom.ColorTransform-Klasse für ähnliche Funktionen." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "In SWF-Dateien von ActionScript 3.0 werden immer Regeln für die exakte Übereinstimmung von Domänen verwendet." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_capabilities, "Die capabilities-Klasse wurde in Capabilities umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_capabilities, "Die capabilities-Klasse wurde in Capabilities umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onComplete, "Die Ereignisprozedur onComplete wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('complete', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onHTTPError, "Die Ereignisprozedur onHTTPError wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('httpError', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onIOError, "Die Ereignisprozedur onIOError wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('ioError', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onProgress, "Die Ereignisprozedur onProgress wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('progress', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onSecurityError, "Die Ereignisprozedur onSecurityError wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('securityError', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onOpen, "Die Ereignisprozedur onOpen wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('open', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Mögliche Verwendung der XML-Klasse von ActionScript 2.0." );
        warningConstantsDE[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Migrationsfehler: Die ActionScript 2.0-Klasse wurde in XMLDocument umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadDateCast, "Ungültiger Date-Umwandlungsvorgang." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) verhält sich genauso wie neues Date().toString(). Um einen Wert in den Typ Date umzuwandeln, verwenden Sie 'x as Date' anstelle von Date(x)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ImportHidesClass, "Durch das Importieren eines Pakets mit demselben Namen wie die aktuelle Klasse wird die Klassen-ID in diesem Gültigkeitsbereich ausgeblendet." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Durch das Importieren eines Pakets mit demselben Namen wie die aktuelle Klasse wird die Klassen-ID in diesem Gültigkeitsbereich ausgeblendet." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Es sind mehrere Argumente mit demselben Namen vorhanden." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Es sind mehrere Argumente mit dem Namen '%s' vorhanden. Verweise auf dieses Argument beziehen sich immer auf das letzte Argument." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Verwenden Sie stattdessen die Methode Rectangle.containsRect." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_eval, "Diese Funktion wurde entfernt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Diese Funktion wurde durch die Eigenschaft flash.system.Capabilities.version ersetzt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Diese Funktion wurde durch die Eigenschaft flash.display.MovieClip.framesLoaded ersetzt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp__global, "Die Eigenschaft _global wurde entfernt. Verwenden Sie für ähnliche Funktionen ein statisches Mitglied einer Klasse." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadBoolAssignment, "Anstelle des erwarteten Booleschen Werts wird ein nicht Boolescher Wert verwendet." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "Anstelle des erwarteten Booleschen Werts wird %s verwendet. Der Ausdruck wird vor dem Vergleich in einen Booleschen Wert umgewandelt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadES3TypeProp, "Unbekannte Eigenschaft." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s ist keine erkannte Eigenschaft der dynamischen Klasse %s." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Unbekannte Methode." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s ist keine erkannte Methode der dynamischen Klasse %s." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Doppelte Variablendefinition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Doppelte Variablendefinition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Der Definitionsname ist identisch mit dem Namen eines importierten Pakets. Unzureichend definierte Verweise auf diesen Namen beziehen sich auf das Paket, nicht auf die Definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Der Definitionsname ist identisch mit dem Namen eines importierten Pakets. Unzureichend definierte Verweise auf diesen Namen beziehen sich auf das Paket, nicht auf die Definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Möglicherweise wird versucht, eine feste Eigenschaft zu löschen." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "Die deklarierte Eigenschaft %s darf nicht gelöscht werden. Um zugewiesenen Speicherplatz verfügbar zu machen, setzen Sie ihren Wert auf null." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Deprecated, "Verwendung einer veralteten Definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Deprecated_specific, "„%s“ wird nicht mehr verwendet." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedMessage, "Verwendung einer veralteten Definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Verwendung einer veralteten Definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "„%s“ wird nicht mehr verwendet.  Verwenden Sie „%s“." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedSince, "Verwendung einer veralteten Definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "„%s“ wird seit %s nicht mehr verwendet. Verwenden Sie „%s“." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Verwendung einer veralteten Definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "„%s“ wird seit %s nicht mehr verwendet." );
   }

   static final AscWarning[] warningConstantsES= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsES() 
   {
      int index=0;
        warningConstantsES[index++] = new AscWarning(kWarning_NoTypeDecl, "Falta la declaración de tipo." );
        warningConstantsES[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' no tiene ninguna declaración de tipo." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Comparación no lógica con undefined.  Sólo las variables sin ningún tipo (o las variables de tipo *) pueden ser undefined." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Las variables de tipo %s no pueden ser undefined. Se forzará la conversión del valor undefined a %s antes de la comparación." );
        warningConstantsES[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "La función que se utiliza en la nueva expresión devuelve un valor.  El resultado será el devuelto por la función y no una nueva instancia de dicha función." );
        warningConstantsES[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Problema de migración: el resultado del nuevo %s será el valor devuelto por %s y no una nueva instancia de dicha función." );
        warningConstantsES[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Si Boolean() no tiene argumentos, devuelve false en ActionScript 3.0.  Boolean() devolvía undefined en ActionScript 2.0." );
        warningConstantsES[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Se ha utilizado Boolean() sin argumentos." );
        warningConstantsES[index++] = new AscWarning(kWarning_NumberFromStringChanges, "En ActionScript 3.0, el espacio en blanco se ignora y '' devuelve 0. Number() devuelve NaN en ActionScript 2.0 si el parámetro es '' o si contiene un espacio en blanco." );
        warningConstantsES[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Problema de migración: si se llama a la función Number('') con un argumento de cadena vacía, devuelve 0 en ActionScript 3.0 y NaN en ActionScript 2.0." );
        warningConstantsES[index++] = new AscWarning(kWarning_ArrayToStringChanges, "El formato de Array.toString() ha cambiado." );
        warningConstantsES[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Problema de migración: ha cambiado la gestión de los elementos undefined y null por parte de Array.toString()." );
        warningConstantsES[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Propiedad de ActionScript 2.0 no admitida." );
        warningConstantsES[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Problema de migración: la propiedad %s ya no se admite.  %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Función de ActionScript 2.0 no admitida." );
        warningConstantsES[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Problema de migración: el método %s ya no se admite.  %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Problema de migración: __resolve ya no se admite.  Utilice la nueva clase Proxy para una funcionalidad similar." );
        warningConstantsES[index++] = new AscWarning(kWarning_LevelNotSupported, "_level ya no se admite. Para más información, consulte el paquete flash.display." );
        warningConstantsES[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Problema de migración: _level ya no se admite. Para más información, consulte el paquete flash.display." );
        warningConstantsES[index++] = new AscWarning(kWarning_ClassIsSealed, "La clase está sellada.  No pueden agregarse miembros dinámicamente." );
        warningConstantsES[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Problema de migración: %s no es una clase dinámica.  No se pueden agregar miembros dinámicamente a las instancias." );
        warningConstantsES[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Cambio del ámbito para la palabra clave this.  Los métodos de clase extraídos de la instancia de una clase siempre resolverán this de nuevo en dicha instancia.  En ActionScript 2.0 this se busca dinámicamente basándose en el lugar desde donde se invoca el método." );
        warningConstantsES[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Problema de migración: el comportamiento del método %s será distinto en ActionScript 3.0 debido al cambio del ámbito para la palabra clave this. Consulte la entrada de la advertencia 1083 para obtener más información." );
        warningConstantsES[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Falta la declaración del espacio de nombres (es decir, no se ha definido la variable para ser public, private, etc.)." );
        warningConstantsES[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s tendrá el ámbito del espacio de nombres predeterminado: %s interno.  No será visible fuera de este paquete." );
        warningConstantsES[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 se repite en las propiedades del objeto de una sentencia \"for x in target\" en orden aleatorio." );
        warningConstantsES[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Problema de migración: ActionScript 3.0 se repite en las propiedades del objeto de una sentencia \"for x in target\" en orden aleatorio." );
        warningConstantsES[index++] = new AscWarning(kWarning_InternalError, "Error interno en el compilador." );
        warningConstantsES[index++] = new AscWarning(kWarning_InternalError_specific, "Código de error: %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler no se agregó como detector." );
        warningConstantsES[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Problema de migración: %s" );
        warningConstantsES[index++] = new AscWarning(kWarning_NegativeUintLiteral, "El valor negativo se convertirá en un valor positivo elevado al asignarlo a un tipo de datos uint." );
        warningConstantsES[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Valor negativo utilizado cuando se espera un valor uint (no negativo)." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadNullComparision, "Comparación no lógica con null." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Comparación no lógica con null.  Las variables de tipo %s no pueden ser null." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadNaNComparision, "Comparación no lógica con NaN. Toda operación de comparación en la que intervenga NaN dará como resultado false porque NaN != NaN." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Comparación no lógica con NaN.  Esta sentencia siempre da como resultado false." );
        warningConstantsES[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Asignación con lógica condicional." );
        warningConstantsES[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Asignación con lógica condicional.  ¿Quiso utilizar == y no =?" );
        warningConstantsES[index++] = new AscWarning(kWarning_BadNullAssignment, "Asignación null imposible." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "Se utilizó null donde se esperaba un valor %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_NoConstructor, "Falta el constructor." );
        warningConstantsES[index++] = new AscWarning(kWarning_NoConstructor_specific, "No se especificó ninguna función constructora para la clase %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Instrucción vacía." );
        warningConstantsES[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Se ha encontrado instrucción vacía donde se esperaba bloque de código. ¿Ha escrito ';' sin querer?" );
        warningConstantsES[index++] = new AscWarning(kWarning_ConstNotInitialized, "Constante no inicializada." );
        warningConstantsES[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "La constante no se inicializó." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadArrayCast, "Operación de conversión Array posiblemente no válida." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadArrayCast_specific, "El comportamiento de Array(x) es el mismo que el de la nueva Array(x).  Para convertir un valor en tipo Array, utilice la expresión \"x as Array\"en vez de Array(x)." );
        warningConstantsES[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "No se llamó a la sentencia super() en el constructor." );
        warningConstantsES[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "Se ejecutará la sentencia super() antes de acceder a este constructor.  Agregue una llamada a super() en el constructor si quiere controlar de forma explícita cuándo se ejecuta." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_version, "Utilice Capabilities.version en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Para más información, consulte InteractiveObject.focusRect." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Highquality, "Para más información, consulte Stage.quality." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Para más información, consulte Stage.quality." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Para más información, consulte Stage.quality." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Quality, "Para más información, consulte Stage.quality." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Utilice la propiedad estática flash.media.SoundMixer.bufferTime en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Esta funcionalidad ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Para más información, consulte LoaderInfo.url." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Esta funcionalidad ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_NewLine, "Utilice '\n' para una nueva línea." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Para más información, consulte textField.maxScroll." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Level, "El concepto de niveles no existe en ActionScript 3.0; éste proporciona acceso directo a la lista de visualización. Consulte el paquete flash.display para obtener más información." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Parent, "Utilice la propiedad parent en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Root, "Se ha quitado esta propiedad. El equivalente más próximo es Stage, que funciona como raíz de la lista de visualización de ActionScript 3.0." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "En su lugar, intente declarar caller como argumento de la función." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Esta funcionalidad ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Utilice la propiedad parent en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Esta funcionalidad ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Para más información, consulte Sprite.hitArea." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Scroll, "Para más información, consulte las propiedades scrollH y scrollV de la clase flash.text.TextField." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Utilice objetos MovieClip directamente como argumentos en lugar de rutas." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Para más información, consulte Video.videoHeight." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Para más información, consulte Video.videoWidth." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp__Proto__, "Para más información, consulte __proto__ (obsoleta)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Stage, "Para más información, consulte DisplayObject.stage." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Utilice el método registerClass() del paquete flash.net en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_random, "Utilice Math.random() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_chr, "Utilice String.fromCharCode() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Utilice String.fromCharCode() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ord, "Utilice String.charCodeAt() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_mbord, "Utilice String.charCodeAt() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_substring, "Utilice el método String.substr en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Utilice el método String.substr en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_length, "En su lugar, utilice la propiedad length del argumento." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_mblength, "En su lugar, utilice la propiedad length del argumento." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Para más información, consulte los cambios de ASnative." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Establezca las propiedades directamente en la instancia utilizando la notación de puntos (.) en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Obtenga acceso a las propiedades directamente utilizando la notación  de puntos (.) en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Establezca las propiedades directamente en la instancia utilizando la notación de puntos (.) en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Para más información, consulte TextEvent.LINK y addEventListener()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Este método se ha movido al paquete flash.utils." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Sustituido por la nueva función constructora de la clase MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Se ha movido al paquete flash.system. Consulte también la clase flash.external.ExternalInterface para la comunicación con Javascript/ActionScript." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_getURL, "Para obtener una funcionalidad equivalente, consulte flash.net.URLLoader.  El paquete flash.net también contiene funciones de nivel de paquetes navigateToURL() y sendToURL()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Para más información, consulte MovieClip.gotoAndPlay()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Para más información, consulte MovieClip.gotoAndStop()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_play, "Para más información, consulte MovieClip.play()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_print, "Para más información, consulte PrintJob.start()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Para más información, consulte PrintJob." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Para más información, consulte PrintJob." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_printNum, "Para más información, consulte PrintJob." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Utilice Container.removeChild(childName). Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Se ha movido al paquete flash.utils.  Considere utilizar la clase Timer en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Para más información, consulte MovieClip.nextFrame()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Para más información, consulte MovieClip.startDrag()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_stop, "Para más información, consulte MovieClip.stop()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Para más información, consulte Sound.stopAllSounds()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Para más información, consulte MovieClip.stopDrag()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Utilice el operador de punto (.) o la sentencia with en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Para más información, consulte DisplayObject.stage y Stage.quality." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Utilice DisplayObjectContainer.removeChild(childName) en su lugar. Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Utilice DisplayObjectContainer.removeChild(childName) en su lugar. Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Esta función ya no es una función global, pero sigue estando disponible como método de las clases TimerEvent, MouseEvent y KeyboardEvent." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Para más información, consulte Video.attachNetStream, Video.attachCamera." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Utilice la clase URLLoader para llevar a cabo la carga y transferir el resultado a StyleSheet.parseCSS()" );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "En ActionScript 3.0 se registran todas las clases de forma predeterminada.  Si utiliza codificación AMF, consulte flash.utils.registerClassAlias() para obtener más información." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Utilice las propiedades de descriptor de acceso (funciones get/set) o la clase flash.utils.Proxy para una funcionalidad similar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Utilice las propiedades de descriptor de acceso (funciones get/set) o la clase flash.utils.Proxy para una funcionalidad similar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Para más información, consulte MovieClip.loadMovie()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Para más información, consulte MovieClip.loadMovieNum()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Para más información, consulte Loader.load()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Para más información, consulte Loader.load()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Utilice la clase SWF para crear sonidos de la biblioteca." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onStatus, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onStatus en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('status', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onID3, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onID3 en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('id3', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onLoad, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onLoad en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('load', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onSoundComplete, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onSoundComplete en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('soundComplete', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onSetFocus, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onSetFocus en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('focusIn', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onResize, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onResize en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('resize', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onChanged, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onChanged en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('change', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onKillFocus, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onKillFocus en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('focusOut', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onScroller, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onScroller en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('scroll', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onMouseDown, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onMouseDown en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseDown', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onMouseUp, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onMouseUp en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseUp', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onMouseMove, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onMouseMove en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseMove', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onMouseWheel, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onMouseWheel en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseWheel', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onKeyDown, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onKeyDown en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('keyDown', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onKeyUp, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onKeyUp en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('keyUp', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onData, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onData en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('data', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onHTTPStatus en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('httpStatus', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onDragOut, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onDragOut en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseOut', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onDragOver, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onDragOver en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseOver', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onPress, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onPress en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseDown', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onRelease, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onRelease en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('click', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onReleaseOutside en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseUp', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onRollOut, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onRollOut en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseOut', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onRollOver, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onRollOver en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseOver', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onActivity, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onActivity en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('activity', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onSelect, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onSelect en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('menuSelect', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onEnterFrame, "En ActionScript 3.0, Flash Player no activa automáticamente onEnterFrame en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('enterFrame', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onUnload, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onUnload en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('unload', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onLoadComplete, "En ActionScript 3.0, Flash Player no activa automáticamente onLoadComplete en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('load', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onLoadError, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onLoadError en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('error', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onLoadInit, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onLoadInit en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('init', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onLoadProgress, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onLoadProgress en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('progress', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onLoadStart, "En ActionScript 3.0, Flash Player no activa automáticamente onLoadStart en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('start', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onClose, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onClose en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('close', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onConnect, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onConnect.  Primero debe registrar este controlador para el evento mediante addEventListener ('connect', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onXML, "En ActionScript 3.0, Flash Player no activa automáticamente onXML.  Primero debe registrar este controlador para el evento mediante addEventListener ('xml', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Utilice la propiedad hasChildNodes en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "La clase XMLEvent está obsoleta y el evento xml ya no se distribuye. Sólo se distribuye el evento de datos durante la carga del archivo." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "La clase XMLDoc ahora se llama XMLDocument." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Utilice la propiedad Accessibility.active en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Utilice la constante ActivityEvent.ACTIVITY en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Utilice DisplayObjectContainer.parent.getChildIndex en su lugar. Consulte la ayuda de la clase DisplayObjectContainer, que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Utilice DisplayObjectContainer.parent.setChildIndex en su lugar. Consulte la ayuda de la clase DisplayObjectContainer, que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Utilice DisplayObjectContainer.getChildAt en su lugar. Consulte la ayuda de la clase DisplayObjectContainer, que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Utilice DisplayObjectContainer.numChildren en su lugar. DisplayObjectContainer.addChild siempre agrega el nuevo elemento secundario para crear índices en DisplayObjectContainer.numChildren." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Utilice la propiedad ByteArray.bytesAvailable en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Utilice la propiedad ByteArray.position en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Utilice la propiedad ByteArray.position en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Utilice el método Camera.getCamera() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Utilice la propiedad Camera.currentFPS en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Utilice la propiedad Camera.keyFrameInterval en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Utilice la propiedad Camera.loopback en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Utilice la propiedad ColorTransform.color en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Utilice la propiedad ColorTransform.color en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Utilice la propiedad Container.textSnapshot en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Utilice el método ContextMenu.clone() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Utilice la propiedad ContextMenu.forwardAndBack en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Utilice el método ContextMenuItem.clone() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Utilice la propiedad CustomActions.actionsList en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Utilice la constante DataEvent.DATA en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Utilice la propiedad DisplayObject.scaleX en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Utilice la propiedad DisplayObject.scaleX en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Utilice la propiedad DisplayObject.scaleY en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Utilice la propiedad DisplayObject.scaleY en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Utilice la propiedad DisplayObject.mouseX en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Utilice la propiedad DisplayObject.mouseX en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Utilice la propiedad DisplayObject.mouseY en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Utilice la propiedad DisplayObject.mouseY en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Esta función ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Esta función ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Utilice la propiedad DisplayObject.name en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Utilice la propiedad DisplayObject.parent en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Utilice la propiedad DisplayObject.mask en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Utilice la propiedad DisplayObject.visible en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Utilice la propiedad DisplayObject.x en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Utilice la propiedad DisplayObject.y en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Utilice la propiedad DisplayObject.rotation en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Utilice la propiedad DisplayObject.alpha en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Utilice la propiedad DisplayObject.width en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Utilice la propiedad DisplayObject.height en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Utilice la propiedad ExternalInterface.available en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Utilice la constante ErrorEvent.ERROR en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Utilice la propiedad Event.isDefaultPrevented en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Utilice la constante Event.ACTIVATE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Utilice la constante Event.ADDED en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Utilice la constante Event.CANCEL en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Utilice la constante Event.CHANGE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Utilice la constante Event.CLOSE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Utilice la constante Event.COMPLETE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Utilice la constante Event.CONNECT en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Utilice la constante Event.DEACTIVATE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Utilice la constante Event.ENTER_FRAME en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Utilice la constante Event.ID3 en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Utilice la constante Event.INIT en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Utilice la constante Event.MOUSE_LEAVE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Utilice la constante Event.OPEN en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Utilice la constante Event.REMOVED en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Utilice la constante Event.RENDER en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Utilice la constante Event.RESIZE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Utilice la constante Event.SCROLL en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Utilice la constante Event.SELECT en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Utilice la constante Event.SOUND_COMPLETE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Utilice la constante Event.TAB_CHILDREN_CHANGE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Utilice la constante Event.TAB_ENABLED_CHANGE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Utilice la constante Event.TAB_INDEX_CHANGE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Utilice la constante Event.UNLOAD en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Utilice la constante FocusEvent.FOCUS_IN en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Utilice la constante FocusEvent.FOCUS_OUT en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Utilice la constante FocusEvent.KEY_FOCUS_CHANGE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Utilice la constante FocusEvent.MOUSE_FOCUS_CHANGE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Utilice el método Graphics.beginBitmapFill() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Utilice la propiedad BitmapFilter.quality en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Utilice KeyboardEvent.charCode en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Utilice KeyboardEvent.keyCode en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Para más información, consulte la clase KeyboardEvent." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Para más información, consulte KeyboardEvent.ctrlKey, KeyboardEvent.altKey y KeyboardEvent.shiftKey." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Utilice la constante PAGE_DOWN en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Utilice la constante PAGE_UP en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Utilice la constante DELETE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Utilice la constante CAPS_LOCK en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Utilice una de las constantes NUMPAD_0 -> NUMPAD_9 en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Utilice la propiedad InteractiveObject.focusRect en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Utilice la propiedad InteractiveObject.contextMenu en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Utilice la propiedad KeyboardEvent.charCode en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Utilice la propiedad KeyboardEvent.keyCode en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Utilice la propiedad Loader.contentLoaderInfo en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Esta función ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Esta función ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Utilice la propiedad LoaderInfo.loaderURL en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Utilice la propiedad LocalConnection.domain en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Utilice la propiedad MenuEvent.contextMenuOwner en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Utilice el método Microphone.getMicrophone() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Si el nombre de la subclase MovieClip es A, utilice var mc= new A(); addChild(mc). Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Utilice var mc= new MovieClip(); addChild(mc). Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Utilice var tf= new TextField(); addChild(mc). Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Utilice Container.removeChild(childName). Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Utilice var l = new Loader(); addChild(l); l.load(new URLRequest(\"su url\"));. Para más información, consulte las clases Loader y DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Utilice DisplayObjectContainer.removeChild(childName) en su lugar. Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Utilice DisplayObjectContainer.removeChild(childName) en su lugar. Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Utilice DisplayObjectContainer.parent.getChildIndex en su lugar. Para más información, consulte la clase DisplayObjectContainer que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Utilice DisplayObjectContainer.parent.setChildIndex en su lugar. Para más información, consulte la clase DisplayObjectContainer que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Utilice DisplayObjectContainer.getChildAt en su lugar. Para más información, consulte la clase DisplayObjectContainer que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Utilice DisplayObjectContainer.numChildren en su lugar. DisplayObjectContainer.addChild siempre agrega el nuevo elemento secundario para crear índices en DisplayObjectContainer.numChildren." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Para más información, consulte DisplayObject.addChild." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Para más información, consulte LoaderInfo.bytesLoaded y la clase Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Para más información, consulte LoaderInfo.bytesTotal y la clase Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Para obtener una funcionalidad equivalente, consulte flash.net.URLLoader.  El paquete flash.net también contiene funciones de nivel de paquetes navigateToURL() y sendToURL()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Para más información, consulte LoaderInfo.url y la clase Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Para más información, consulte LoaderInfo.url y la clase Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Utilice la propiedad MovieClip.mask en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Para más información, consulte LoaderInfo.swfVersion y la clase Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Utilice la propiedad MovieClip.currentFrame en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Utilice la propiedad MovieClip.framesLoaded en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Utilice la propiedad MovieClip.totalFrames en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Para más información, consulte displayObjectInstance.root." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Para más información, consulte displayObjectInstance.root." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Utilice la propiedad estática flash.media.SoundMixer.bufferTime en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Utilice la propiedad NetStream.bufferTime en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Utilice la propiedad NetStream.currentFPS en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Utilice la propiedad NetStream.videoCodec en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Utilice la propiedad NetStream.audioCodec en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Utilice la propiedad ProductManager.isInstalled en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Utilice la propiedad ProductManager.installedVersion en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Utilice la propiedad ProductManager.isRunning en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Utilice el método Point.add() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Utilice la propiedad Proxy.deleteDescendants en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Utilice el método heapDump() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Utilice la propiedad ProgressEvent.bytesLoaded en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Utilice la propiedad ProgressEvent.bytesTotal en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Utilice la propiedad Rectangle.isEmpty en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Utilice la propiedad SoundTransform.pan en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Utilice la propiedad Sockect.bytesAvailable en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Utilice la propiedad SharedObject.size en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Utilice la propiedad SharedObject.fps en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Utilice el método Sprite.constructChildren() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Utilice la propiedad Sprite.dropTarget en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Utilice la propiedad Stage.focus en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Utilice la propiedad Stage.focus en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Utilice la propiedad Stage.showDefaultContextMenu en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Utilice la propiedad StyleSheet.styleNames en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Utilice una instancia de URLLoader para cargar los datos de StyleSheet y, a continuación, transfiera los datos de carga al método StyleSheet.parseCSS. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Utilice una instancia de URLLoader para cargar los datos de StyleSheet y, a continuación, transfiera los datos de carga al método StyleSheet.parseCSS. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Utilice una instancia de URLLoader para cargar los datos de StyleSheet y, a continuación, transfiera los datos de carga al método StyleSheet.parseCSS. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Utilice una instancia de URLLoader para cargar los datos de StyleSheet y, a continuación, transfiera los datos de carga al método StyleSheet.parseCSS. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Utilice una instancia de URLLoader para cargar los datos de StyleSheet y, a continuación, transfiera los datos de carga al método StyleSheet.parseCSS. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Utilice la propiedad IME.enabled en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Utilice la propiedad IME.enabled en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Utilice la propiedad IME.instance en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Utilice la propiedad IME.conversionMode en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Utilice la propiedad IME.conversionMode en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Utilice la propiedad System.vmVersion en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Utilice la propiedad SWFLoaderInfo.swfVersion en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Utilice la propiedad SWFLoaderInfo.actionScriptVersion en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Utilice la propiedad TextField.defaultTextFormat en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Utilice la propiedad TextField.defaultTextFormat en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Utilice DisplayObjectContainer.parent.getChildIndex en su lugar. Para más información, consulte la clase DisplayObjectContainer que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Utilice DisplayObjectContainer.parent.setChildIndex en su lugar. Para más información, consulte la clase DisplayObjectContainer que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Utilice DisplayObjectContainer.getChildAt en su lugar. Para más información, consulte la clase DisplayObjectContainer que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Utilice DisplayObjectContainer.numChildren en su lugar. DisplayObjectContainer.addChild siempre agrega el nuevo elemento secundario para crear índices en DisplayObjectContainer.numChildren." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Utilice el método TextField.replaceSelectedText() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Utilice el método TextField.getLineIndexOfChar() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Utilice la propiedad TextField.selectionBeginIndex en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Utilice la propiedad TextField.selectionEndIndex en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Utilice la propiedad TextField.caretIndex en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Utilice el método Font.enumerateFonts() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Utilice la propiedad TextField.maxScrollV en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Utilice la propiedad TextField.scrollH en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Utilice la propiedad TextField.maxScrollH en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Utilice la propiedad TextField.defaultTextFormat en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Cree un campo TextField temporal y utilice TextField.getLineMetrics en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Utilice la propiedad TextSnapshot.charCount en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Utilice el método navigateToURL() del paquete flash.net en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Utilice el método sendToURL() del paquete flash.net en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Utilice la propiedad URLLoader.dataFormat en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Utilice la propiedad URLStream.bytesAvailable en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Esta propiedad ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Utilice la propiedad URLRequest.applicationDomain en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Para agregar encabezados de petición, defina la propiedad URLRequest.requestHeaders como una matriz de objetos URLRequestHeader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Utilice una instancia de URLLoader para cargar el archivo XML y, a continuación, transfiera los datos de carga de URLLoader al constructor de documentos XMLDocument. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Utilice el método sendToURL() del paquete flash.net en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Defina una propiedad postData de objeto URLRequest y utilícela con un objeto URLLoader para cargar el archivo XML.  Transfiera los datos de URLLoader al constructor XMLDocument. Para más información, consulte las clases URLLoader, URLRequest y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Utilice una instancia de URLLoader para cargar el archivo XML y, a continuación, transfiera los datos de carga de URLLoader al constructor de documentos XMLDocument. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Para agregar encabezados de petición, defina la propiedad URLRequest.requestHeaders como una matriz de objetos URLRequestHeader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Para más información, consulte URLLoader.bytesLoaded y la clase URLLoader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Para más información, consulte URLLoader.bytesTotal y la clase URLLoader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Utilice una instancia de URLLoader para cargar el archivo XML y, a continuación, transfiera los datos de carga al método StyleSheet.parseCSS. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Utilice la propiedad URLRequest.contentType en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Busque posibles excepciones emitidas por el constructor XMLDocument o el método XMLDocument.parseXML en su lugar. Para más información, consulte XMLDocument." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Button, "La clase Button ahora se llama SimpleButton." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Container, "La clase Container ahora se llama DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Image, "La clase Image ahora se llama BitmapData." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "La clase ImageFilter ahora se llama BitmapFilter." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "La clase ImageSprite ahora se llama Bitmap." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "La clase ImageLoaderInfo ahora se llama BitmapLoaderInfo." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "La clase ImeEvent ahora se llama IMEEvent." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Key, "La clase Key ahora se llama Keyboard." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "La clase LineMetrics ahora se llama TextLineMetrics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Para más información, consulte la clase URLVariables, las propiedades URLRequest.urlVariables y URLRequest.postData, y la propiedad URLLoader.dataFormat." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "La clase MenuEvent ahora se llama ContextMenuEvent." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "La clase SystemCapabilities ahora se llama Capabilities." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Utilice la propiedad TextField.getLineMetrics en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Button, "La clase Button ahora se llama SimpleButton." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Container, "La clase Container ahora se llama DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Image, "La clase Image ahora se llama BitmapData." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "La clase ImageFilter ahora se llama BitmapFilter." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "La clase ImageSprite ahora se llama Bitmap." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "La clase ImageLoaderInfo ahora se llama BitmapLoaderInfo." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "La clase ImeEvent ahora se llama IMEEvent." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Key, "La clase Key ahora se llama Keyboard." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "La clase LineMetrics ahora se llama TextLineMetrics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Para más información, consulte la clase URLVariables, las propiedades URLRequest.urlVariables y URLRequest.postData, y la propiedad URLLoader.dataFormat." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "La clase MenuEvent ahora se llama ContextMenuEvent." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "La clase SystemCapabilities ahora se llama Capabilities." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Utilice la propiedad TextField.getLineMetrics en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Para más información, consulte la ayuda de la clase Proxy, que ofrece una funcionalidad similar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Utilice el método XMLUI.getProperty en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Utilice el método XMLUI.setProperty en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Utilice la propiedad DisplayObject.accessibilityProperties en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Utilice la propiedad DisplayObject.scale9Grid en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Utilice el método Graphics.drawOval en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Utilice la propiedad NetConnection.connected en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Utilice la propiedad Socket.connected en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Utilice la propiedad URLStream.connected en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Utilice la propiedad SyncEvent.changeList en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Utilice la propiedad TextField.scrollV en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Utilice la propiedad TextField.bottomScrollV en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Utilice la constante BitmapDataChannel.RED en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Utilice la constante BitmapDataChannel.GREEN en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Utilice la constante BitmapDataChannel.BLUE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Utilice la constante BitmapDataChannel.ALPHA en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Utilice el operador is en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Utilice el método flash.system.Security.showSettings en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Utilice la propiedad System.useCodePage en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Utilice la clase flash.events.EventDispatcher en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Utilice la propiedad estática flash.media.SoundMixer.bufferTime en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Cree una nueva instancia de la clase de símbolo de biblioteca bitmap, por ejemplo, new myBitmapName(), en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Para más información, consulte Loader.load()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "La clase MovieClipLoader se ha sustituido por la clase flash.display.Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "La clase MovieClipLoader se ha sustituido por la clase flash.display.Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Utilice la constante flash.system.IMEConversionMode.ALPHANUMERIC_FULL en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Utilice la constante flash.system.IMEConversionMode.ALPHANUMERIC_HALF en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Utilice la constante flash.system.IMEConversionMode.CHINESE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Utilice la constante flash.system.IMEConversionMode.JAPANESE_HIRAGANA en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Utilice la constante flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Utilice la constante flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Utilice la constante flash.system.IMEConversionMode.KOREAN en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Utilice la constante flash.system.IMEConversionMode.UNKNOWN en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onCancel, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onCancel en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener (cancel, onCancel)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "No hay sustitución directa. El método willTrigger() se puede utilizar para indicar si se ha registrado algún detector." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onIMEComposition, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onIMEComposition en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener (imeComposition, handlerName)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Para más información, consulte LoaderInfo.url y la clase Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Utilice el método getFullYear() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Utilice el método setFullYear() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Utilice el método getUTCFullYear() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Utilice la propiedad rate en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Selection, "Se ha quitado la clase Selection. Para más información, consulte el método addEventListener de la clase de la cual desee obtener información de selección." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Selection, "Se ha quitado la clase Selection. Para más información, consulte el método addEventListener de la clase de la cual desee obtener información de selección." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Utilice la propiedad gain en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Los valores de color se pueden asignar directamente mediante el constructor o las propiedades de la clase ColorTransform." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Los valores de color se pueden asignar directamente mediante el constructor o las propiedades de la clase ColorTransform." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Consulte la ayuda de las propiedades de la clase flash.display.InteractiveObject relacionadas con la selección." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Consulte la ayuda del método flash.display.Graphics.beginBitmapFill." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Consulte la ayuda del método flash.display.DisplayObject.hitTestObject()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Consulte la ayuda del método addChild()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Utilice el método load() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Utilice flash.media.SoundChannel.leftPeak y flash.media.SoundChannel.rightPeak para supervisar y controlar la amplitud de un canal de sonido." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Utilice la propiedad soundTransform en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Utilice la propiedad SoundTransform.pan en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Utilice la propiedad SoundTransform.pan en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Utilice la propiedad bytesLoaded en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Utilice la propiedad bytesTotal en su lugar." );
        warningConstantsES[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Se ha utilizado += de forma ineficaz en un campo TextField." );
        warningConstantsES[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Añadir texto a un campo TextField con += es mucho más lento que utilizar el método TextField.appendText()." );
        warningConstantsES[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Posiblemente faltan paréntesis." );
        warningConstantsES[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Se utilizó el valor de la función donde se esperaba el tipo %s.  Posiblemente faltan los paréntesis () detrás de esta referencia de función." );
        warningConstantsES[index++] = new AscWarning(kWarning_InstanceOfChanges, "Se ha utilizado el operador instanceof." );
        warningConstantsES[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "El operador instanceof está desfasado; utilice el operador is en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "El controlador de eventos allowDomain() ahora es un método estándar, no una función callback de evento. Para más información, consulte el nuevo método LocalConnection.allowDomain." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "El controlador de eventos allowInsecureDomain() ahora es un método estándar, no una función callback de evento. Para más información, consulte el nuevo método LocalConnection.allowInsecureDomain." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_call, "El método global call() ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Color, "Se ha quitado la clase Color. Utilice la clase flash.geom.ColorTransform para una funcionalidad equivalente." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Color, "Se ha quitado la clase Color. Utilice la clase flash.geom.ColorTransform para una funcionalidad equivalente." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "Los archivos SWF de ActionScript 3.0 siempre utilizan reglas de coincidencia de dominio exacto." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_capabilities, "La clase capabilities ahora se llama Capabilities." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_capabilities, "La clase capabilities ahora se llama Capabilities." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onComplete, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onComplete en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('complete', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onHTTPError, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onHTTPError en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('httpError', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onIOError, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onIOError en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('ioError', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onProgress, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onProgress en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('progress', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onSecurityError, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onSecurityError en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('securityError', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onOpen, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onOpen en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('open', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Posiblemente se ha utilizado la clase XML de ActionScript 2.0." );
        warningConstantsES[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Problema de migración: la clase XML de ActionScript 2.0 ahora se llama XMLDocument." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadDateCast, "Operación de conversión Date no válida." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadDateCast_specific, "El comportamiento de Date(x) es el mismo que el de la nueva Date().toString(). Para comparar un valor con el tipo Date utilice \"x as Date\" en vez de Date(x)." );
        warningConstantsES[index++] = new AscWarning(kWarning_ImportHidesClass, "Al importar un paquete con el mismo nombre que la clase actual se ocultará el identificador de la clase en este ámbito." );
        warningConstantsES[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Al importar un paquete con el mismo nombre que la clase actual se ocultará el identificador de la clase en este ámbito." );
        warningConstantsES[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Hay varios argumentos con el mismo nombre." );
        warningConstantsES[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Se ha especificado más de un argumento llamado '%s'.  Las referencias a dicho argumento siempre se resolverán en el último." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Utilice el método Rectangle.containsRect en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_eval, "Se ha quitado esta funcionalidad." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Esta funcionalidad se ha sustituido por la propiedad flash.system.Capabilities.version." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Esta funcionalidad se ha sustituido por la propiedad flash.display.MovieClip.framesLoaded." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp__global, "Se ha quitado la propiedad _global.  Para una funcionalidad equivalente, utilice un miembro estático de una clase." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadBoolAssignment, "Se utilizó un valor no booleano donde se esperaba uno booleano." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "Se utilizó %s donde se esperaba un valor booleano.  Se forzará la conversión de la expresión a valor booleano." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadES3TypeProp, "Propiedad desconocida." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s no es una propiedad reconocida de la clase dinámica %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Método desconocido." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s no es un método reconocido de la clase dinámica %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Definición de variable duplicada." );
        warningConstantsES[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Definición de variable duplicada." );
        warningConstantsES[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "El nombre de la definición coincide con el nombre de un paquete importado.  Las referencias no cualificadas a dicho nombre se resolverán en el paquete y no en la definición." );
        warningConstantsES[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "El nombre de la definición coincide con el nombre de un paquete importado.  Las referencias no cualificadas a dicho nombre se resolverán en el paquete y no en la definición." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Posiblemente se intentó eliminar una propiedad fija." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "La propiedad %s declarada no se puede eliminar. Para liberar memoria asociada, defina su valor en null." );
        warningConstantsES[index++] = new AscWarning(kWarning_Deprecated, "Uso de definición desfasada." );
        warningConstantsES[index++] = new AscWarning(kWarning_Deprecated_specific, "%s' está en desuso." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedMessage, "Uso de definición desfasada." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Uso de definición desfasada." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "%s' está en desuso.  Utilice '%s'." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedSince, "Uso de definición desfasada." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "%s' está en desuso desde %s.  Utilice '%s'." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Uso de definición desfasada." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "%s' está en desuso desde %s." );
   }

   static final AscWarning[] warningConstantsFI= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsFI() 
   {
      int index=0;
        warningConstantsFI[index++] = new AscWarning(kWarning_NoTypeDecl, "Tyyppimääritys puuttuu." );
        warningConstantsFI[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "Kohteella %s '%s' ei ole tyyppimääritystä." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Epälooginen vertaus määrittämättömään.  Vain tyypittömät muuttujat (tai tyyppiä * olevat muuttujat) voivat olla määrittämättömiä." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Tyyppiä %s olevat muuttujat eivät voi olla määrittämättömiä. Määrittämättömän arvon tyypiksi pakotetaan %s ennen vertailua." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "Uudessa ilmauksessa käytetty funktio palauttaa arvon.  Tuloksena saadaan funktion palauttama arvo, ei uutta kyseisen funktion esiintymää." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Siirto-ongelma: Uuden kohteen %s tuloksena saadaan kohteen %s palauttama arvo, ei uutta kyseisen funktion esiintymää." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() ilman argumentteja palauttaa arvon false ActionScript 3.0:ssa.  Boolean() palautti määrittämättömän arvon ActionScript 2.0:ssa." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Arvon Boolean() käyttö ilman argumentteja." );
        warningConstantsFI[index++] = new AscWarning(kWarning_NumberFromStringChanges, "ActionScript 3.0:ssa välilyönnit ohitetaan ja '' palauttaa arvon 0. Number() palauttaa NaN-arvon ActionScript 2.0:ssa, jos parametri on '' tai jos se sisältää välilyönnin." );
        warningConstantsFI[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Siirto-ongelma: Kun funktio Number('') kutsutaan tyhjän merkkijonoargumentin kanssa, se palauttaa 0-arvon ActionScript 3.0:ssa ja NaN-arvon ActionScript 2.0:ssa." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString()-muoto on muuttunut." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Siirto-ongelma: Array.toString()-käsittelyn arvo null sekä määrittämättömät elementit ovat muuttuneet." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Tukematon ActionScript 2.0 -ominaisuus." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Siirto-ongelma: Ominaisuutta %s ei enää tueta.  %s." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Tukematon ActionScript 2.0 -funktio." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Siirto-ongelma: Metodia %s ei enää tueta.  %s." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve ei enää ole tuettu." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Siirto-ongelma: __resolve ei enää ole tuettu.  Käytä uutta Proxy-luokkaa vastaavia toimintoja varten." );
        warningConstantsFI[index++] = new AscWarning(kWarning_LevelNotSupported, "_level ei enää ole tuettu. Lisätietoja on flash.display-paketissa." );
        warningConstantsFI[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Siirto-ongelma: _level ei enää ole tuettu. Lisätietoja on flash.display-paketissa." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ClassIsSealed, "Luokka on suljettu.  Siihen ei voi lisätä jäseniä dynaamisesti." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Siirto-ongelma: %s ei ole dynaaminen luokka.  Esiintymiin ei voida lisätä jäseniä dynaamisesti." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Tämän avainsanan näkymä on muuttunut.  Luokan esiintymästä puretut luokkametodit palauttavat tästä aina kyseisen esiintymän.  ActionScript 2.0:ssa tämä haetaan dynaamisesti metodin kutsun lähteen perusteella." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Siirto-ongelma: metodi %s toimii eri tavoin ActionScript 3.0:ssa tämän avainsanan muuttuneen näkymän johdosta. Katso lisätietoja varoituksesta 1083." );
        warningConstantsFI[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Namespace-määritys puuttuu (esimerkiksi muuttujaa ei ole määritetty muotoon public, private jne.)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "Kohteen %s näkymäksi tulee oletusnimitila: sisäinen %s.  Se ei ole näkyvissä tämän paketin ulkopuolella." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 käy läpi objektin ominaisuudet \"for x in target\" -lausekkeessa satunnaisjärjestyksessä." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Siirto-ongelma: ActionScript 3.0 käy läpi objektin ominaisuudet \"for x in target\" -lausekkeessa satunnaisjärjestyksessä." );
        warningConstantsFI[index++] = new AscWarning(kWarning_InternalError, "Kokoajan sisäinen virhe." );
        warningConstantsFI[index++] = new AscWarning(kWarning_InternalError_specific, "Virhekoodi: %s." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler-kohdetta ei ole lisätty kuuntelijaksi." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Siirto-ongelma: %s" );
        warningConstantsFI[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Negatiivinen arvo muuttuu suureksi positiiviseksi arvoksi uint-datatyypille määritettäessä." );
        warningConstantsFI[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Käytettiin negatiivista arvoa, kun odotettiin (ei-negatiivista) uint-arvoa." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadNullComparision, "Epälooginen vertaus null-kohteeseen." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Epälooginen vertaus null-kohteeseen.  Tyyppiä %s olevat muuttujat eivät voi olla null-arvoisia." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadNaNComparision, "Epälooginen vertaus NaN-kohteeseen. NaN-kohdetta koskevat vertailuoperaatiot tuottavat arvion false, koska NaN != NaN." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Epälooginen vertaus NaN-kohteeseen.  Tämä lauseke tuottaa aina arvion false." );
        warningConstantsFI[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Ehdon sisältämä määritys." );
        warningConstantsFI[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Ehdon sisältämä määritys.  Tarkoititko kohdetta == kohteen = sijaan?" );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadNullAssignment, "Mahdoton null-määritys." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "Käytettiin null-arvoa, kun odotettiin arvoa %s." );
        warningConstantsFI[index++] = new AscWarning(kWarning_NoConstructor, "Konstruktori puuttuu." );
        warningConstantsFI[index++] = new AscWarning(kWarning_NoConstructor_specific, "Konstruktorifunktiota ei määritetty luokalle %s." );
        warningConstantsFI[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Tyhjä lause" );
        warningConstantsFI[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Tyhjä lause löydettiin kohdasta, jossa odotettiin koodilohkoa. Kirjoititko vahingossa ';'?" );
        warningConstantsFI[index++] = new AscWarning(kWarning_ConstNotInitialized, "Vakiota ei alustettu." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "Vakiota ei alustettu." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadArrayCast, "Mahdollisesti virheellinen Array-värivääristymäoperaatio." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) toimii samoin kuin uusi Array(x).  Arvon määrittämisessä Array-tyypille oikea Array-arvon ilmaus on x, ei Array(x)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "Super()-lauseketta ei kutsuttu konstruktorissa." );
        warningConstantsFI[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "Super()-lauseke suoritetaan ennen tähän konstruktoriin siirtymistä.  Lisää super()-kutsu konstruktorissa, jos haluat hallita, koska se suoritetaan." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_version, "Käytä sen sijaan kohdetta Capabilities.version." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Lisätietoja on kohteessa InteractiveObject.focusRect." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Highquality, "Lisätietoja on kohteessa Stage.quality." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Lisätietoja on kohteessa Stage.quality." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Lisätietoja on kohteessa Stage.quality." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Quality, "Lisätietoja on kohteessa Stage.quality." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Käytä sen sijaan static-ominaisuutta flash.media.SoundMixer.bufferTime." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Tätä toimintoa ei enää tueta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Lisätietoja on kohteessa LoaderInfo.url." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Tätä toimintoa ei enää tueta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_NewLine, "Käytä rivinvaihtona kohdetta '\n'." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Lisätietoja on kohteessa textField.maxScroll." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Level, "ActionScript 3.0:ssa ei tunneta käsitettä taso. Sen sijaan ohjelma ohjaa suoraan näyttöluetteloon. Lisätietoja on paketissa flash.display." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Parent, "Käytä sen sijaan yläominaisuutta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Root, "Tämä ominaisuus on poistettu. Lähin vastaava ominaisuus on Stage, joka toimii ActionScript 3.0:n näyttöluettelon juurena." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Yritä sen sijaan määrittää kutsuja funktion argumentiksi." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Tätä toimintoa ei enää tueta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Käytä sen sijaan yläominaisuutta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Tätä toimintoa ei enää tueta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Lisätietoja on kohteessa Sprite.hitArea." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Scroll, "Katso lisätietoja luokan flash.text.TextField ominaisuuksista scrollH ja scrollV." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Käytä MovieClip-objekteja suoraan argumentteina polkujen sijaan." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Lisätietoja on kohteessa Video.videoHeight." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Lisätietoja on kohteessa Video.videoWidth." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp__Proto__, "Lisätietoja on vanhentuneessa kohteessa __proto__." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Stage, "Lisätietoja on kohteessa DisplayObject.stage." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Käytä sen sijaan registerClass()-metodia flash.net-paketissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_random, "Käytä sen sijaan kohdetta Math.random()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_chr, "Käytä sen sijaan kohdetta String.fromCharCode()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Käytä sen sijaan kohdetta String.fromCharCode()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ord, "Käytä sen sijaan kohdetta String.charCodeAt()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_mbord, "Käytä sen sijaan kohdetta String.charCodeAt()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_substring, "Käytä sen sijaan metodia String.substr." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Käytä sen sijaan metodia String.substr." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_length, "Käytä sen sijaan argumentin length-ominaisuutta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_mblength, "Käytä sen sijaan argumentin length-ominaisuutta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Lisätietoja on kohteen ASnative muutoksissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Määritä ominaisuudet sen sijaan suoraan esiintymässä käyttäen dot (.) -merkintää." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Käytä ominaisuuksia sen sijaan suoraan käyttäen dot (.) -merkintää." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Määritä ominaisuudet sen sijaan suoraan esiintymässä käyttäen dot (.) -merkintää." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Lisätietoja on kohteissa TextEvent.LINK ja addEventListener()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Tämä metodin on siirretty pakettiin flash.utils." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Korvattu uudella MovieClip-luokan konstruktorifunktiolla." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Siirretty pakettiin flash.system. Katso myös luokasta flash.external.ExternalInterface tietoja Javascript/ActionScript-tietoliikenteestä." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_getURL, "Tietoja vastaavista toiminnoista on kohteessa flash.net.URLLoader.  Paketti flash.net sisältää myös pakettitason funktiot navigateToURL() ja sendToURL()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Lisätietoja on kohteessa MovieClip.gotoAndPlay()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Lisätietoja on kohteessa MovieClip.gotoAndStop()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_play, "Lisätietoja on kohteessa MovieClip.play()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_print, "Lisätietoja on kohteessa PrintJob.start()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Lisätietoja on kohteessa PrintJob." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Lisätietoja on kohteessa PrintJob." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_printNum, "Lisätietoja on kohteessa PrintJob." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Käytä kohdetta Container.removeChild(childName). Lisätietoja on luokassa DisplayObjectContainer." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Siirretty pakettiin flash.utils.  Harkitse Timer-luokan käyttöä." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Lisätietoja on kohteessa MovieClip.nextFrame()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Lisätietoja on kohteessa MovieClip.startDrag()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_stop, "Lisätietoja on kohteessa MovieClip.stop()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Lisätietoja on kohteessa Sound.stopAllSounds()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Lisätietoja on kohteessa MovieClip.stopDrag()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Käytä sen sijaan dot (.) -operaattoria tai with-lauseketta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Lisätietoja on kohteissa DisplayObject.stage ja Stage.quality." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Käytä sen sijaan kohdetta DisplayObjectContainer.removeChild(childName). Lisätietoja on luokassa DisplayObjectContainer." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Käytä sen sijaan kohdetta DisplayObjectContainer.removeChild(childName). Lisätietoja on luokassa DisplayObjectContainer." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Tämä ei ole enää yleinen funktio, mutta se on yhä käytettävissä luokkien TimerEvent, MouseEvent ja KeyboardEvent metodina." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Lisätietoja on kohteissa Video.attachNetStream ja Video.attachCamera." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Käytä URLLoader-luokkaa lataamiseen ja tulosten välittämiseen kohteeseen StyleSheet.parseCSS()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "ActionScript 3.0:ssa kaikki luokat on rekisteröity oletuksena.  Jos käytössä on AMF, katso lisätietoja kohteesta flash.utils.registerClassAlias()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Käytä aksessoriominaisuuksia (get-/set-funktioita) tai flash.utils.Proxy-luokkaa vastaavia toimintoja varten." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Käytä aksessoriominaisuuksia (get-/set-funktioita) tai flash.utils.Proxy-luokkaa vastaavia toimintoja varten." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Lisätietoja on kohteessa MovieClip.loadMovie()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Lisätietoja on kohteessa MovieClip.loadMovieNum()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Lisätietoja on kohteessa Loader.load()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Lisätietoja on kohteessa Loader.load()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Lisätietoja on kohteessa addEventListener (eventName, kuuntelija, useCapture, prioriteetti)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Lisätietoja on kohteessa removeEventListener (eventName, kuuntelija, useCapture)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Lisätietoja on kohteessa addEventListener (eventName, kuuntelija, useCapture, prioriteetti)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Lisätietoja on kohteessa removeEventListener (eventName, kuuntelija, useCapture)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Lisätietoja on kohteessa addEventListener (eventName, kuuntelija, useCapture, prioriteetti)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Lisätietoja on kohteessa removeEventListener (eventName, kuuntelija, useCapture)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Lisätietoja on kohteessa addEventListener (eventName, kuuntelija, useCapture, prioriteetti)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Lisätietoja on kohteessa removeEventListener (eventName, kuuntelija, useCapture)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Käytä SWF-luokkaa äänien luomiseen kirjastosta." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onStatus, "Flash Player ei laukaise onStatus-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('status', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onID3, "Flash Player ei laukaise onID3-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('id3', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onLoad, "Flash Player ei laukaise onLoad-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('load', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onSoundComplete, "Flash Player ei laukaise onSoundComplete-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('soundComplete', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onSetFocus, "Flash Player ei laukaise onSetFocus-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('focusIn', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onResize, "Flash Player ei laukaise onResize-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('resize', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onChanged, "Flash Player ei laukaise onChanged-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('change', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onKillFocus, "Flash Player ei laukaise onKillFocus-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('focusOut', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onScroller, "Flash Player ei laukaise onScroller-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('scroll', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onMouseDown, "Flash Player ei laukaise onMouseDown-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('mouseDown', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onMouseUp, "Flash Player ei laukaise onMouseUp-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('mouseUp', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onMouseMove, "Flash Player ei laukaise onMouseMove-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('mouseMove', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onMouseWheel, "Flash Player ei laukaise onMouseWheel-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('mouseWheel', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onKeyDown, "Flash Player ei laukaise onKeyDown-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('keyDown', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onKeyUp, "Flash Player ei laukaise onKeyUp-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('keyUp', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onData, "Flash Player ei laukaise onData-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('data', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "Flash Player ei laukaise onHTTPStatus-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('httpStatus', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onDragOut, "Flash Player ei laukaise onDragOut-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('mouseOut', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onDragOver, "Flash Player ei laukaise onDragOver-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('mouseOver', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onPress, "Flash Player ei laukaise onPress-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('mouseDown', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onRelease, "Flash Player ei laukaise onRelease-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('click', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "Flash Player ei laukaise onReleaseOutside-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('mouseUp', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onRollOut, "Flash Player ei laukaise onRollOut-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('mouseOut', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onRollOver, "Flash Player ei laukaise onRollOver-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('mouseOver', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onActivity, "Flash Player ei laukaise onActivity-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('activity', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onSelect, "Flash Player ei laukaise onSelect-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('menuSelect', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onEnterFrame, "Flash Player ei laukaise onEnterFrame-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('enterFrame', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onUnload, "Flash Player ei laukaise onUnload-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('unload', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onLoadComplete, "Flash Player ei laukaise onLoadComplete-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('load', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onLoadError, "Flash Player ei laukaise onLoadError-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('error', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onLoadInit, "Flash Player ei laukaise onLoadInit-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('init', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onLoadProgress, "Flash Player ei laukaise onLoadProgress-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('progress', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onLoadStart, "Flash Player ei laukaise onLoadStart-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('start', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onClose, "Flash Player ei laukaise onClose-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('close', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onConnect, "Flash Player ei laukaise onConnect-tapahtumakäsittelijää automaattisesti ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('connect', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onXML, "Flash Player ei laukaise onXML:ää automaattisesti ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('xml', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Käytä sen sijaan ominaisuutta hasChildNodes." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "XMLEvent-luokka on vanhentunut. Xml-tapahtumaa ole enää lähetetä. Vain data-tapahtuma lähetetään tiedostonlatauksen aikana." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "XMLDoc-luokka on saanut uuden nimen XMLDocument." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Käytä sen sijaan ominaisuutta Accessibility.active." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Käytä sen sijaan vakiota ActivityEvent.ACTIVITY." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Käytä sen sijaan kohdetta DisplayObjectContainer.parent.getChildIndex. Katso ohje DisplayObjectContainer-luokassa, joka on MovieClipin laajentama." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Käytä sen sijaan kohdetta DisplayObjectContainer.parent.setChildIndex. Katso ohje DisplayObjectContainer-luokassa, joka on MovieClipin laajentama." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Käytä sen sijaan kohdetta DisplayObjectContainer.getChildAt. Katso ohje DisplayObjectContainer-luokassa, joka on MovieClipin laajentama." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Käytä sen sijaan kohdetta DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild lisää aina uuden aliobjektin indeksiin DisplayObjectContainer.numChildren." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Käytä sen sijaan ominaisuutta ByteArray.bytesAvailable." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Käytä sen sijaan ominaisuutta ByteArray.position." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Käytä sen sijaan ominaisuutta ByteArray.position." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Käytä sen sijaan metodia Camera.getCamera()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Käytä sen sijaan ominaisuutta Camera.currentFPS." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Käytä sen sijaan ominaisuutta Camera.keyFrameInterval." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Käytä sen sijaan ominaisuutta Camera.loopback." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Käytä sen sijaan ominaisuutta ColorTransform.color." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Käytä sen sijaan ominaisuutta ColorTransform.color." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Käytä sen sijaan ominaisuutta Container.textSnapshot." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Käytä sen sijaan metodia ContextMenu.clone()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Käytä sen sijaan ominaisuutta ContextMenu.forwardAndBack." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Käytä sen sijaan metodia ContextMenuItem.clone()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Käytä sen sijaan ominaisuutta CustomActions.actionsList." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Käytä sen sijaan vakiota DataEvent.DATA." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Käytä sen sijaan ominaisuutta DisplayObject.scaleX." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Käytä sen sijaan ominaisuutta DisplayObject.scaleX." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Käytä sen sijaan ominaisuutta DisplayObject.scaleY." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Käytä sen sijaan ominaisuutta DisplayObject.scaleY." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Käytä sen sijaan ominaisuutta DisplayObject.mouseX." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Käytä sen sijaan ominaisuutta DisplayObject.mouseX." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Käytä sen sijaan ominaisuutta DisplayObject.mouseY." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Käytä sen sijaan ominaisuutta DisplayObject.mouseY." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Tätä ominaisuutta ei enää tueta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Tätä ominaisuutta ei enää tueta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Käytä sen sijaan ominaisuutta DisplayObject.name." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Käytä sen sijaan ominaisuutta DisplayObject.parent." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Käytä sen sijaan ominaisuutta DisplayObject.mask." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Käytä sen sijaan ominaisuutta DisplayObject.visible." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Käytä sen sijaan ominaisuutta DisplayObject.x." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Käytä sen sijaan ominaisuutta DisplayObject.y." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Käytä sen sijaan ominaisuutta DisplayObject.rotation." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Käytä sen sijaan ominaisuutta DisplayObject.alpha." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Käytä sen sijaan ominaisuutta DisplayObject.width." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Käytä sen sijaan ominaisuutta DisplayObject.height." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Käytä sen sijaan ominaisuutta ExternalInterface.available." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Käytä sen sijaan vakiota ErrorEvent.ERROR." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Käytä sen sijaan ominaisuutta Event.isDefaultPrevented." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Käytä sen sijaan vakiota Event.ACTIVATE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Käytä sen sijaan vakiota Event.ADDED." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Käytä sen sijaan vakiota Event.CANCEL." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Käytä sen sijaan vakiota Event.CHANGE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Käytä sen sijaan vakiota Event.CLOSE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Käytä sen sijaan vakiota Event.COMPLETE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Käytä sen sijaan vakiota Event.CONNECT." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Käytä sen sijaan vakiota Event.DEACTIVATE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Käytä sen sijaan vakiota Event.ENTER_FRAME." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Käytä sen sijaan vakiota Event.ID3." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Käytä sen sijaan vakiota Event.INIT." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Käytä sen sijaan vakiota Event.MOUSE_LEAVE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Käytä sen sijaan vakiota Event.OPEN." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Käytä sen sijaan vakiota Event.REMOVED." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Käytä sen sijaan vakiota Event.RENDER." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Käytä sen sijaan vakiota Event.RESIZE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Käytä sen sijaan vakiota Event.SCROLL." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Käytä sen sijaan vakiota Event.SELECT." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Käytä sen sijaan vakiota Event.SOUND_COMPLETE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Käytä sen sijaan vakiota Event.TAB_CHILDREN_CHANGE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Käytä sen sijaan vakiota Event.TAB_ENABLED_CHANGE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Käytä sen sijaan vakiota Event.TAB_INDEX_CHANGE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Käytä sen sijaan vakiota Event.UNLOAD." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Käytä sen sijaan vakiota FocusEvent.FOCUS_IN." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Käytä sen sijaan vakiota FocusEvent.FOCUS_OUT." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Käytä sen sijaan vakiota FocusEvent.KEY_FOCUS_CHANGE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Käytä sen sijaan vakiota FocusEvent.MOUSE_FOCUS_CHANGE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Käytä sen sijaan metodia Graphics.beginBitmapFill()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Käytä sen sijaan ominaisuutta BitmapFilter.quality." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Käytä sen sijaan kohdetta KeyboardEvent.charCode." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Käytä sen sijaan kohdetta KeyboardEvent.keyCode." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Lisätietoja on luokassa KeyboardEvent." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Lisätietoja on kohteissa KeyboardEvent.ctrlKey, KeyboardEvent.altKey ja KeyboardEvent.shiftKey." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Käytä sen sijaan vakiota PAGE_DOWN." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Käytä sen sijaan vakiota PAGE_UP." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Käytä sen sijaan vakiota DELETE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Käytä sen sijaan vakiota CAPS_LOCK." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Käytä sen sijaan yhtä vakioista NUMPAD_0 -> NUMPAD_9." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Käytä sen sijaan ominaisuutta InteractiveObject.focusRect." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Käytä sen sijaan ominaisuutta InteractiveObject.contextMenu." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Käytä sen sijaan ominaisuutta KeyboardEvent.charCode." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Käytä sen sijaan ominaisuutta KeyboardEvent.keyCode." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Käytä sen sijaan ominaisuutta Loader.contentLoaderInfo." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Tätä ominaisuutta ei enää tueta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Tätä ominaisuutta ei enää tueta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Käytä sen sijaan ominaisuutta LoaderInfo.loaderURL." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Käytä sen sijaan ominaisuutta LocalConnection.domain." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Käytä sen sijaan ominaisuutta MenuEvent.contextMenuOwner." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Käytä sen sijaan metodia Microphone.getMicrophone()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Jos MovieClip-aliluokan nimi on A, käytä muuttujaa mc= new A(); addChild(mc). Lisätietoja on luokassa DisplayObjectContainer." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Käytä muuttujaa mc= new MovieClip(); addChild(mc). Lisätietoja on luokassa DisplayObjectContainer." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Käytä muuttujaa tf= new TextField(); addChild(mc). Lisätietoja on luokassa DisplayObjectContainer." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Käytä kohdetta Container.removeChild(childName). Lisätietoja on luokassa DisplayObjectContainer." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Käytä muuttujaa l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));. Lisätietoja on Loader- ja DisplayObjectContainer-luokissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Käytä sen sijaan kohdetta DisplayObjectContainer.removeChild(childName). Lisätietoja on luokassa DisplayObjectContainer." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Käytä sen sijaan kohdetta DisplayObjectContainer.removeChild(childName). Lisätietoja on luokassa DisplayObjectContainer." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Käytä sen sijaan kohdetta DisplayObjectContainer.parent.getChildIndex. Lisätietoja on luokassa DisplayObjectContainer, jota MovieClip laajentaa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Käytä sen sijaan kohdetta DisplayObjectContainer.parent.setChildIndex. Lisätietoja on luokassa DisplayObjectContainer, jota MovieClip laajentaa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Käytä sen sijaan kohdetta DisplayObjectContainer.getChildAt. Lisätietoja on luokassa DisplayObjectContainer, jota MovieClip laajentaa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Käytä sen sijaan kohdetta DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild lisää aina uuden aliobjektin indeksiin DisplayObjectContainer.numChildren." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Lisätietoja on kohteessa DisplayObject.addChild." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Lisätietoja on kohteessa LoaderInfo.bytesLoaded sekä Loader-luokassa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Lisätietoja on kohteessa LoaderInfo.bytesTotal sekä Loader-luokassa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Tietoja vastaavista toiminnoista on kohteessa flash.net.URLLoader.  Paketti flash.net sisältää myös pakettitason funktiot navigateToURL() ja sendToURL()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Lisätietoja on kohteessa LoaderInfo.url sekä Loader-luokassa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Lisätietoja on kohteessa LoaderInfo.url sekä Loader-luokassa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Käytä sen sijaan ominaisuutta MovieClip.mask." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Lisätietoja on kohteessa LoaderInfo.swfVersion sekä Loader-luokassa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Käytä sen sijaan ominaisuutta MovieClip.currentFrame." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Käytä sen sijaan ominaisuutta MovieClip.framesLoaded." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Käytä sen sijaan ominaisuutta MovieClip.totalFrames." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Lisätietoja on kohteessa displayObjectInstance.root." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Lisätietoja on kohteessa displayObjectInstance.root." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Käytä sen sijaan staattista ominaisuutta flash.media.SoundMixer.bufferTime." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Lisätietoja on luokassa Graphics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Käytä sen sijaan ominaisuutta NetStream.bufferTime." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Käytä sen sijaan ominaisuutta NetStream.currentFPS." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Käytä sen sijaan ominaisuutta NetStream.videoCodec." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Käytä sen sijaan ominaisuutta NetStream.audioCodec." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Käytä sen sijaan ominaisuutta ProductManager.isInstalled." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Käytä sen sijaan ominaisuutta ProductManager.installedVersion." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Käytä sen sijaan ominaisuutta ProductManager.isRunning." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Käytä sen sijaan metodia Point.add()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Käytä sen sijaan ominaisuutta Proxy.deleteDescendants." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Käytä sen sijaan metodia heapDump()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Käytä sen sijaan ominaisuutta ProgressEvent.bytesLoaded." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Käytä sen sijaan ominaisuutta ProgressEvent.bytesTotal." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Käytä sen sijaan ominaisuutta Rectangle.isEmpty." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Käytä sen sijaan ominaisuutta SoundTransform.pan." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Käytä sen sijaan ominaisuutta Sockect.bytesAvailable." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Käytä sen sijaan ominaisuutta SharedObject.size." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Käytä sen sijaan ominaisuutta SharedObject.fps." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Tätä ei enää tueta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Käytä sen sijaan metodia Sprite.constructChildren()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Käytä sen sijaan ominaisuutta Sprite.dropTarget." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Käytä sen sijaan ominaisuutta Stage.focus." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Käytä sen sijaan ominaisuutta Stage.focus." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Käytä sen sijaan ominaisuutta Stage.showDefaultContextMenu." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Käytä sen sijaan ominaisuutta StyleSheet.styleNames." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Käytä URLLoader-esiintymää StyleSheet-tietojen lataamiseen ja välitä lataajatiedot StyleSheet.parseCSS-metodille. Lisätietoja on URLLoader- ja EventDispatcher-luokissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Käytä URLLoader-esiintymää StyleSheet-tietojen lataamiseen ja välitä lataajatiedot StyleSheet.parseCSS-metodille. Lisätietoja on URLLoader- ja EventDispatcher-luokissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Käytä URLLoader-esiintymää StyleSheet-tietojen lataamiseen ja välitä lataajatiedot StyleSheet.parseCSS-metodille. Lisätietoja on URLLoader- ja EventDispatcher-luokissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Käytä URLLoader-esiintymää StyleSheet-tietojen lataamiseen ja välitä lataajatiedot StyleSheet.parseCSS-metodille. Lisätietoja on URLLoader- ja EventDispatcher-luokissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Käytä URLLoader-esiintymää StyleSheet-tietojen lataamiseen ja välitä lataajatiedot StyleSheet.parseCSS-metodille. Lisätietoja on URLLoader- ja EventDispatcher-luokissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Käytä sen sijaan ominaisuutta IME.enabled." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Käytä sen sijaan ominaisuutta IME.enabled." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Käytä sen sijaan ominaisuutta IME.instance." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Käytä sen sijaan ominaisuutta IME.conversionMode." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Käytä sen sijaan ominaisuutta IME.conversionMode." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Käytä sen sijaan ominaisuutta System.vmVersion." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Käytä sen sijaan ominaisuutta SWFLoaderInfo.swfVersion." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Käytä sen sijaan ominaisuutta SWFLoaderInfo.actionScriptVersion." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Käytä sen sijaan ominaisuutta TextField.defaultTextFormat." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Käytä sen sijaan ominaisuutta TextField.defaultTextFormat." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Käytä sen sijaan kohdetta DisplayObjectContainer.parent.getChildIndex. Lisätietoja on luokassa DisplayObjectContainer, jota MovieClip laajentaa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Käytä sen sijaan kohdetta DisplayObjectContainer.parent.setChildIndex. Lisätietoja on luokassa DisplayObjectContainer, jota MovieClip laajentaa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Käytä sen sijaan kohdetta DisplayObjectContainer.getChildAt. Lisätietoja on luokassa DisplayObjectContainer, jota MovieClip laajentaa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Käytä sen sijaan kohdetta DisplayObjectContainer.numChildren.  DisplayObjectContainer.addChild lisää aina uuden aliobjektin indeksiin DisplayObjectContainer.numChildren." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Käytä sen sijaan metodia TextField.replaceSelectedText()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Käytä sen sijaan metodia TextField.getLineIndexOfChar()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Käytä sen sijaan ominaisuutta TextField.selectionBeginIndex." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Käytä sen sijaan ominaisuutta TextField.selectionEndIndex." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Käytä sen sijaan ominaisuutta TextField.caretIndex." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Käytä sen sijaan metodia Font.enumerateFonts()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Käytä sen sijaan ominaisuutta TextField.maxScrollV." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Käytä sen sijaan ominaisuutta TextField.scrollH." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Käytä sen sijaan ominaisuutta TextField.maxScrollH." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Käytä sen sijaan ominaisuutta TextField.defaultTextFormat." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Luo tilapäinen TextField ja käytä kohdetta TextField.getLineMetrics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Käytä sen sijaan ominaisuutta TextSnapshot.charCount." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Käytä sen sijaan navigateToURL()-metodia flash.net-paketissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Käytä sen sijaan sendToURL()-metodia flash.net-paketissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Käytä sen sijaan ominaisuutta URLLoader.dataFormat." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Käytä sen sijaan ominaisuutta URLStream.bytesAvailable." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Tätä ominaisuutta ei enää tueta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Käytä sen sijaan ominaisuutta URLRequest.applicationDomain." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Lisää pyyntöotsikoita asettamalla ominaisuus URLRequest.requestHeaders URLRequestHeader-objekteille." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Käytä URLLoader-esiintymää XML-tiedoston lataamiseen ja välitä URLLoaders-tiedot XMLDocuments-konstruktorille. Lisätietoja on URLLoader- ja EventDispatcher-luokissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Käytä sen sijaan sendToURL()-metodia flash.net-paketissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Aseta URLRequest-objektin postData-ominaisuus ja käytä sitä URLLoader-objektin kanssa XML-tiedoston lataamiseen.  Välitä URLLoaders-tiedot XMLDocuments-konstruktorille. Lisätietoja on URLLoader-, URLRequest- ja EventDispatcher-luokissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Käytä URLLoader-esiintymää XML-tiedoston lataamiseen ja välitä URLLoaders-tiedot XMLDocuments-konstruktorille. Lisätietoja on URLLoader- ja EventDispatcher-luokissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Lisää pyyntöotsikoita asettamalla ominaisuus URLRequest.requestHeaders URLRequestHeader-objekteille." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Lisätietoja on kohteessa URLLoader.bytesLoaded sekä URLLoader-luokassa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Lisätietoja on kohteessa URLLoader.bytesTotal sekä URLLoader-luokassa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Käytä URLLoader-esiintymää XML-tiedoston lataamiseen ja välitä lataajatiedot StyleSheet.parseCSS-metodille. Lisätietoja on URLLoader- ja EventDispatcher-luokissa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Käytä sen sijaan ominaisuutta URLRequest.contentType." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Tarkista XMLDocument-konstruktorin tai XMLDocument.parseXML-metodin palauttamat mahdolliset poikkeukset. Lisätietoja on kohteessa XMLDocument." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Button, "Button-luokka on saanut uuden nimen SimpleButton." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Container, "Container-luokka on saanut uuden nimen DisplayObjectContainer." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Image, "Image-luokka on saanut uuden nimen BitmapData." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "ImageFilter-luokka on saanut uuden nimen BitmapFilter." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "ImageSprite-luokka on saanut uuden nimen Bitmap." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "ImageLoaderInfo-luokka on saanut uuden nimen BitmapLoaderInfo." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "ImeEvent-luokka on saanut uuden nimen IMEEvent." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Key, "Key-luokka on saanut uuden nimen Keyboard." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "LineMetrics-luokka on saanut uuden nimen TextLineMetrics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Lisätietoja on URLVariables-luokassa sekä ominaisuuksissa URLRequest.urlVariables, URLRequest.postData ja URLLoader.dataFormat." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "MenuEvent-luokka on saanut uuden nimen ContextMenuEvent." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "SystemCapabilities-luokka on saanut uuden nimen Capabilities." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Käytä sen sijaan ominaisuutta TextField.getLineMetrics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Button, "Button-luokka on saanut uuden nimen SimpleButton." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Container, "Container-luokka on saanut uuden nimen DisplayObjectContainer." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Image, "Image-luokka on saanut uuden nimen BitmapData." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "ImageFilter-luokka on saanut uuden nimen BitmapFilter." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "ImageSprite-luokka on saanut uuden nimen Bitmap." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "ImageLoaderInfo-luokka on saanut uuden nimen BitmapLoaderInfo." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "ImeEvent-luokka on saanut uuden nimen IMEEvent." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Key, "Key-luokka on saanut uuden nimen Keyboard." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "LineMetrics-luokka on saanut uuden nimen TextLineMetrics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Lisätietoja on URLVariables-luokassa sekä ominaisuuksissa URLRequest.urlVariables, URLRequest.postData ja URLLoader.dataFormat." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "MenuEvent-luokka on saanut uuden nimen ContextMenuEvent." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "SystemCapabilities-luokka on saanut uuden nimen Capabilities." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Käytä sen sijaan ominaisuutta TextField.getLineMetrics." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Lisätietoja on Proxy-luokan ohjeessa. Tässä luokassa on vastaavia toimintoja." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Käytä sen sijaan metodia XMLUI.getProperty." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Käytä sen sijaan metodia XMLUI.setProperty." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Käytä sen sijaan ominaisuutta DisplayObject.accessibilityProperties." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Käytä sen sijaan ominaisuutta DisplayObject.scale9Grid." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Käytä sen sijaan metodia Graphics.drawOval." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Käytä sen sijaan ominaisuutta NetConnection.connected." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Käytä sen sijaan ominaisuutta Socket.connected." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Käytä sen sijaan ominaisuutta URLStream.connected." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Käytä sen sijaan ominaisuutta SyncEvent.changeList." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Käytä sen sijaan ominaisuutta TextField.scrollV." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Käytä sen sijaan ominaisuutta TextField.bottomScrollV." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Käytä sen sijaan vakiota BitmapDataChannel.RED." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Käytä sen sijaan vakiota BitmapDataChannel.GREEN." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Käytä sen sijaan vakiota BitmapDataChannel.BLUE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Käytä sen sijaan vakiota BitmapDataChannel.ALPHA." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Käytä sen sijaan is-operaattoria." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Käytä sen sijaan metodia flash.system.Security.showSettings." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Käytä sen sijaan ominaisuutta System.useCodePage." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Käytä sen sijaan luokkaa flash.events.EventDispatcher." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Käytä sen sijaan staattista ominaisuutta flash.media.SoundMixer.bufferTime." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Luo uusi esiintymä bittikarttakirjaston symboliluokasta, esim. uusi myBitmapName()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Lisätietoja on kohteessa Loader.load()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "MovieClipLoader-luokan on korvannut flash.display.Loader-luokka." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "MovieClipLoader-luokan on korvannut flash.display.Loader-luokka." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Lisätietoja on kohteessa addEventListener (eventName, kuuntelija, useCapture, prioriteetti)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Lisätietoja on kohteessa removeEventListener (eventName, kuuntelija, useCapture)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Käytä sen sijaan vakiota flash.system.IMEConversionMode.ALPHANUMERIC_FULL." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Käytä sen sijaan vakiota flash.system.IMEConversionMode.ALPHANUMERIC_HALF." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Käytä sen sijaan vakiota flash.system.IMEConversionMode.CHINESE." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Käytä sen sijaan vakiota flash.system.IMEConversionMode.JAPANESE_HIRAGANA." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Käytä sen sijaan vakiota flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Käytä sen sijaan vakiota flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Käytä sen sijaan vakiota flash.system.IMEConversionMode.KOREAN." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Käytä sen sijaan vakiota flash.system.IMEConversionMode.UNKNOWN." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Lisätietoja on kohteessa addEventListener (eventName, kuuntelija, useCapture, prioriteetti)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Lisätietoja on kohteessa removeEventListener (eventName, kuuntelija, useCapture)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onCancel, "Flash Player ei laukaise onCancel-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener (cancel, onCancel)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Suoraa korviketta ei ole. Metodia willTrigger() voidaan käyttää kertomaan, onko kuuntelijoita rekisteröity." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onIMEComposition, "Flash Player ei laukaise onIMEComposition-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener (imeComposition, handlerName)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Lisätietoja on kohteessa LoaderInfo.url sekä Loader-luokassa." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Käytä sen sijaan metodia getFullYear()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Käytä sen sijaan metodia setFullYear()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Käytä sen sijaan metodia getUTCFullYear()." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Käytä sen sijaan rate-ominaisuutta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Selection, "Selection-luokka on poistettu. Lisätietoja on sen luokan addEventListener-metodissa, jonka valintatiedot haluat nähdä." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Selection, "Selection-luokka on poistettu. Lisätietoja on sen luokan addEventListener-metodissa, jonka valintatiedot haluat nähdä." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Käytä sen sijaan gain-ominaisuutta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Väriarvot voidaan määrittää suoraan käyttämällä ColorTransform-luokan konstruktoria tai ominaisuuksia." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Väriarvot voidaan määrittää suoraan käyttämällä ColorTransform-luokan konstruktoria tai ominaisuuksia." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Katso ohjeesta flash.display.InteractiveObject-luokan kohdistukseen liittyvät ominaisuudet." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Katso flash.display.Graphics.beginBitmapFill-metodi ohjeesta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Katso flash.display.DisplayObject.hitTestObject()-metodi ohjeesta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Katso addChild()-metodi ohjeesta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Käytä sen sijaan load()-metodia." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Käytä kohteita flash.media.SoundChannel.leftPeak ja flash.media.SoundChannel.rightPeak äänikanavan amplitudin valvontaan ja hallintaan." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Käytä sen sijaan soundTransform-ominaisuutta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Käytä sen sijaan ominaisuutta SoundTransform.pan." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Käytä sen sijaan ominaisuutta SoundTransform.pan." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Käytä sen sijaan bytesLoaded-ominaisuutta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Käytä sen sijaan bytesTotal-ominaisuutta." );
        warningConstantsFI[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Tehoton argumentin += käyttö TextField-kohteessa." );
        warningConstantsFI[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Tekstin lisääminen TextField-kenttään argumentilla += on monin kerroin hitaampaa kuin metodilla TextField.appendText()." );
        warningConstantsFI[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Sulkeita saattaa puuttua." );
        warningConstantsFI[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Käytettiin funktio-arvoa, kun odotettiin tyyppiä %s.  Sulkeet () saattavat puuttua tämän funktion viitteen jälkeen." );
        warningConstantsFI[index++] = new AscWarning(kWarning_InstanceOfChanges, "Operaattorin instanceof käyttö." );
        warningConstantsFI[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "Instanceof-operaattori on poistettu käytöstä. Käytä sen sijaan is-operaattoria." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "AllowDomain()-tapahtumakäsittelijä on nyt vakiometodi tapahtuman takaisinkutsun sijaan. Lisätietoja on uudessa metodissa LocalConnection.allowDomain." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "AllowInsecureDomain()-tapahtumakäsittelijä on nyt vakiometodi tapahtuman takaisinkutsun sijaan. Lisätietoja on uudessa metodissa LocalConnection.allowInsecureDomain." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_call, "Yleistä call()-metodia ei enää tueta." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_Color, "Color-luokka on poistettu. Käytä flash.geom.ColorTransform-luokkaa vastaavia toimintoja varten." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Color, "Color-luokka on poistettu. Käytä flash.geom.ColorTransform-luokkaa vastaavia toimintoja varten." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0:n SWF-tiedostot käyttävät aina tarkkoja toimialueiden vastaavuussääntöjä." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp_capabilities, "Luokka capabilities on saanut uuden nimen Capabilities." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_capabilities, "Luokka capabilities on saanut uuden nimen Capabilities." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Lisätietoja on kohteessa addEventListener (eventName, kuuntelija, useCapture, prioriteetti)." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Lisätietoja on kohteessa removeEventListener (eventName, kuuntelija, useCapture)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onComplete, "Flash Player ei laukaise onComplete-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('complete', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onHTTPError, "Flash Player ei laukaise onHTTPError-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('httpError', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onIOError, "Flash Player ei laukaise onIOError-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('ioError', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onProgress, "Flash Player ei laukaise onProgress-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('progress', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onSecurityError, "Flash Player ei laukaise onSecurityError-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('securityError', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Event_onOpen, "Flash Player ei laukaise onOpen-tapahtumakäsittelijää automaattisesti suoritusaikana ActionScript 3.0:ssa.  Käsittelijä pitää ensin rekisteröidä tapahtumalle käyttäen kohdetta addEventListener ('open', callback_handler)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Mahdollinen ActionScript 2.0 -XML-luokan käyttö." );
        warningConstantsFI[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Siirto-ongelma: ActionScript 2.0:n XML-luokka on saanut uuden nimen XMLDocument." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadDateCast, "Virheellinen Date-värivääristymäoperaatio." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) toimii samoin kuin uusi Date().toString(). Arvon määrittämisessä tyypille Date käytetty arvo on \"x as Date\", ei Date(x)." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ImportHidesClass, "Nykyisen luokan nimisen paketin tuominen piilottaa luokkatunnisteen tässä näkymässä." );
        warningConstantsFI[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Nykyisen luokan nimisen paketin tuominen piilottaa luokkatunnisteen tässä näkymässä." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Useita samannimisiä argumentteja." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "On määritetty useita argumentteja nimellä '%s'.  Viittaukset tähän argumenttiin palauttavat aina viimeisen argumentin." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Käytä sen sijaan metodia Rectangle.containsRect." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_eval, "Tämä toiminto on poistettu." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Tämä toiminto on korvattu ominaisuudella flash.system.Capabilities.version." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Tämä toiminto on korvattu ominaisuudella flash.display.MovieClip.framesLoaded." );
        warningConstantsFI[index++] = new AscWarning(kUnsupportedProp__global, "Ominaisuus _global on poistettu.  Vastaavat toiminnot saadaan käyttämällä luokan staattista jäsentä." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadBoolAssignment, "Käytettiin Non-Boolean-arvoa, vaikka odotettiin Boolean-arvoa." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "Käytettiin %s-arvoa, kun odotettiin Boolean-arvoa.  Ilmauksen tyypiksi pakotetaan Boolean." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadES3TypeProp, "Tuntematon ominaisuus." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s ei ole dynaamisen luokan %s tunnistettu ominaisuus." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Tuntematon metodi." );
        warningConstantsFI[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s ei ole dynaamisen luokan %s tunnistettu metodi." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Toistuva muuttujamääritys." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Toistuva muuttujan määritys." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Määrityksen nimi on sama kuin tuodun paketin nimi.  Puutteelliset viittaukset tähän nimeen palauttavat paketin, eivät määritystä." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Määrityksen nimi on sama kuin tuodun paketin nimi.  Puutteelliset viittaukset tähän nimeen palauttavat paketin, eivät määritystä." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Mahdollinen yritys poistaa kiinteä ominaisuus." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "Määritettyä ominaisuutta %s ei voi poistaa. Jos liittyvää muistia täytyy vapauttaa, aseta ominaisuuden arvoksi null." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Deprecated, "Käytöstä poistetun määrityksen käyttö." );
        warningConstantsFI[index++] = new AscWarning(kWarning_Deprecated_specific, "%s' on poistettu käytöstä." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DeprecatedMessage, "Käytöstä poistetun määrityksen käyttö." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsFI[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Käytöstä poistetun määrityksen käyttö." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "%s' on poistettu käytöstä.  Käytä määritystä '%s'." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DeprecatedSince, "Käytöstä poistetun määrityksen käyttö." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "%s' on ollut pois käytöstä alkaen %s.  Käytä määritystä '%s'." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Käytöstä poistetun määrityksen käyttö." );
        warningConstantsFI[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "%s' on ollut pois käytöstä alkaen %s." );
   }

   static final AscWarning[] warningConstantsFR= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsFR() 
   {
      int index=0;
        warningConstantsFR[index++] = new AscWarning(kWarning_NoTypeDecl, "Déclaration de type absente." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s Pas de déclaration de type pour %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Comparaison non logique avec un type non défini.  Seules les variables non typées (ou les variables de type *) peuvent être undefined." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Les variables de type %s ne peuvent pas être non définies. Avant comparaison, la valeur undefined va faire l'objet d'un transtypage forcé comme %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "La fonction utilisée dans l'expression new renvoie une valeur.  Le résultat sera la valeur renvoyée par la fonction, et non pas une nouvelle instance de cette fonction." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Problème de migration : Le résultat de new %s sera la valeur renvoyée par %s, et non pas une nouvelle instance de cette fonction." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "La valeur Boolean() sans arguments renvoie False en ActionScript 3.0.  Boolean() renvoyait undefined en ActionScript 2.0." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Utilisation de Boolean() sans arguments." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NumberFromStringChanges, "En ActionScript 3.0, les espaces blancs sont ignorés et '' renvoie 0. Number() renvoie NaN en ActionScript 2.0 lorsque le paramètre est '' ou contient des espaces blancs." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Problème de migration : lorsque la fonction Number('') est appelée avec une chaîne vide comme argument, elle renvoie 0 en ActionScript 3.0, et NaN en ActionScript 2.0." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Le format de Array.toString() a changé." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Problème de migration : La gestion par Array.toString() des éléments null et undefined a changé." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Propriété ActionScript 2.0 non prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Problème de migration : la propriété '%s' n'est plus prise en charge.  %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Fonction ActionScript 2.0 non prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Problème de migration : la méthode '%s' n'est plus prise en charge.  %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ChangesInResolve, "'__resolve' n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Problème de migration : '__resolve' n'est plus prise en charge.  Utilisez la nouvelle classe Proxy pour obtenir des fonctionnalités similaires." );
        warningConstantsFR[index++] = new AscWarning(kWarning_LevelNotSupported, "'_level' n'est plus prise en charge. Pour plus d'informations, consultez le package flash.display." );
        warningConstantsFR[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Problème de migration : '_level' n'est plus prise en charge. Pour plus d'informations, consultez le package flash.display." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ClassIsSealed, "Cette classe est fermée.  Il est impossible de lui ajouter des membres dynamiquement." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Problème de migration : %s n'est pas une classe dynamique.  Il est impossible d'ajouter dynamiquement des membres aux instances." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Changement de portée de ce mot-clé.  Les méthodes de classe extraites d'une instance d'une classe doivent toujours résoudre this avec cette instance.  En ActionScript 2.0, 'this' est recherché dynamiquement en fonction du point d'appel de la méthode." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Problème de migration : La méthode %s se comporte différemment en ActionScript 3.0, en raison du changement de portée du mot-clé this. Pour plus d'informations, consultez la description de l'avertissement 1083." );
        warningConstantsFR[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Déclaration d'espace de nom absente (par ex. variable non définie comme public, private, etc.)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "La portée de %s sera limitée à l'espace de nom par défaut : %s internal.  Elle ne sera pas visible à l'extérieur de ce package." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ForVarInChanges, "En ActionScript 3.0 les itérations des propriétés d'un objet s'effectuent dans une déclaration \"for x in target\" en ordre aléatoire." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Problème de migration : En ActionScript 3.0 les itérations des propriétés d'un objet s'effectuent dans une déclaration \"for x in target\" en ordre aléatoire." );
        warningConstantsFR[index++] = new AscWarning(kWarning_InternalError, "Erreur interne du compilateur." );
        warningConstantsFR[index++] = new AscWarning(kWarning_InternalError_specific, "Code d'erreur : %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler n'a pas été ajouté comme module d'écoute." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Problème de migration : %s" );
        warningConstantsFR[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Les valeurs négatives deviennent des nombres positifs importants lorsqu'elles sont affectées à un type de données uint." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Valeur négative utilisée, alors qu'une valeur uint (non négative) est attendue." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadNullComparision, "Comparaison non logique avec null." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Comparaison non logique avec null.  Les variables de type %s ne peuvent pas être nulles." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadNaNComparision, "Comparaison non logique avec NaN. Toute opération de comparaison avec NaN sera évaluée comme 'false', puisque NaN != NaN." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Comparaison non logique avec NaN.  Cette instruction est toujours évaluée comme false." );
        warningConstantsFR[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Affectation dans une clause conditionnelle." );
        warningConstantsFR[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Affectation dans une clause conditionnelle.  Peut-être vouliez-vous saisir == au lieu de = ?" );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadNullAssignment, "Affectation de null impossible." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "null utilisée alors qu'une valeur %s est attendue." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NoConstructor, "Constructeur absent." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NoConstructor_specific, "Aucune fonction constructeur n'a été spécifiée pour la classe %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Instruction vide." );
        warningConstantsFR[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Instruction vide trouvée à l'emplacement où un bloc de code était attendu. Avez-vous saisi ';' accidentellement ?" );
        warningConstantsFR[index++] = new AscWarning(kWarning_ConstNotInitialized, "Constante non initialisée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "La constante n'a pas été initialisée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadArrayCast, "L'opération de transtypage sur Array ne semble pas valide." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) se comporte de la même façon que new Array(x).  Pour convertir une valeur dans le type Array, utilisez l'expression x as Array au lieu de Array(x)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "L'instruction super() n'a pas été appelée par le constructeur." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "L'instruction super() sera exécutée avant l'entrée dans ce constructeur.  Si vous souhaitez contrôler explicitement son exécution, ajoutez un appel à super() au sein du constructeur." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_version, "Utilisez plutôt Capabilities.version." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Pour plus d'informations, consultez la section InteractiveObject.focusRect." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Highquality, "Pour plus d'informations, consultez la section Stage.quality." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Pour plus d'informations, consultez la section Stage.quality." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Pour plus d'informations, consultez la section Stage.quality." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Quality, "Pour plus d'informations, consultez la section Stage.quality." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Utilisez plutôt la propriété statique flash.media.SoundMixer.bufferTime." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Pour plus d'informations, consultez la section LoaderInfo.url." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_NewLine, "Pour un saut de ligne, utilisez '\n'." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Pour plus d'informations, consultez la section textField.maxScroll." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Level, "Le concept de niveaux n'existe pas en ActionScript 3.0, par contre ce langage permet d'accéder directement à la liste d'affichage. Pour plus d'informations, consultez le package flash.display." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Parent, "Utilisez plutôt la propriété parent." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Root, "Cette propriété a été supprimée. L'équivalent le plus proche est Stage, qui représente la racine de la liste d'affichage en ActionScript 3.0." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Essayez plutôt de déclarer l'appelant comme argument de la fonction." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Utilisez plutôt la propriété parent." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Pour plus d'informations, consultez la section Sprite.hitArea." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Scroll, "Pour plus d'informations, consultez les propriétés scrollH et scrollV de la classe flash.text.TextField." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Utilisez les objets MovieClip directement comme arguments au lieu de chemins." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Pour plus d'informations, consultez la section Video.videoHeight." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Pour plus d'informations, consultez la section Video.videoWidth." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp__Proto__, "Pour plus d'informations, consultez le mot-clé obsolète __proto__." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Stage, "Pour plus d'informations, consultez la section DisplayObject.stage." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Utilisez plutôt la méthode registerClass() du package flash.net." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_random, "Utilisez plutôt Math.random()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_chr, "Utilisez plutôt String.fromCharCode()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Utilisez plutôt String.fromCharCode()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ord, "Utilisez plutôt String.charCodeAt()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_mbord, "Utilisez plutôt String.charCodeAt()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_substring, "Utilisez plutôt la méthode String.substr." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Utilisez plutôt la méthode String.substr." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_length, "Utilisez plutôt la propriété length de l'argument." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_mblength, "Utilisez plutôt la propriété length de l'argument." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Pour plus d'informations, consultez les modifications de ASnative." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Définissez plutôt les propriétés directement dans l'instance à l'aide de la notation avec point (.)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Accédez plutôt directement aux propriétés en utilisant la notation avec point (.)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Définissez plutôt les propriétés directement dans l'instance à l'aide de la notation avec point (.)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Pour plus d'informations, consultez les sections TextEvent.LINK et addEventListener()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Cette méthode a été déplacée dans le package flash.utils." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Remplacée par la nouvelle fonction constructeur de classe MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Déplacée dans le package flash.system. Consultez la classe flash.external.ExternalInterface pour les communications Javascript/ActionScript." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_getURL, "Pour une fonctionnalité équivalente, consultez flash.net.URLLoader. Le package flash.net contient aussi les fonctions de niveau package navigateToURL() et sendToURL()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Pour plus d'informations, consultez la section MovieClip.gotoAndPlay()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Pour plus d'informations, consultez la section MovieClip.gotoAndStop()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_play, "Pour plus d'informations, consultez la section MovieClip.play()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_print, "Pour plus d'informations, consultez la section PrintJob.start()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Pour plus d'informations, consultez la section PrintJob." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Pour plus d'informations, consultez la section PrintJob." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_printNum, "Pour plus d'informations, consultez la section PrintJob." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Utilisez Container.removeChild(Nom_de_l'enfant). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Déplacée dans le package flash.utils.  Utilisez plutôt la classe Timer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Pour plus d'informations, consultez la section MovieClip.nextFrame()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Pour plus d'informations, consultez la section MovieClip.startDrag()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_stop, "Pour plus d'informations, consultez la section MovieClip.stop()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Pour plus d'informations, consultez la section Sound.stopAllSounds()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Pour plus d'informations, consultez la section MovieClip.stopDrag()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Utilisez plutôt l'opérateur point (.) ou l'instruction with." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Pour plus d'informations, consultez les sections DisplayObject.stage et Stage.quality." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Utilisez plutôt DisplayObjectContainer.removeChild(nom_de_l'enfant). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Utilisez plutôt DisplayObjectContainer.removeChild(nom_de_l'enfant). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Cette fonction n'est plus une fonction globale, mais elle reste disponible comme méthode des classes TimerEvent, MouseEvent et KeyboardEvent." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Pour plus d'informations, consultez Video.attachNetStream, Video.attachCamera." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Utilisez la classe URLLoader pour le chargement et le passage du résultat à StyleSheet.parseCSS()" );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "En ActionScript 3.0, toutes les classes sont enregistrées par défaut.  Si vous utilisez le format AMF, reportez-vous à la section flash.utils.registerClassAlias()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Utilisez les propriétés d'accès (fonctions get/set) ou la classe flash.utils.Proxy pour obtenir des fonctionnalités similaires." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Utilisez les propriétés d'accès (fonctions get/set) ou la classe flash.utils.Proxy pour obtenir des fonctionnalités similaires." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Pour plus d'informations, consultez la section MovieClip.loadMovie()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Pour plus d'informations, consultez la section MovieClip.loadMovieNum()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Pour plus d'informations, consultez la section Loader.load()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Pour plus d'informations, consultez la section Loader.load()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Utilisez la classe SWF pour créer des sons à partir de la bibliothèque." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onStatus, "En ActionScript 3.0, le gestionnaire d'événement onStatus n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'status', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onID3, "En ActionScript 3.0, le gestionnaire d'événement onID3 n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'id3', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onLoad, "En ActionScript 3.0, le gestionnaire d'événement onLoad n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'load', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onSoundComplete, "En ActionScript 3.0, le gestionnaire d'événement onSoundComplete n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'soundComplete', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onSetFocus, "En ActionScript 3.0, le gestionnaire d'événement onSetFocus n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'focusIn', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onResize, "En ActionScript 3.0, le gestionnaire d'événement onResize n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'resize', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onChanged, "En ActionScript 3.0, le gestionnaire d'événement onChanged n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'change', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onKillFocus, "En ActionScript 3.0, le gestionnaire d'événement onKillFocus n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'focusOut', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onScroller, "En ActionScript 3.0, le gestionnaire d'événement onScroller n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'scroll', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onMouseDown, "En ActionScript 3.0, le gestionnaire d'événement onMouseDown n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseDown', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onMouseUp, "En ActionScript 3.0, le gestionnaire d'événement onMouseUp n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseUp', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onMouseMove, "En ActionScript 3.0, le gestionnaire d'événement onMouseMove n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseMove', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onMouseWheel, "En ActionScript 3.0, le gestionnaire d'événement onMouseWheel n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseWheel', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onKeyDown, "En ActionScript 3.0, le gestionnaire d'événement onKeyDown n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'keyDown', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onKeyUp, "En ActionScript 3.0, le gestionnaire d'événement onKeyUp n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'keyUp', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onData, "En ActionScript 3.0, le gestionnaire d'événement onData n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'data', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "En ActionScript 3.0, le gestionnaire d'événement onHTTPStatus n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'httpStatus', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onDragOut, "En ActionScript 3.0, le gestionnaire d'événement onDragOut n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseOut', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onDragOver, "En ActionScript 3.0, le gestionnaire d'événement onDragOver n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseOver', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onPress, "En ActionScript 3.0, le gestionnaire d'événement onPress n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseDown', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onRelease, "En ActionScript 3.0, le gestionnaire d'événement onRelease n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'click', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "En ActionScript 3.0, le gestionnaire d'événement onReleaseOutside n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseUp', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onRollOut, "En ActionScript 3.0, le gestionnaire d'événement onRollOut n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseOut', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onRollOver, "En ActionScript 3.0, le gestionnaire d'événement onRollOver n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseOver', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onActivity, "En ActionScript 3.0, le gestionnaire d'événement onActivity n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'activity', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onSelect, "En ActionScript 3.0, le gestionnaire d'événement onSelect n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'menuSelect', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onEnterFrame, "En ActionScript 3.0, le gestionnaire d'événement onEnterFrame n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'enterFrame', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onUnload, "En ActionScript 3.0, le gestionnaire d'événement onUnload n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'unload', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onLoadComplete, "En ActionScript 3.0, le gestionnaire d'événement onLoadComplete n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'load', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onLoadError, "En ActionScript 3.0, le gestionnaire d'événement onLoadError n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'error', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onLoadInit, "En ActionScript 3.0, le gestionnaire d'événement onLoadInit n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'init', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onLoadProgress, "En ActionScript 3.0, le gestionnaire d'événement onLoadProgress n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'progress', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onLoadStart, "En ActionScript 3.0, le gestionnaire d'événement onLoadStart n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'start', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onClose, "En ActionScript 3.0, le gestionnaire d'événement onClose n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'close', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onConnect, "En ActionScript 3.0, le gestionnaire d'événement onConnect n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'connect', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onXML, "onXML n'est pas automatiquement déclenché par Flash Player en ActionScript 3.0.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'xml', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Utilisez plutôt la propriété statique hasChildNodes." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "La classe XMLEvent est obsolète, et l'événement xml n'est plus distribué. Seul l'événement de données est distribué durant le chargement du fichier." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "La classe XMLDoc a été renommée XMLDocument." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Utilisez plutôt la propriété Accessibility.active." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Utilisez plutôt la constante ActivityEvent.ACTIVITY." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Utilisez plutôt DisplayObjectContainer.parent.getChildIndex. Voir l'aide à propos de la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Utilisez plutôt DisplayObjectContainer.parent.setChildIndex. Voir l'aide à propos de la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Utilisez plutôt DisplayObjectContainer.getChildAt. Voir l'aide à propos de la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Utilisez plutôt DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild ajoute toujours le nouvel enfant pour indexer DisplayObjectContainer.numChildren." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Utilisez plutôt la propriété ByteArray.bytesAvailable." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Utilisez plutôt la propriété ByteArray.position." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Utilisez plutôt la propriété ByteArray.position." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Utilisez plutôt la méthode Camera.getCamera()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Utilisez plutôt la propriété Camera.currentFPS." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Utilisez plutôt la propriété Camera.keyFrameInterval." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Utilisez plutôt la propriété Camera.loopback." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Utilisez plutôt la propriété ColorTransform.color." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Utilisez plutôt la propriété ColorTransform.color." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Utilisez plutôt la propriété Container.textSnapshot." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Utilisez plutôt la méthode ContextMenu.clone()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Utilisez plutôt la propriété ContextMenu.forwardAndBack." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Utilisez plutôt la méthode ContextMenuItem.clone()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Utilisez plutôt la propriété CustomActions.actionsList." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Utilisez plutôt la constante DataEvent.DATA." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Utilisez plutôt la propriété DisplayObject.scaleX." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Utilisez plutôt la propriété DisplayObject.scaleX." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Utilisez plutôt la propriété DisplayObject.scaleY." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Utilisez plutôt la propriété DisplayObject.scaleY." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Utilisez plutôt la propriété DisplayObject.mouseX." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Utilisez plutôt la propriété DisplayObject.mouseX." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Utilisez plutôt la propriété DisplayObject.mouseY." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Utilisez plutôt la propriété DisplayObject.mouseY." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Utilisez plutôt la propriété DisplayObject.name." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Utilisez plutôt la propriété DisplayObject.parent." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Utilisez plutôt la propriété DisplayObject.mask." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Utilisez plutôt la propriété DisplayObject.visible." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Utilisez plutôt la propriété DisplayObject.x." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Utilisez plutôt la propriété DisplayObject.y." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Utilisez plutôt la propriété DisplayObject.rotation." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Utilisez plutôt la propriété DisplayObject.alpha." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Utilisez plutôt la propriété DisplayObject.width." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Utilisez plutôt la propriété DisplayObject.height." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Utilisez plutôt la propriété ExternalInterface.available." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Utilisez plutôt la constante ErrorEvent.ERROR." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Utilisez plutôt la propriété Event.isDefaultPrevented." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Utilisez plutôt la constante Event.ACTIVATE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Utilisez plutôt la constante Event.ADDED." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Utilisez plutôt la constante Event.CANCEL." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Utilisez plutôt la constante Event.CHANGE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Utilisez plutôt la constante Event.CLOSE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Utilisez plutôt la constante Event.COMPLETE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Utilisez plutôt la constante Event.CONNECT." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Utilisez plutôt la constante Event.DEACTIVATE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Utilisez plutôt la constante Event.ENTER_FRAME." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Utilisez plutôt la constante Event.ID3." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Utilisez plutôt la constante Event.INIT." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Utilisez plutôt la constante Event.MOUSE_LEAVE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Utilisez plutôt la constante Event.OPEN." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Utilisez plutôt la constante Event.REMOVED." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Utilisez plutôt la constante Event.RENDER." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Utilisez plutôt la constante Event.RESIZE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Utilisez plutôt la constante Event.SCROLL." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Utilisez plutôt la constante Event.SELECT." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Utilisez plutôt la constante Event.SOUND_COMPLETE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Utilisez plutôt la constante Event.TAB_CHILDREN_CHANGE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Utilisez plutôt la constante Event.TAB_ENABLED_CHANGE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Utilisez plutôt la constante Event.TAB_INDEX_CHANGE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Utilisez plutôt la constante Event.UNLOAD." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Utilisez plutôt la constante FocusEvent.FOCUS_IN." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Utilisez plutôt la constante FocusEvent.FOCUS_OUT." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Utilisez plutôt la constante FocusEvent.KEY_FOCUS_CHANGE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Utilisez plutôt la constante FocusEvent.MOUSE_FOCUS_CHANGE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Utilisez plutôt la méthode Graphics.beginBitmapFill()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Utilisez plutôt la propriété BitmapFilter.quality." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Utilisez plutôt KeyboardEvent.charCode." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Utilisez plutôt KeyboardEvent.keyCode." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Pour plus d'informations, consultez la classe KeyboardEvent." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Pour plus d'informations, consultez KeyboardEvent.ctrlKey, KeyboardEvent.shiftKey et KeyboardEvent.altKey." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Utilisez plutôt la constante PAGE_DOWN." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Utilisez plutôt la constante PAGE_UP." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Utilisez plutôt la constante DELETE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Utilisez plutôt la constante CAPS_LOCK." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Utilisez plutôt l'une des constantes NUMPAD_0 à NUMPAD_9." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Utilisez plutôt la propriété InteractiveObject.focusRect." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Utilisez plutôt la propriété InteractiveObject.contextMenu." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Utilisez plutôt la propriété KeyboardEvent.charCode." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Utilisez plutôt la propriété KeyboardEvent.keyCode." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Utilisez plutôt la propriété Loader.contentLoaderInfo." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Utilisez plutôt la propriété LoaderInfo.loaderURL." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Utilisez plutôt la propriété LocalConnection.domain." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Utilisez plutôt la propriété MenuEvent.contextMenuOwner." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Utilisez plutôt la méthode Microphone.getMicrophone()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Si le nom de la sous-classe de MovieClip est A, utilisez var mc= new A(); addChild(mc). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Utilisez var mc= new MovieClip(); addChild(mc). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Utilisez var tf= new TextField(); addChild(mc). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Utilisez Container.removeChild(childName). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Utilisez var l = new Loader(); addChild(l); l.load(new URLRequest(\"votre url\"));. Pour plus d'informations, consultez les classes Loader et DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Utilisez plutôt DisplayObjectContainer.removeChild(nom_de_l'enfant). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Utilisez plutôt DisplayObjectContainer.removeChild(nom_de_l'enfant). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Utilisez plutôt DisplayObjectContainer.parent.getChildIndex. Pour plus d'informations, consultez la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Utilisez plutôt DisplayObjectContainer.parent.setChildIndex. Pour plus d'informations, consultez la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Utilisez plutôt DisplayObjectContainer.getChildAt. Pour plus d'informations, consultez la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Utilisez plutôt DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild ajoute toujours le nouvel enfant pour indexer DisplayObjectContainer.numChildren." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Pour plus d'informations, consultez la section DisplayObject.addChild." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Pour plus d'informations, consultez LoaderInfo.bytesLoaded et la classe Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Pour plus d'informations, consultez LoaderInfo.bytesTotal et la classe Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Pour une fonctionnalité équivalente, consultez flash.net.URLLoader. Le package flash.net contient aussi les fonctions de niveau package navigateToURL() et sendToURL()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Pour plus d'informations, consultez LoaderInfo.url et la classe Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Pour plus d'informations, consultez LoaderInfo.url et la classe Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Utilisez plutôt la propriété MovieClip.mask." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Pour plus d'informations, consultez LoaderInfo.swfVersion et la classe Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Utilisez plutôt la propriété MovieClip.currentFrame." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Utilisez plutôt la propriété MovieClip.framesLoaded." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Utilisez plutôt la propriété MovieClip.totalFrames." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Pour plus d'informations, consultez la section displayObjectInstance.root." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Pour plus d'informations, consultez la section displayObjectInstance.root." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Utilisez plutôt la propriété statique flash.media.SoundMixer.bufferTime." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Utilisez plutôt la propriété NetStream.bufferTime." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Utilisez plutôt la propriété NetStream.currentFPS." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Utilisez plutôt la propriété NetStream.videoCodec." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Utilisez plutôt la propriété NetStream.audioCodec." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Utilisez plutôt la propriété ProductManager.isInstalled." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Utilisez plutôt la propriété ProductManager.installedVersion." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Utilisez plutôt la propriété ProductManager.isRunning." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Utilisez plutôt la méthode Point.add()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Utilisez plutôt la propriété Proxy.deleteDescendants." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Utilisez plutôt la méthode heapDump()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Utilisez plutôt la propriété ProgressEvent.bytesLoaded." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Utilisez plutôt la propriété ProgressEvent.bytesTotal." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Utilisez plutôt la propriété Rectangle.isEmpty." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Utilisez plutôt la propriété SoundTransform.pan." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Utilisez plutôt la propriété Sockect.bytesAvailable." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Utilisez plutôt la propriété SharedObject.size." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Utilisez plutôt la propriété SharedObject.fps." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Cet élément n'est plus pris en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Utilisez plutôt la méthode Sprite.constructChildren()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Utilisez plutôt la propriété Sprite.dropTarget." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Utilisez plutôt la propriété Stage.focus." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Utilisez plutôt la propriété Stage.focus." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Utilisez plutôt la propriété Stage.showDefaultContextMenu." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Utilisez plutôt la propriété StyleSheet.styleNames." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Utilisez une instance de URLLoader pour charger les données de StyleSheet, puis passez les données du composant Loader à la méthode StyleSheet.parseCSS. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Utilisez une instance de URLLoader pour charger les données de StyleSheet, puis passez les données du composant Loader à la méthode StyleSheet.parseCSS. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Utilisez une instance de URLLoader pour charger les données de StyleSheet, puis passez les données du composant Loader à la méthode StyleSheet.parseCSS. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Utilisez une instance de URLLoader pour charger les données de StyleSheet, puis passez les données du composant Loader à la méthode StyleSheet.parseCSS. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Utilisez une instance de URLLoader pour charger les données de StyleSheet, puis passez les données du composant Loader à la méthode StyleSheet.parseCSS. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Utilisez plutôt la propriété IME.enabled." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Utilisez plutôt la propriété IME.enabled." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Utilisez plutôt la propriété IME.instance." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Utilisez plutôt la propriété IME.conversionMode." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Utilisez plutôt la propriété IME.conversionMode." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Utilisez plutôt la propriété System.vmVersion." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Utilisez plutôt la propriété SWFLoaderInfo.swfVersion." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Utilisez plutôt la propriété SWFLoaderInfo.actionScriptVersion." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Utilisez plutôt la propriété TextField.defaultTextFormat." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Utilisez plutôt la propriété TextField.defaultTextFormat." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Utilisez plutôt DisplayObjectContainer.parent.getChildIndex. Pour plus d'informations, consultez la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Utilisez plutôt DisplayObjectContainer.parent.setChildIndex. Pour plus d'informations, consultez la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Utilisez plutôt DisplayObjectContainer.getChildAt. Pour plus d'informations, consultez la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Utilisez plutôt DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild ajoute toujours le nouvel enfant pour indexer DisplayObjectContainer.numChildren." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Utilisez plutôt la méthode TextField.replaceSelectedText()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Utilisez plutôt la méthode TextField.getLineIndexOfChar()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Utilisez plutôt la propriété TextField.selectionBeginIndex." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Utilisez plutôt la propriété TextField.selectionEndIndex." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Utilisez plutôt la propriété TextField.caretIndex." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Utilisez plutôt la méthode Font.enumerateFonts()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Utilisez plutôt la propriété TextField.maxScrollV." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Utilisez plutôt la propriété TextField.scrollH." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Utilisez plutôt la propriété TextField.maxScrollH." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Utilisez plutôt la propriété TextField.defaultTextFormat." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Créez plutôt un champ de texte provisoire et utilisez TextField.getLineMetrics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Utilisez plutôt la propriété TextSnapshot.charCount." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Utilisez plutôt la méthode navigateToURL() du package flash.net." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Utilisez plutôt la méthode sendToURL() du package flash.net." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Utilisez plutôt la propriété URLLoader.dataFormat." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Utilisez plutôt la propriété URLStream.bytesAvailable." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Cette propriété n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Utilisez plutôt la propriété URLRequest.applicationDomain." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Pour ajouter des en-têtes de requêtes, définissez la propriété URLRequest.requestHeaders comme tableau d'objets URLRequestHeader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Utilisez une instance de URLLoader pour charger le fichier XML, puis passez les données de URLLoader au constructeur des XMLDocument. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Utilisez plutôt la méthode sendToURL() du package flash.net." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Définissez une propriété postData pour l'objet URLRequest et utilisez-la avec un objet URLLoader pour charger le fichier XML.  Passez les données des objets URLLoader aux constructeurs des XMLDocument. Pour plus d'informations, consultez les classes URLLoader, URLRequest et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Utilisez une instance de URLLoader pour charger le fichier XML, puis passez les données de URLLoader au constructeur des XMLDocument. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Pour ajouter des en-têtes de requêtes, définissez la propriété URLRequest.requestHeaders comme tableau d'objets URLRequestHeader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Pour plus d'informations, consultez URLLoader.bytesLoaded et la classe URLLoader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Pour plus d'informations, consultez URLLoader.bytesTotal et la classe URLLoader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Utilisez une instance de URLLoader pour charger le fichier XML, puis passez les données de URLLoader à la méthode StyleSheet.parseCSS. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Utilisez plutôt la propriété URLRequest.contentType." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Vérifiez plutôt les éventuelles exceptions émises par le constructeur de XMLDocument ou par la méthode XMLDocument.parseXML. Pour plus d'informations, consultez la section XMLDocument." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Button, "La classe Button a été renommée SimpleButton." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Container, "La classe Container a été renommée DisplayObjectContainer.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Image, "La classe Image a été renommée BitmapData." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "La classe ImageFilter a été renommée BitmapFilter.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "La classe ImageSprite a été renommée Bitmap." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "La classe ImageLoaderInfo a été renommée BitmapLoaderInfo.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "La classe ImeEvent a été renommée IMEEvent.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Key, "La classe Key a été renommée Keyboard." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "La classe LineMetrics a été renommée TextLineMetrics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Pour plus d'informations, consultez la classe URLVariables,les propriétés URLRequest.urlVariables et URLRequest.postData, ainsi que la propriété URLLoader.dataFormat." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "La classe MenuEvent a été renommée ContextMenuEvent.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "La classe SystemCapabilities a été renommée Capabilities." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Utilisez plutôt la propriété TextField.getLineMetrics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Button, "La classe Button a été renommée SimpleButton." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Container, "La classe Container a été renommée DisplayObjectContainer.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Image, "La classe Image a été renommée BitmapData." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "La classe ImageFilter a été renommée BitmapFilter.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "La classe ImageSprite a été renommée Bitmap." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "La classe ImageLoaderInfo a été renommée BitmapLoaderInfo.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "La classe ImeEvent a été renommée IMEEvent.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Key, "La classe Key a été renommée Keyboard." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "La classe LineMetrics a été renommée TextLineMetrics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Pour plus d'informations, consultez la classe URLVariables,les propriétés URLRequest.urlVariables et URLRequest.postData, ainsi que la propriété URLLoader.dataFormat." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "La classe MenuEvent a été renommée ContextMenuEvent.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "La classe SystemCapabilities a été renommée Capabilities." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Utilisez plutôt la propriété TextField.getLineMetrics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Pour plus d'informations, consultez l'aide de la classe Proxy, qui offre des fonctionnalités similaires." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Utilisez plutôt la méthode XMLUI.getProperty." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Utilisez plutôt la méthode XMLUI.setProperty." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Utilisez plutôt la propriété DisplayObject.accessibilityProperties." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Utilisez plutôt la propriété DisplayObject.scale9Grid." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Utilisez plutôt la méthode Graphics.drawOval." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Utilisez plutôt la propriété NetConnection.connected." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Utilisez plutôt la propriété Socket.connected." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Utilisez plutôt la propriété URLStream.connected." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Utilisez plutôt la propriété SyncEvent.changeList." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Utilisez plutôt la propriété TextField.scrollV." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Utilisez plutôt la propriété TextField.bottomScrollV." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Utilisez plutôt la constante BitmapDataChannel.RED." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Utilisez plutôt la constante BitmapDataChannel.GREEN." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Utilisez plutôt la constante BitmapDataChannel.BLUE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Utilisez plutôt la constante BitmapDataChannel.ALPHA." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Utilisez plutôt l'opérateur is." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Utilisez plutôt la méthode flash.system.Security.showSettings." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Utilisez plutôt la propriété System.useCodePage." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Utilisez plutôt la classe flash.events.EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Utilisez plutôt la propriété statique flash.media.SoundMixer.bufferTime." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Créez plutôt une nouvelle instance de la classe de symboles de bitmap de la bibliothèque, par ex. new myBitmapName()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Pour plus d'informations, consultez la section Loader.load()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "La classe MovieClipLoader a été remplacée par la classe flash.display.Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "La classe MovieClipLoader a été remplacée par la classe flash.display.Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Utilisez plutôt la constante flash.system.IMEConversionMode.ALPHANUMERIC_FULL." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Utilisez plutôt la constante flash.system.IMEConversionMode.ALPHANUMERIC_HALF." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Utilisez plutôt la constante flash.system.IMEConversionMode.CHINESE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Utilisez plutôt la constante flash.system.IMEConversionMode.JAPANESE_HIRAGANA." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Utilisez plutôt la constante flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Utilisez plutôt la constante flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Utilisez plutôt la constante flash.system.IMEConversionMode.KOREAN." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Utilisez plutôt la constante flash.system.IMEConversionMode.UNKNOWN." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onCancel, "En ActionScript 3.0, le gestionnaire d'événement onCancel n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener (cancel, onCancel)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Il n'y a pas de remplacement direct. La méthode willTrigger() permet de détecter si des objets d'écoute ont été enregistrés." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onIMEComposition, "En ActionScript 3.0, le gestionnaire d'événement onIMEComposition n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( imeComposition, handlerName)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Pour plus d'informations, consultez LoaderInfo.url et la classe Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Utilisez plutôt la méthode getFullYear()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Utilisez plutôt la méthode setFullYear()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Utilisez plutôt la méthode getUTCFullYear()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Utilisez plutôt la propriété rate." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Selection, "La classe Selection a été supprimée. Pour plus d'informations, consultez la méthode addEventListener de la classe dont vous voulez recevoir des informations sur la sélection." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Selection, "La classe Selection a été supprimée. Pour plus d'informations, consultez la méthode addEventListener de la classe dont vous voulez recevoir des informations sur la sélection." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Utilisez plutôt la propriété gain." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Les valeurs de couleurs peuvent être affectées directement à l'aide du constructeur ou des propriétés de la classe ColorTransform." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Les valeurs de couleurs peuvent être affectées directement à l'aide du constructeur ou des propriétés de la classe ColorTransform." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Consultez l'aide pour les propriétés relatives au focus de la classe flash.display.InteractiveObject." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Consultez la méthode flash.display.Graphics.beginBitmapFill dans l'aide." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Consultez la méthode flash.display.DisplayObject.hitTestObject() dans l'aide." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Consultez la méthode addChild() dans l'aide." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Utilisez plutôt la méthode load()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Pour contrôler l'amplitude d'un canal son, utilisez flash.media.SoundChannel.leftPeak et flash.media.SoundChannel.rightPeak." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Utilisez plutôt la propriété soundTransform." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Utilisez plutôt la propriété SoundTransform.pan." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Utilisez plutôt la propriété SoundTransform.pan." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Utilisez plutôt la propriété bytesLoaded." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Utilisez plutôt la propriété bytesTotal." );
        warningConstantsFR[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Utilisation inefficace de += dans un TextField." );
        warningConstantsFR[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "L'ajout de texte à la fin d'un champ texte TextField avec += est beaucoup plus lent que l'utilisation de la méthode TextField.appendText()." );
        warningConstantsFR[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Il est possible que des parenthèses soient manquantes." );
        warningConstantsFR[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Valeur de fonction utilisée alors qu'une valeur de type %s est attendue.  Il semble que des parenthèses () sont absentes après cette référence à une fonction." );
        warningConstantsFR[index++] = new AscWarning(kWarning_InstanceOfChanges, "Utilisation de l'opérateur instanceof." );
        warningConstantsFR[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "L'opérateur instanceof est déprécié, utilisez plutôt l'opérateur is." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "Le gestionnaire d'événements allowDomain() est désormais une méthode standard, plutôt qu'un rappel d'événement. Pour plus d'informations, consultez la nouvelle méthode LocalConnection.allowDomain." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "Le gestionnaire d'événements allowInsecureDomain() est désormais une méthode standard, plutôt qu'un rappel d'événement. Pour plus d'informations, consultez la nouvelle méthode LocalConnection.allowInsecureDomain." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_call, "la méthode globale call() n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Color, "La classe Color a été supprimée. Utilisez la classe flash.geom.ColorTransform pour obtenir des fonctionnalités similaires." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Color, "La classe Color a été supprimée. Utilisez la classe flash.geom.ColorTransform pour obtenir des fonctionnalités similaires." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "En ActionScript 3.0, les fichiers SWF utilisent toujours des règles de correspondances de domaines exactes." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_capabilities, "La classe capabilities a été renommée Capabilities." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_capabilities, "La classe capabilities a été renommée Capabilities." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onComplete, "En ActionScript 3.0, le gestionnaire d'événement onComplete n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'complete', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onHTTPError, "En ActionScript 3.0, le gestionnaire d'événement onHTTPError n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'httpError', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onIOError, "En ActionScript 3.0, le gestionnaire d'événement onIOError n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'ioError', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onProgress, "En ActionScript 3.0, le gestionnaire d'événement onProgress n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'progress', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onSecurityError, "En ActionScript 3.0, le gestionnaire d'événement onSecurityError n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'securityError', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onOpen, "En ActionScript 3.0, le gestionnaire d'événement onOpen n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'open', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Utilisation possible de la classe XML d'ActionScript 2.0." );
        warningConstantsFR[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Problème de migration : La classe XML d'ActionScript 2.0 a été renommée XMLDocument." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadDateCast, "L'opération de transtypage sur Date n'est pas valide." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) se comporte de la même façon que new Date().toString(). Pour convertir une valeur dans le type Date, utilisez l'expression 'x as Date' au lieu de Date(x)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ImportHidesClass, "L'importation d'un package du même nom que la classe actuelle masquera cet identifiant de classe dans cette portée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "L'importation d'un package du même nom que la classe actuelle masquera cet identifiant de classe dans cette portée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Plusieurs arguments du même nom." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Plusieurs arguments nommés '%s'.  Les références à cet argument seront toujours résolues avec le dernier défini." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Utilisez plutôt la méthode Rectangle.containsRect." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_eval, "Cette fonctionnalité a été supprimée." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Cette fonctionnalité a été remplacée par la propriété flash.system.Capabilities.version." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Cette fonctionnalité a été remplacée par la propriété flash.display.MovieClip.framesLoaded." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp__global, "La propriété _global a été supprimée.  Pour une fonctionnalité équivalente, utilisez un membre statique d'une classe." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadBoolAssignment, "Valeur non booléenne utilisée alors qu'une valeur booléenne est attendue." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "%s utilisée alors qu'une valeur booléenne est attendue.  L'expression va être transtypée comme booléenne." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadES3TypeProp, "Propriété inconnue." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s n'est pas une propriété reconnue de la classe dynamique %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Méthode inconnue." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s n'est pas une méthode reconnue de la classe dynamique %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Définition de variable dupliquée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Définition de variable dupliquée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Le nom de la définition est identique à celui d'un package importé.  Les références non qualifiées à ce nom seront toujours résolues sur le package et non sur la définition." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Le nom de la définition est identique à celui d'un package importé.  Les références non qualifiées à ce nom seront toujours résolues sur le package et non sur la définition." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Tentative de suppression d'une propriété fixe." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "Impossible de supprimer la propriété déclarée %s. Pour libérer la mémoire qui lui est réservée, définissez sa valeur comme null." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Deprecated, "Utilisation d’une définition déconseillée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Deprecated_specific, "L’utilisation de '%s' est déconseillée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedMessage, "Utilisation d’une définition déconseillée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Utilisation d’une définition déconseillée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "L’utilisation de '%s' est déconseillée.  Veuillez utiliser '%s'." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedSince, "Utilisation d’une définition déconseillée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "L’utilisation de '%s' est déconseillée depuis %s. Veuillez utiliser '%s'." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Utilisation d’une définition déconseillée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "L’utilisation de '%s' est déconseillée depuis %s." );
   }

   static final AscWarning[] warningConstantsIT= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsIT() 
   {
      int index=0;
        warningConstantsIT[index++] = new AscWarning(kWarning_NoTypeDecl, "Dichiarazione tipo mancante." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' non contiene una dichiarazione di tipo." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Confronto non logico con undefined.  Solo le variabili senza tipo (o del tipo *) possono essere undefined." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Le variabili del tipo %s non possono essere undefined. Il valore undefined verrà assegnato forzatamente al tipo %s prima del confronto." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "La funzione usata nell'espressione new restituisce un valore.  Il risultato sarà costituito dal valore restituito dalla funzione, anziché da una nuova istanza della funzione." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Problema relativo alla migrazione: il risultato di new %s sarà il valore restituito di %s, anziché una nuova istanza della funzione." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() senza argomenti restituisce false in ActionScript 3.0  mentre restituiva undefined in ActionScript 2.0." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Uso di Boolean() senza argomenti." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NumberFromStringChanges, "In ActionScript 3.0, lo spazio vuoto viene ignorato e '' restituisce 0. Number() restituisce NaN in ActionScript 2.0 quando il parametro è '' o contiene spazio vuoto." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Problema relativo alla migrazione: quando la funzione Number('') viene chiamata con un argomento String vuoto, restituisce 0 in ActionScript 3.0 e NaN in ActionScript 2.0." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Il formato Array.toString() è cambiato." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Problema relativo alla migrazione: il modo in cui Array.toString() gestisce gli elementi null e undefined è cambiato." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Proprietà ActionScript 2.0 non supportata." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Problema relativo alla migrazione: la proprietà %s non è più supportata.  %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Funzione ActionScript 2.0 non supportata." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Problema relativo alla migrazione: il metodo %s non è più supportato.  %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve non è più supportato." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Problema relativo alla migrazione: __resolve non è più supportato.  Utilizzare la nuova classe Proxy per ottenere una funzionalità simile." );
        warningConstantsIT[index++] = new AscWarning(kWarning_LevelNotSupported, "_level non è più supportato. Per ulteriori informazioni, vedere il pacchetto flash.display." );
        warningConstantsIT[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Problema relativo alla migrazione: _level non è più supportato. Per ulteriori informazioni, vedere il pacchetto flash.display." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ClassIsSealed, "La classe è chiusa.  Non è possibile aggiungervi dinamicamente dei membri." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Problema relativo alla migrazione: %s non è una classe dinamica.  Non è possibile aggiungervi dinamicamente delle istanze." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Modifica dell'assegnazione dell'area di validità per la parola chiave this. I metodi di classe estratti da un'istanza di una classe risolveranno sempre this a tale istanza.  In ActionScript 2.0, this viene cercato dinamicamente in base alla posizione da cui viene richiamato il metodo." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Problema relativo alla migrazione: il metodo %s ha un comportamento differente in ActionScript 3.0 perché è stata modificata l'assegnazione dell'area di validità per la parola chiave this. Per ulteriori informazioni, vedere la voce relativa all'avvertenza 1083." );
        warningConstantsIT[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Dichiarazione namespace mancante (ad es. variabile non definita come public, private, ecc.)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "L'area di validità di %s verrà impostata sul namespace predefinito: %s internal.  Non sarà visibile al di fuori di questo pacchetto." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 esegue un'iterazione delle proprietà di un oggetto all'interno di un'istruzione \"for x in target\" in ordine casuale." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Problema relativo alla migrazione: ActionScript 3.0 esegue un'iterazione delle proprietà di un oggetto all'interno di un'istruzione \"for x in target\" in ordine casuale." );
        warningConstantsIT[index++] = new AscWarning(kWarning_InternalError, "Errore interno nel compilatore." );
        warningConstantsIT[index++] = new AscWarning(kWarning_InternalError_specific, "Codice errore: %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler non è stato aggiunto come listener." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Problema relativo alla migrazione: %s" );
        warningConstantsIT[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Un valore negativo diventa un valore positivo elevato quando viene assegnato al tipo di dati uint." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "È stato utilizzato un valore negativo in una posizione in cui era previsto un valore uint (non negativo)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadNullComparision, "Confronto non logico con null." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Confronto non logico con null.  Le variabili del tipo %s non possono essere null." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadNaNComparision, "Confronto non logico con NaN. Qualunque operazione di confronto con NaN restituisce false perché NaN != NaN." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Confronto non logico con NaN.  Questa istruzione restituisce sempre false." );
        warningConstantsIT[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Assegnazione all'interno di un'istruzione condizionale." );
        warningConstantsIT[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Assegnazione all'interno di un'istruzione condizionale.  Si voleva specificare == invece di =?" );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadNullAssignment, "Assegnazione null impossibile." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "È stato utilizzato null ma era previsto un valore %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NoConstructor, "Funzione di costruzione mancante." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NoConstructor_specific, "Non è stata specificata una funzione di costruzione per la classe %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Istruzione vuota." );
        warningConstantsIT[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Istruzione vuota trovata nel punto in cui è previsto un blocco di codice. Avete digitato ';' per sbaglio?" );
        warningConstantsIT[index++] = new AscWarning(kWarning_ConstNotInitialized, "Costante non inizializzata." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "La costante non è stata inizializzata." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadArrayCast, "Possibile operazione di inserimento in Array non valida." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) si comporta allo stesso modo del nuovo Array(x).  Per inserire un valore nel tipo Array, utilizzare l'espressione \"x as Array\" invece di Array(x)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "L'istruzione super() non è stata chiamata all'interno della funzione di costruzione." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "L'istruzione super() verrà eseguita prima di accedere a questa funzione di costruzione.  Se si desidera controllare in modo esplicito l'esecuzione di super(), aggiungere una chiamata a tale istruzione all'interno della funzione di costruzione." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_version, "Utilizzare Capabilities.version." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Per ulteriori informazioni, vedere InteractiveObject.focusRect." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Highquality, "Per ulteriori informazioni, vedere Stage.quality." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Per ulteriori informazioni, vedere Stage.quality." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Per ulteriori informazioni, vedere Stage.quality." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Quality, "Per ulteriori informazioni, vedere Stage.quality." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Utilizzare invece la proprietà statica flash.media.SoundMixer.bufferTime." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Questa funzionalità non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Per ulteriori informazioni, vedere LoaderInfo.url." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Questa funzionalità non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_NewLine, "Utilizzare '\n' come newline (nuova riga)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Per ulteriori informazioni, vedere textField.maxScroll." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Level, "Il concetto di livelli non esiste in ActionScript 3.0, che invece fornisce l'accesso diretto all'elenco di visualizzazione. Per informazioni dettagliate, vedere il pacchetto flash.display." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Parent, "Utilizzare invece la proprietà parent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Root, "Questa proprietà è stata rimossa. L'equivalente più simile è Stage, che svolge la funzione di root (livello principale) dell'elenco di visualizzazione di ActionScript 3.0." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Provare invece a dichiarare caller come argomento della funzione." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Questa funzionalità non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Utilizzare invece la proprietà parent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Questa funzionalità non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Per ulteriori informazioni, vedere Sprite.hitArea." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Scroll, "Per ulteriori informazioni, vedere le proprietà scrollH e scrollV della classe flash.text.TextField." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Utilizzare gli oggetti MovieClip direttamente come argomenti anziché come percorsi." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Per ulteriori informazioni, vedere Video.videoHeight." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Per ulteriori informazioni, vedere Video.videoWidth." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp__Proto__, "Per ulteriori informazioni, vedere l'elemento obsoleto __proto__." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Stage, "Per ulteriori informazioni, vedere DisplayObject.stage." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Utilizzare invece il metodo registerClass() del pacchetto flash.net." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_random, "Utilizzare Math.random()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_chr, "Utilizzare String.fromCharCode()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Utilizzare String.fromCharCode()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ord, "Utilizzare String.charCodeAt()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_mbord, "Utilizzare String.charCodeAt()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_substring, "Utilizzare invece il metodo String.substr." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Utilizzare invece il metodo String.substr." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_length, "Utilizzare la proprietà length dell'argomento." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_mblength, "Utilizzare la proprietà length dell'argomento." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Per ulteriori informazioni, vedere le modifiche apportate a ASnative." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Impostare le proprietà direttamente nell'istanza utilizzando come alternativa la notazione del punto (.)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Accedere direttamente alla proprietà mediante la notazione del punto (.)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Impostare le proprietà direttamente nell'istanza utilizzando come alternativa la notazione del punto (.)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Per ulteriori informazioni, vedere TextEvent.LINK e addEventListener()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Questo metodo è stato spostato nel pacchetto flash.utils." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Sostituito dalla nuova funzione di costruzione della classe MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Spostato nel pacchetto flash.system package. Vedere anche la classe flash.external.ExternalInterface per la comunicazione JavaScript/ActionScript." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_getURL, "Per una funzionalità equivalente, vedere flash.net.URLLoader.  Il pacchetto flash.net contiene anche le funzioni a livello di pacchetto navigateToURL() e sendToURL()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Per ulteriori informazioni, vedere MovieClip.gotoAndPlay()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Per ulteriori informazioni, vedere MovieClip.gotoAndStop()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_play, "Per ulteriori informazioni, vedere MovieClip.play()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_print, "Per ulteriori informazioni, vedere PrintJob.start()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Per ulteriori informazioni, vedere PrintJob." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Per ulteriori informazioni, vedere PrintJob." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_printNum, "Per ulteriori informazioni, vedere PrintJob." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Utilizzare Container.removeChild(childName). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Spostato nel pacchetto flash.utils package.  Considerare l'uso della classe Timer come alternativa." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Per ulteriori informazioni, vedere MovieClip.nextFrame()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Per ulteriori informazioni, vedere MovieClip.startDrag()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_stop, "Per ulteriori informazioni, vedere MovieClip.stop()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Per ulteriori informazioni, vedere Sound.stopAllSounds()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Per ulteriori informazioni, vedere MovieClip.stopDrag()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Utilizzare invece l'operatore punto (.) o l'istruzione with." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Per ulteriori informazioni, vedere DisplayObject.stage e Stage.quality." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Utilizzare DisplayObjectContainer.removeChild(childName). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Utilizzare DisplayObjectContainer.removeChild(childName). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Questa funzione non è più di tipo globale, ma è ancora disponibile come metodo delle classi TimerEvent, MouseEvent e KeyboardEvent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Per ulteriori informazioni, vedere Video.attachNetStream e Video.attachCamera." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Utilizzare la classe URLLoader per eseguire il caricamento e passare il risultato a StyleSheet.parseCSS()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "In ActionScript 3.0, tutte le classi sono registrate per impostazione predefinita.  Se si usa AMF, vedere flash.utils.registerClassAlias() per ulteriori informazioni." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Utilizzare le proprietà accessor (funzioni get/set) o la classe flash.utils.Proxy per ottenere una funzionalità simile." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Utilizzare le proprietà accessor (funzioni get/set) o la classe flash.utils.Proxy per ottenere una funzionalità simile." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Per ulteriori informazioni, vedere MovieClip.loadMovie()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Per ulteriori informazioni, vedere MovieClip.loadMovieNum()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Per ulteriori informazioni, vedere Loader.load()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Per ulteriori informazioni, vedere Loader.load()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Utilizzare la classe SWF per creare dei suoni dalla libreria." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onStatus, "In ActionScript 3.0, il gestore di eventi onStatus non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'status', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onID3, "In ActionScript 3.0, il gestore di eventi onID3 non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'id3', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onLoad, "In ActionScript 3.0, il gestore di eventi onLoad non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'load', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onSoundComplete, "In ActionScript 3.0, il gestore di eventi onSoundComplete non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'soundComplete', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onSetFocus, "In ActionScript 3.0, il gestore di eventi onSetFocus non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'focusIn', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onResize, "In ActionScript 3.0, il gestore di eventi onResize non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'resize', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onChanged, "In ActionScript 3.0, il gestore di eventi onChanged non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'change', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onKillFocus, "In ActionScript 3.0, il gestore di eventi onKillFocus non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'focusOut', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onScroller, "In ActionScript 3.0, il gestore di eventi onScroller non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'scroll', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onMouseDown, "In ActionScript 3.0, il gestore di eventi onMouseDown non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseDown', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onMouseUp, "In ActionScript 3.0, il gestore di eventi onMouseUp non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseUp', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onMouseMove, "In ActionScript 3.0, il gestore di eventi onMouseMove non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseMove', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onMouseWheel, "In ActionScript 3.0, il gestore di eventi onMouseWheel non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseWheel', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onKeyDown, "In ActionScript 3.0, il gestore di eventi onKeyDown non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'keyDown', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onKeyUp, "In ActionScript 3.0, il gestore di eventi onKeyUp non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'keyUp', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onData, "In ActionScript 3.0, il gestore di eventi onData non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'data', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "In ActionScript 3.0, il gestore di eventi onHTTPStatus non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'httpStatus', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onDragOut, "In ActionScript 3.0, il gestore di eventi onDragOut non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseOut', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onDragOver, "In ActionScript 3.0, il gestore di eventi onDragOver non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseOver', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onPress, "In ActionScript 3.0, il gestore di eventi onPress non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseDown', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onRelease, "In ActionScript 3.0, il gestore di eventi onRelease non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'click', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "In ActionScript 3.0, il gestore di eventi onReleaseOutside non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseUp', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onRollOut, "In ActionScript 3.0, il gestore di eventi onRollOut non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseOut', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onRollOver, "In ActionScript 3.0, il gestore di eventi onRollOver non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseOver', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onActivity, "In ActionScript 3.0, il gestore di eventi onActivity non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'activity', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onSelect, "In ActionScript 3.0, il gestore di eventi onSelect non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'menuSelect', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onEnterFrame, "In ActionScript 3.0, il gestore di eventi onEnterFrame non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'enterFrame', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onUnload, "In ActionScript 3.0, il gestore di eventi onUnload non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'unload', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onLoadComplete, "In ActionScript 3.0, il gestore di eventi onLoadComplete non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'load', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onLoadError, "In ActionScript 3.0, il gestore di eventi onLoadError non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'error', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onLoadInit, "In ActionScript 3.0, il gestore di eventi onLoadInit non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'init', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onLoadProgress, "In ActionScript 3.0, il gestore di eventi onLoadProgress non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'progress', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onLoadStart, "In ActionScript 3.0, il gestore di eventi onLoadStart non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'start', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onClose, "In ActionScript 3.0, il gestore di eventi onClose non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'close', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onConnect, "In ActionScript 3.0, il gestore di eventi onConnect non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'connect', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onXML, "In ActionScript 3.0, onXML non viene attivato automaticamente da Flash Player.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ('xml', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Utilizzare invece la proprietà hasChildNodes." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "La classe XMLEvent è obsoleta e l'evento xml non viene più inviato. Solo l'evento data viene inviato durante il caricamento del file." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "La classe XMLDoc è stata rinominata in XMLDocument." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Utilizzare invece la proprietà Accessibility.active." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Utilizzare invece la costante ActivityEvent.ACTIVITY." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Utilizzare DisplayObjectContainer.parent.getChildIndex. Consultare le informazioni relative alla classe DisplayObjectContainer, che viene estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Utilizzare DisplayObjectContainer.parent.setChildIndex. Consultare le informazioni relative alla classe DisplayObjectContainer, che viene estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Utilizzare DisplayObjectContainer.getChildAt. Consultare le informazioni relative alla classe DisplayObjectContainer, che viene estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Utilizzare invece DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild aggiunge sempre il nuovo elemento secondario all'indice DisplayObjectContainer.numChildren." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Utilizzare invece la proprietà ByteArray.bytesAvailable." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Utilizzare invece la proprietà ByteArray.position." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Utilizzare invece la proprietà ByteArray.position." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Utilizzare invece il metodo Camera.getCamera()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Utilizzare invece la proprietà Camera.currentFPS." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Utilizzare invece la proprietà Camera.keyFrameInterval." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Utilizzare invece la proprietà Camera.loopback." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Utilizzare invece la proprietà ColorTransform.color." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Utilizzare invece la proprietà ColorTransform.color." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Utilizzare invece la proprietà Container.textSnapshot." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Utilizzare invece il metodo ContextMenu.clone()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Utilizzare invece la proprietà ContextMenu.forwardAndBack." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Utilizzare invece il metodo ContextMenuItem.clone()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Utilizzare invece la proprietà CustomActions.actionsList." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Utilizzare invece la costante DataEvent.DATA." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Utilizzare invece la proprietà DisplayObject.scaleX." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Utilizzare invece la proprietà DisplayObject.scaleX." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Utilizzare invece la proprietà DisplayObject.scaleY." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Utilizzare invece la proprietà DisplayObject.scaleY." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Utilizzare invece la proprietà DisplayObject.mouseX." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Utilizzare invece la proprietà DisplayObject.mouseX." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Utilizzare invece la proprietà DisplayObject.mouseY." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Utilizzare invece la proprietà DisplayObject.mouseY." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Questa funzione non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Questa funzione non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Utilizzare invece la proprietà DisplayObject.name." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Utilizzare invece la proprietà DisplayObject.parent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Utilizzare invece la proprietà DisplayObject.mask." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Utilizzare invece la proprietà DisplayObject.visible." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Utilizzare invece la proprietà DisplayObject.x." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Utilizzare invece la proprietà DisplayObject.y." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Utilizzare invece la proprietà DisplayObject.rotation." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Utilizzare invece la proprietà DisplayObject.alpha." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Utilizzare invece la proprietà DisplayObject.width." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Utilizzare invece la proprietà DisplayObject.height." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Utilizzare invece la proprietà ExternalInterface.available." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Utilizzare invece la costante ErrorEvent.ERROR." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Utilizzare invece la proprietà Event.isDefaultPrevented." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Utilizzare invece la costante Event.ACTIVATE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Utilizzare invece la costante Event.ADDED." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Utilizzare invece la costante Event.CANCEL." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Utilizzare invece la costante Event.CHANGE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Utilizzare invece la costante Event.CLOSE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Utilizzare invece la costante Event.COMPLETE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Utilizzare invece la costante Event.CONNECT." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Utilizzare invece la costante Event.DEACTIVATE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Utilizzare invece la costante Event.ENTER_FRAME." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Utilizzare invece la costante Event.ID3." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Utilizzare invece la costante Event.INIT." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Utilizzare invece la costante Event.MOUSE_LEAVE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Utilizzare invece la costante Event.OPEN." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Utilizzare invece la costante Event.REMOVED." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Utilizzare invece la costante Event.RENDER." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Utilizzare invece la costante Event.RESIZE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Utilizzare invece la costante Event.SCROLL." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Utilizzare invece la costante Event.SELECT." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Utilizzare invece la costante Event.SOUND_COMPLETE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Utilizzare invece la costante Event.TAB_CHILDREN_CHANGE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Utilizzare invece la costante Event.TAB_ENABLED_CHANGE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Utilizzare invece la costante Event.TAB_INDEX_CHANGE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Utilizzare invece la costante Event.UNLOAD." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Utilizzare invece la costante FocusEvent.FOCUS_IN." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Utilizzare invece la costante FocusEvent.FOCUS_OUT." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Utilizzare invece la costante FocusEvent.KEY_FOCUS_CHANGE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Utilizzare invece la costante FocusEvent.MOUSE_FOCUS_CHANGE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Utilizzare invece il metodo Graphics.beginBitmapFill()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Utilizzare invece la proprietà BitmapFilter.quality." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Utilizzare invece KeyboardEvent.charCode." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Utilizzare invece KeyboardEvent.keyCode." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Per ulteriori informazioni, vedere la classe KeyboardEvent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Per ulteriori informazioni, vedere KeyboardEvent.ctrlKey, KeyboardEvent.altKey e KeyboardEvent.shiftKey." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Utilizzare invece la costante PAGE_DOWN." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Utilizzare invece la costante PAGE_UP." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Utilizzare invece la costante DELETE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Utilizzare invece la costante CAPS_LOCK." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Utilizzare invece una delle costanti NUMPAD_0 -> NUMPAD_9." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Utilizzare invece la proprietà InteractiveObject.focusRect." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Utilizzare invece la proprietà InteractiveObject.contextMenu." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Utilizzare invece la proprietà KeyboardEvent.charCode." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Utilizzare invece la proprietà KeyboardEvent.keyCode." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Utilizzare invece la proprietà Loader.contentLoaderInfo." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Questa funzione non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Questa funzione non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Utilizzare invece la proprietà LoaderInfo.loaderURL." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Utilizzare invece la proprietà LocalConnection.domain." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Utilizzare invece la proprietà MenuEvent.contextMenuOwner." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Utilizzare invece il metodo Microphone.getMicrophone()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Se il nome della sottoclasse MovieClip è A, utilizzare var mc= new A(); addChild(mc). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Utilizzare var mc= new MovieClip(); addChild(mc). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Utilizzare var tf= new TextField(); addChild(mc). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Utilizzare Container.removeChild(childName). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Utilizzare var l = new Loader(); addChild(l); l.load(new URLRequest(\"url richiesto\"));. Per ulteriori informazioni, vedere le classi Loader e DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Utilizzare invece DisplayObjectContainer.removeChild(childName). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Utilizzare invece DisplayObjectContainer.removeChild(childName). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Utilizzare invece DisplayObjectContainer.parent.getChildIndex. Per ulteriori informazioni, vedere la classe DisplayObjectContainer, che è estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Utilizzare invece DisplayObjectContainer.parent.setChildIndex. Per ulteriori informazioni, vedere la classe DisplayObjectContainer, che è estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Utilizzare invece DisplayObjectContainer.getChildAt. Per ulteriori informazioni, vedere la classe DisplayObjectContainer, che è estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Utilizzare invece DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild aggiunge sempre il nuovo elemento secondario all'indice DisplayObjectContainer.numChildren." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Per ulteriori informazioni, vedere DisplayObject.addChild." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Per ulteriori informazioni, vedere le classi LoaderInfo.bytesLoaded e Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Per ulteriori informazioni, vedere le classi LoaderInfo.bytesTotal e Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Per una funzionalità equivalente, vedere flash.net.URLLoader.  Il pacchetto flash.net contiene anche le funzioni a livello di pacchetto navigateToURL() e sendToURL()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Per ulteriori informazioni, vedere le classi LoaderInfo.url e Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Per ulteriori informazioni, vedere le classi LoaderInfo.url e Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Utilizzare invece la proprietà MovieClip.mask." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Per ulteriori informazioni, vedere le classi LoaderInfo.swfVersion e Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Utilizzare invece la proprietà MovieClip.currentFrame." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Utilizzare invece la proprietà MovieClip.framesLoaded." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Utilizzare invece la proprietà MovieClip.totalFrames." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Per ulteriori informazioni, vedere displayObjectInstance.root." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Per ulteriori informazioni, vedere displayObjectInstance.root." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Utilizzare invece la proprietà statica flash.media.SoundMixer.bufferTime." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Utilizzare invece la proprietà NetStream.bufferTime." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Utilizzare invece la proprietà NetStream.currentFPS." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Utilizzare invece la proprietà NetStream.videoCodec." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Utilizzare invece la proprietà NetStream.audioCodec." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Utilizzare invece la proprietà ProductManager.isInstalled." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Utilizzare invece la proprietà ProductManager.installedVersion." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Utilizzare invece la proprietà ProductManager.isRunning." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Utilizzare invece il metodo Point.add()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Utilizzare invece la proprietà Proxy.deleteDescendants." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Utilizzare invece il metodo heapDump()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Utilizzare invece la proprietà ProgressEvent.bytesLoaded." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Utilizzare invece la proprietà ProgressEvent.bytesTotal." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Utilizzare invece la proprietà Rectangle.isEmpty." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Utilizzare invece la proprietà SoundTransform.pan." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Utilizzare invece la proprietà Sockect.bytesAvailable." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Utilizzare invece la proprietà SharedObject.size." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Utilizzare invece la proprietà SharedObject.fps." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Questo metodo non è più supportato." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Utilizzare invece il metodo Sprite.constructChildren()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Utilizzare invece la proprietà Sprite.dropTarget." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Utilizzare invece la proprietà Stage.focus." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Utilizzare invece la proprietà Stage.focus." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Utilizzare invece la proprietà Stage.showDefaultContextMenu." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Utilizzare invece la proprietà StyleSheet.styleNames." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Utilizzare un'istanza di URLLoader per caricare i dati StyleSheet, quindi passare i dati loader al metodo StyleSheet.parseCSS. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Utilizzare un'istanza di URLLoader per caricare i dati StyleSheet, quindi passare i dati loader al metodo StyleSheet.parseCSS. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Utilizzare un'istanza di URLLoader per caricare i dati StyleSheet, quindi passare i dati loader al metodo StyleSheet.parseCSS. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Utilizzare un'istanza di URLLoader per caricare i dati StyleSheet, quindi passare i dati loader al metodo StyleSheet.parseCSS. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Utilizzare un'istanza di URLLoader per caricare i dati StyleSheet, quindi passare i dati loader al metodo StyleSheet.parseCSS. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Utilizzare invece la proprietà IME.enabled." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Utilizzare invece la proprietà IME.enabled." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Utilizzare invece la proprietà IME.instance." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Utilizzare invece la proprietà IME.conversionMode." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Utilizzare invece la proprietà IME.conversionMode." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Utilizzare invece la proprietà System.vmVersion." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Utilizzare invece la proprietà SWFLoaderInfo.swfVersion." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Utilizzare invece la proprietà SWFLoaderInfo.actionScriptVersion." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Utilizzare invece la proprietà TextField.defaultTextFormat." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Utilizzare invece la proprietà TextField.defaultTextFormat." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Utilizzare invece DisplayObjectContainer.parent.getChildIndex. Per ulteriori informazioni, vedere la classe DisplayObjectContainer, che è estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Utilizzare invece DisplayObjectContainer.parent.setChildIndex. Per ulteriori informazioni, vedere la classe DisplayObjectContainer, che è estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Utilizzare invece DisplayObjectContainer.getChildAt. Per ulteriori informazioni, vedere la classe DisplayObjectContainer, che è estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Utilizzare invece DisplayObjectContainer.numChildren.  DisplayObjectContainer.addChild aggiunge sempre il nuovo elemento secondario all'indice DisplayObjectContainer.numChildren." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Utilizzare invece il metodo TextField.replaceSelectedText()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Utilizzare invece il metodo TextField.getLineIndexOfChar()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Utilizzare invece la proprietà TextField.selectionBeginIndex." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Utilizzare invece la proprietà TextField.selectionEndIndex." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Utilizzare invece la proprietà TextField.caretIndex." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Utilizzare invece il metodo Font.enumerateFonts()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Utilizzare invece la proprietà TextField.maxScrollV." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Utilizzare invece la proprietà TextField.scrollH." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Utilizzare invece la proprietà TextField.maxScrollH." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Utilizzare invece la proprietà TextField.defaultTextFormat." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Creare un TextField temporaneo e utilizzare invece TextField.getLineMetrics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Utilizzare invece la proprietà TextSnapshot.charCount." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Utilizzare invece il metodo navigateToURL() del pacchetto flash.net." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Utilizzare invece il metodo sendToURL() del pacchetto flash.net." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Utilizzare invece la proprietà URLLoader.dataFormat." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Utilizzare invece la proprietà URLStream.bytesAvailable." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Questa proprietà non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Utilizzare invece la proprietà URLRequest.applicationDomain." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Per aggiungere intestazioni di richiesta, impostare la proprietà URLRequest.requestHeaders su un array di oggetti URLRequestHeader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Utilizzare un'istanza di URLLoader per caricare il file XML, quindi quindi passare i dati URLLoader alla funzione di costruzione XMLDocument. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Utilizzare invece il metodo sendToURL() del pacchetto flash.net." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Impostare la proprietà postData di un oggetto URLRequest e utilizzarlo con un oggetto URLLoader per caricare il file XML.  Passare i dati URLLoader alla funzione di costruzione XMLDocument. Per ulteriori informazioni, vedere le classi URLLoader, URLRequest e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Utilizzare un'istanza di URLLoader per caricare il file XML, quindi quindi passare i dati URLLoader alla funzione di costruzione XMLDocument. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Per aggiungere intestazioni di richietsa, impostare la proprietà URLRequest.requestHeaders su un array di oggetti URLRequestHeader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Per ulteriori informazioni, vedere le classi URLLoader.bytesLoaded e URLLoader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Per ulteriori informazioni, vedere le classi URLLoader.bytesTotal e URLLoader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Utilizzare un'istanza di URLLoader per caricare il file XML, quindi passare i dati loader al metodo StyleSheet.parseCSS. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Utilizzare invece la proprietà URLRequest.contentType." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Verificare invece le eventuali eccezioni generate dalla funzione di costruzione XMLDocument o dal metodo XMLDocument.parseXML. Per ulteriori informazioni, vedere XMLDocument." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Button, "La classe Button è stata rinominata in SimpleButton." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Container, "La classe Container è stata rinominata in DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Image, "La classe Image è stata rinominata in BitmapData." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "La classe ImageFilter è stata rinominata in BitmapFilter." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "La classe ImageSprite è stata rinominata in Bitmap." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "La classe ImageLoaderInfo è stata rinominata in BitmapLoaderInfo." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "La classe ImeEvent è stata rinominata in IMEEvent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Key, "La classe Key è stata rinominata in Keyboard." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "La classe LineMetrics è stata rinominata in TextLineMetrics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Per ulteriori informazioni, vedere la classe URLVariables, le proprietà URLRequest.urlVariables e URLRequest.postData e la proprietà URLLoader.dataFormat." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "La classe MenuEvent è stata rinominata in ContextMenuEvent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "La classe SystemCapabilities è stata rinominata in Capabilities." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Utilizzare invece la proprietà TextField.getLineMetrics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Button, "La classe Button è stata rinominata in SimpleButton." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Container, "La classe Container è stata rinominata in DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Image, "La classe Image è stata rinominata in BitmapData." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "La classe ImageFilter è stata rinominata in BitmapFilter." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "La classe ImageSprite è stata rinominata in Bitmap." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "La classe ImageLoaderInfo è stata rinominata in BitmapLoaderInfo." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "La classe ImeEvent è stata rinominata in IMEEvent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Key, "La classe Key è stata rinominata in Keyboard." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "La classe LineMetrics è stata rinominata in TextLineMetrics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Per ulteriori informazioni, vedere la classe URLVariables, le proprietà URLRequest.urlVariables e URLRequest.postData e la proprietà URLLoader.dataFormat." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "La classe MenuEvent è stata rinominata in ContextMenuEvent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "La classe SystemCapabilities è stata rinominata in Capabilities." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Utilizzare invece la proprietà TextField.getLineMetrics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Per ulteriori informazioni, vedere la classe Proxy, che offre una funzionalità simile." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Utilizzare invece il metodo XMLUI.getProperty." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Utilizzare invece il metodo XMLUI.setProperty." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Utilizzare invece la proprietà DisplayObject.accessibilityProperties." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Utilizzare invece la proprietà DisplayObject.scale9Grid." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Utilizzare invece il metodo Graphics.drawOval." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Utilizzare invece la proprietà NetConnection.connected." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Utilizzare invece la proprietà Socket.connected." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Utilizzare invece la proprietà URLStream.connected." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Utilizzare invece la proprietà SyncEvent.changeList." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Utilizzare invece la proprietà TextField.scrollV." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Utilizzare invece la proprietà TextField.bottomScrollV." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Utilizzare invece la costante BitmapDataChannel.RED." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Utilizzare invece la costante BitmapDataChannel.GREEN." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Utilizzare invece la costante BitmapDataChannel.BLUE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Utilizzare invece la costante BitmapDataChannel.ALPHA." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Utilizzare invece l'operatore is." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Utilizzare invece il metodo flash.system.Security.showSettings." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Utilizzare invece la proprietà System.useCodePage." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Utilizzare invece la classe flash.events.EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Utilizzare invece la proprietà statica flash.media.SoundMixer.bufferTime." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Creare invece una nuova istanza della classe del simbolo bitmap della libreria, ad esempio new myBitmapName()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Per ulteriori informazioni, vedere Loader.load()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "La classe MovieClipLoader è stata sostituita dalla classe flash.display.Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "La classe MovieClipLoader è stata sostituita dalla classe flash.display.Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Utilizzare invece la costante flash.system.IMEConversionMode.ALPHANUMERIC_FULL." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Utilizzare invece la costante flash.system.IMEConversionMode.ALPHANUMERIC_HALF." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Utilizzare invece la costante flash.system.IMEConversionMode.CHINESE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Utilizzare invece la costante flash.system.IMEConversionMode.JAPANESE_HIRAGANA." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Utilizzare invece la costante flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Utilizzare invece la costante flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Utilizzare invece la costante flash.system.IMEConversionMode.KOREAN." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Utilizzare invece la costante flash.system.IMEConversionMode.UNKNOWN." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onCancel, "In ActionScript 3.0, il gestore di eventi onCancel non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( cancel, onCancel)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Non è disponibile un'alternativa diretta. È possibile utilizzare il metodo willTrigger() per specificare se sono stati registrati dei listener." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onIMEComposition, "In ActionScript 3.0, il gestore di eventi onIMEComposition non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( imeComposition, handlerName)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Per ulteriori informazioni, vedere le classi LoaderInfo.url e Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Utilizzare invece il metodo getFullYear()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Utilizzare invece il metodo setFullYear()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Utilizzare invece il metodo getUTCFullYear()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Utilizzare invece la proprietà rate." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Selection, "La classe Selection è stata rimossa. Per ulteriori informazioni, vedere il metodo addEventListener della classe dalla quale si desidera ottenere informazioni sulla selezione." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Selection, "La classe Selection è stata rimossa. Per ulteriori informazioni, vedere il metodo addEventListener della classe dalla quale si desidera ottenere informazioni sulla selezione." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Utilizzare invece la proprietà gain." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "I valori di colore possono essere assegnati direttamente mediante la funzione di costruzione o le proprietà della classe ColorTransform." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "I valori di colore possono essere assegnati direttamente mediante la funzione di costruzione o le proprietà della classe ColorTransform." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Vedere le informazioni sulle proprietà della classe flash.display.InteractiveObject relative all'attivazione." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Vedere gli argomenti della Guida relativi al metodo flash.display.Graphics.beginBitmapFill." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Vedere gli argomenti della Guida relativi al metodo flash.display.DisplayObject.hitTestObject()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Vedere gli argomenti della Guida relativi al metodo addChild()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Utilizzare invece il metodo load()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Utilizzare flash.media.SoundChannel.leftPeak e flash.media.SoundChannel.rightPeak per monitorare e controllare l'ampiezza di un canale audio." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Utilizzare invece la proprietà soundTransform." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Utilizzare invece la proprietà SoundTransform.pan." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Utilizzare invece la proprietà SoundTransform.pan." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Utilizzare invece la proprietà bytesLoaded." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Utilizzare invece la proprietà bytesTotal." );
        warningConstantsIT[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Uso inefficiente di += su un'istanza TextField.." );
        warningConstantsIT[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "L'aggiunta di testo a un'istanza TextField mediante += è spesso un'operazione più lenta rispetto all'uso del metodo TextField.appendText()." );
        warningConstantsIT[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Possibili parentesi mancanti." );
        warningConstantsIT[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "È stato utilizzato un valore Function ma era previsto un valore del tipo %s.  È possibile che manchino le parentesi () dopo il riferimento alla funzione." );
        warningConstantsIT[index++] = new AscWarning(kWarning_InstanceOfChanges, "Uso dell'operatore instanceof." );
        warningConstantsIT[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "L'operatore instanceof è sconsigliato; utilizzare invece l'operatore is." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "Il gestore di eventi allowDomain() è ora un metodo standard anziché un callback di evento. Per ulteriori informazioni, vedere il nuovo metodo LocalConnection.allowDomain." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "Il gestore di eventi allowInsecureDomain() è ora un metodo standard anziché un callback di evento. Per ulteriori informazioni, vedere il nuovo metodo LocalConnection.allowInsecureDomain." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_call, "Il metodo globale call() non è più supportato." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Color, "La classe Color è stata rimossa. Utilizzare la classe flash.geom.ColorTransform per ottenere una funzionalità equivalente." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Color, "La classe Color è stata rimossa. Utilizzare la classe flash.geom.ColorTransform per ottenere una funzionalità equivalente." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "I file SWF di ActionScript 3.0 usano sempre le regole di corrispondenza del dominio esatto." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_capabilities, "La classe capabilities è stata rinominata in Capabilities." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_capabilities, "La classe capabilities è stata rinominata in Capabilities." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onComplete, "In ActionScript 3.0, il gestore di eventi onComplete non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'complete', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onHTTPError, "In ActionScript 3.0, il gestore di eventi onHTTPError non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'httpError', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onIOError, "In ActionScript 3.0, il gestore di eventi onIOError non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'ioError', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onProgress, "In ActionScript 3.0, il gestore di eventi onProgress non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'progress', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onSecurityError, "In ActionScript 3.0, il gestore di eventi onSecurityError non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'securityError', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onOpen, "In ActionScript 3.0, il gestore di eventi onOpen non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'open', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Possibile utilizzo della classe XML di ActionScript 2.0." );
        warningConstantsIT[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Problema relativo alla migrazione: la classe XML di ActionScript 2.0 è stata rinominata in XMLDocument." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadDateCast, "Operazione di inserimento in Date non valida." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) si comporta allo stesso modo di Date().toString(). Per inserire un valore nel tipo Date, utilizzare l'espressione \"x as Date\" invece di Date(x)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ImportHidesClass, "L'importazione di un pacchetto con lo stesso nome della classe corrente nasconde il relativo identificatore in questa area di validità." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "L'importazione di un pacchetto con lo stesso nome della classe corrente nasconde il relativo identificatore in questa area di validità." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Più di un argomento con lo stesso nome." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Sono stati specificati più argomenti con il nome '%s'.  I riferimenti a tale argomento verranno sempre risolti all'ultima occorrenza." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Utilizzare invece il metodo Rectangle.containsRect." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_eval, "Questa funzionalità è stata rimossa." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Questa funzionalità è stata sostituita dalla proprietà flash.system.Capabilities.version." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Questa funzionalità è stata sostituita dalla proprietà flash.display.MovieClip.framesLoaded." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp__global, "La proprietà _global è stata rimossa.  Per ottenere una funzionalità equivalente, utilizzare un membro statico di una classe." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadBoolAssignment, "È stato utilizzato un valore non booleano ma era previsto un valore booleano." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "È stato utilizzato %s ma era previsto un valore booleano.  L'espressione verrà assegnata forzatamente al tipo Boolean." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadES3TypeProp, "Proprietà sconosciuta." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s non è una proprietà riconosciuta della classe dinamica %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Metodo sconosciuto." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s non è un metodo riconosciuto della classe dinamica %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Definizione di variabile duplicata." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Definizione di variabile duplicata." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Il nome della definizione corrisponde al nome di un pacchetto importato.  I riferimenti non qualificati a quel nome verranno risolti al pacchetto e non alla definizione." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Il nome della definizione corrisponde al nome di un pacchetto importato.  I riferimenti non qualificati a quel nome verranno risolti al pacchetto e non alla definizione." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Possibile tentativo di eliminare una proprietà fissa." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "La proprietà dichiarata %s non può essere eliminata. Per liberare la memoria ad essa associata, impostarne il valore su null." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Deprecated, "Utilizzo di una definizione obsoleta." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Deprecated_specific, "%s' è stato contrassegnato come obsoleto." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedMessage, "Utilizzo di una definizione obsoleta." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Utilizzo di una definizione obsoleta." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "%s' è stato contrassegnato come obsoleto. Utilizzare '%s'." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedSince, "Utilizzo di una definizione obsoleta." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "%s' è stato contrassegnato come obsoleto a partire da %s. Utilizzare '%s'." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Utilizzo di una definizione obsoleta." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "%s' è stato contrassegnato come obsoleto a partire da %s." );
   }

   static final AscWarning[] warningConstantsJP= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsJP() 
   {
      int index=0;
        warningConstantsJP[index++] = new AscWarning(kWarning_NoTypeDecl, "型宣言がありません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' に型宣言がありません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadUndefinedComparision, "undefined の比較が非論理的です。型が指定されていない変数 (または * 型の変数) のみ undefined にすることができます。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "%s 型の変数は undefined にすることができません。値 undefined は %s に型強制された後で比較されます。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "new 式で使用されている関数は値を返します。結果は、関数の新しいインスタンスではなく、その関数の戻り値になります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "移行の問題 : new %s の結果は、関数 %s の新しいインスタンスではなく、その関数の戻り値になります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() を引数なしで呼び出すと、ActionScript 3.0 では false が返されます。ActionScript 2.0 では Boolean() に undefined が返されていました。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Boolean() を引数なしで使用します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NumberFromStringChanges, "ActionScript 3.0 では、空白文字は無視され、'' は 0 を返します。ActionScript 2.0 では、パラメータが '' であるか、空白文字を含む場合に Number() は NaN を返します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "移行の問題 : Number('') 関数を空のストリング引数で呼び出した場合、ActionScript 3.0 では 0 を返し、ActionScript 2.0 では NaN を返します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString() 形式が変更されています。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "移行に関する問題 : Array.toString() による null エレメントと undefined エレメントの 処理方法が変更されました。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DepricatedPropertyError, "サポートされていない ActionScript 2.0 のプロパティです。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "移行の問題 : プロパティ %s はサポートされないようになりました。%s。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DepricatedFunctionError, "サポートされていない ActionScript 2.0 の関数です。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "移行の問題 : メソッド %s はサポートされないようになりました。%s。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "移行の問題 : __resolve はサポートされなくなりました。同様の機能を得るには新しい Proxy クラスを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_LevelNotSupported, "_level はサポートされなくなりました。詳細については、flash.display パッケージを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "移行の問題 : _level はサポートされなくなりました。詳細については、flash.display パッケージを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ClassIsSealed, "クラスは sealed です。このクラスにメンバーを動的に追加することはできません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "移行の問題 : %s はダイナミッククラスではありません。インスタンスにメンバーを動的に追加することはできません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ScopingChangeInThis, "this キーワードのスコープの変更。クラスのインスタンスから抽出したクラスメソッドでは、this で常にそのインスタンスを参照します。ActionScript 2.0 では、メソッドを呼び出した場所に基づいて this を動的に参照します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "移行の問題 : メソッド %s は this キーワードのスコープの変更により ActionScript 3.0 では異なる動作をします。追加情報については、警告 1083 に関するトピックを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "名前空間の宣言がありません (変数が public や private などに定義されていません)。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s がデフォルトの名前空間にスコープされます :内部 %s。このパッケージの外部には表示されません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 では、オブジェクトのプロパティを \"for x in target\" ステートメント内でランダムな順番で繰り返し処理します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "移行の問題 : ActionScript 3.0 では、オブジェクトのプロパティを \"for x in target\" ステートメント内でランダムな順番で繰り返し処理します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_InternalError, "コンパイラの内部エラー。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_InternalError_specific, "エラーコード : %s。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler がリスナーとして追加されていません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "移行の問題 : %s" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NegativeUintLiteral, "負の値を uint データ型に割り当てると、大きい正の値になります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "uint 値 (正の値) が必要なところに負の値が使用されました。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadNullComparision, "null の比較が無効です。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadNullComparision_specific, "null の比較が無効です。%s 型の変数は null にすることができません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadNaNComparision, "NaN の比較が無効です。NaN を含む比較処理は、NaN != NaN となるため false になります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "NaN の比較が無効です。このステートメントは、常に false と評価します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "条件内の代入です。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "条件内の代入です。= ではなく == をですか?" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadNullAssignment, "null に代入できません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "null に代入できません。%s 型の変数は null にすることができません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NoConstructor, "コンストラクタが見つかりません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NoConstructor_specific, "コンストラクタ関数がクラス %s に指定されていません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "空のステートメントです。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "コードのブロックが必要な場所に、空のステートメントが見つかりました。誤って「;」を入力していませんか？" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ConstNotInitialized, "定数が初期化されていません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "定数は初期化されませんでした。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadArrayCast, "無効な Array キャスト演算である可能性があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) は new Array(x) と同じように動作します。Array 型に値をキャストして、Array(x) の代わりに式 x を Array として使用します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "super() ステートメントがコンストラクタ内で呼び出されませんでした。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "super() ステートメントは、このコンストラクタを入力する前に実行されます。実行時に明示的に制御する場合は、コンストラクタ内で super() への呼び出しを追加します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_version, "代わりに、Capabilities.version を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Focusrect, "詳細については、InteractiveObject.focusRect を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Highquality, "詳細については、Stage.quality を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "詳細については、Stage.quality を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "詳細については、Stage.quality を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Quality, "詳細については、Stage.quality を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "代わりに、静的プロパティ flash.media.SoundMixer.bufferTime を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "詳細については、LoaderInfo.url を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_NewLine, "改行文字には '\n' を使用します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "詳細については、textField.maxScroll を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Level, "ActionScript 3.0 ではレベルの概念が存在せず、代わりに表示リストへの直接アクセスが提供されています。詳細については、flash.display パッケージを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Parent, "このプロパティの代わりに、parent プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Root, "このプロパティは廃止されました。もっとも近いのは ActionScript 3.0 表示リストのルートとなる Stage です。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "代わりに、caller をこの関数の引数として宣言してみてください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Button_Target, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "このプロパティの代わりに、parent プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "詳細については Sprite.hitArea を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Scroll, "詳細については、flash.text.TextField クラスの scrollH および scrollV プロパティを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TargetPath, "MovieClip オブジェクトは、パスではなく引数として直接に使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Video_Height, "詳細については、Video.videoHeight を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Video_Width, "詳細については、Video.videoWidth を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp__Proto__, "詳細については、古い __proto__ を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Stage, "詳細については、DisplayObject.stage を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp__remoteClass, "代わりに、flash.net パッケージの registerClass() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_random, "代わりに、Math.random() を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_chr, "代わりに、String.fromCharCode() を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_mbchr, "代わりに、String.fromCharCode() を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ord, "代わりに、String.charCodeAt() を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_mbord, "代わりに、String.charCodeAt() を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_substring, "代わりに String.substr メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "代わりに String.substr メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_length, "代わりに、この引数の length プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_mblength, "代わりに、この引数の length プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ASNative, "詳細については、ASnative の変更個所を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_addProperty, "この方法ではなく、ドット (.) 表記法を使用してインスタンスにプロパティを直接設定してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_getProperty, "この方法ではなく、ドット (.) 表記法を使用してプロパティに直接アクセスしてください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_setProperty, "この方法ではなく、ドット (.) 表記法を使用してインスタンスにプロパティを直接設定してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_asfunction, "詳細については、TextEvent.LINK および addEventListener() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "このメソッドは flash.utils パッケージに移動しました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "新しい MovieClip クラスコンストラクタ関数に置き換えられました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_fscommand, "flash.system パッケージに移動しました。また、Javascript とActionScript の通信については、flash.external.ExternalInterface クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_getURL, "同等の機能については、flash.net.URLLoader を参照してください。flash.net パッケージにも、パッケージレベルの関数 navigateToURL() および sendToURL() が含まれています。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "詳細については、MovieClip.gotoAndPlay() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "詳細については、MovieClip.gotoAndStop() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_play, "詳細については、MovieClip.play() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_print, "詳細については、PrintJob.start() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "詳細については、PrintJob を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "詳細については、PrintJob を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_printNum, "詳細については、PrintJob を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Container.removeChild (childName) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_setInterval, "flash.utils パッケージに移動しました。代わりに Timer クラスの使用を考慮してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "詳細については、MovieClip.nextFrame() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_startDrag, "詳細については、MovieClip.startDrag() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_stop, "詳細については、MovieClip.stop() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "詳細については、Sound.stopAllSounds() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "詳細については、MovieClip.stopDrag() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "代わりに、ドット (.) 演算子または with ステートメントを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "詳細については、DisplayObject.stage および Stage.quality を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "代わりに、DisplayObjectContainer.removeChild(childName) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "代わりに、DisplayObjectContainer.removeChild(childName) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "この関数はグローバル関数ではなくなりましたが、引き続き TimerEvent クラス、MouseEvent クラス、および KeyboardEvent クラスのメソッドとして使用できます。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "詳細については、Video.attachNetStream、Video.attachCamera を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "読み込みを実行する URLLoader クラスを使用して、StyleSheet.parseCSS() に結果を渡します" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "Actionscript 3.0 では、すべてのクラスがデフォルトで登録されています。AMF を使用している場合の詳細については、flash.utils.registerClassAlias() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "同じ機能としてアクセサプロパティ (get/set 関数) または flash.utils.Proxy クラスを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "同じ機能としてアクセサプロパティ (get/set 関数) または flash.utils.Proxy クラスを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "詳細については、MovieClip.loadMovie() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "詳細については、MovieClip.loadMovieNum() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "詳細については、Loader.load() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "詳細については、Loader.load() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "サウンドをライブラリから作成するには、SWF クラスを使用してください" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onStatus, "ActionScript 3.0 では、onStatus イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('status', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onID3, "ActionScript 3.0 では、onID3 イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('id3', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onLoad, "ActionScript 3.0 では、onLoad イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('load', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onSoundComplete, "ActionScript 3.0 では、onSoundComplete イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('soundComplete', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onSetFocus, "ActionScript 3.0 では、onSetFocus イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('focusIn', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onResize, "ActionScript 3.0 では、onResize イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('resize', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onChanged, "ActionScript 3.0 では、onChanged イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('change', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onKillFocus, "ActionScript 3.0 では、onKillFocus イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('focusOut', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onScroller, "ActionScript 3.0 では、onScroller イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('scroll', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onMouseDown, "ActionScript 3.0 では、onMouseDown イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseDown', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onMouseUp, "ActionScript 3.0 では、onMouseUp イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseUp', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onMouseMove, "ActionScript 3.0 では、onMouseMove イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseMove', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onMouseWheel, "ActionScript 3.0 では、onMouseWheel イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseWheel', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onKeyDown, "ActionScript 3.0 では、onKeyDown イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('keyDown', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onKeyUp, "ActionScript 3.0 では、onKeyUp イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('keyUp', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onData, "ActionScript 3.0 では、onData イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('data', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "ActionScript 3.0 では、onHTTPStatus イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('httpStatus', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onDragOut, "ActionScript 3.0 では、onDragOut イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseOut', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onDragOver, "ActionScript 3.0 では、onDragOver イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseOver', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onPress, "ActionScript 3.0 では、onPress イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseDown', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onRelease, "ActionScript 3.0 では、onRelease イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('click', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "ActionScript 3.0 では、onReleaseOutside イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseUp', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onRollOut, "ActionScript 3.0 では、onRollOut イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseOut', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onRollOver, "ActionScript 3.0 では、onRollOver イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseOver', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onActivity, "ActionScript 3.0 では、onActivity イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('activity', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onSelect, "ActionScript 3.0 では、onSelect イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('menuSelect', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onEnterFrame, "ActionScript 3.0 では、onEnterFrame は Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('enterFrame', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onUnload, "ActionScript 3.0 では、onUnload イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('unload', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onLoadComplete, "ActionScript 3.0 では、onLoadComplete は Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('load', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onLoadError, "ActionScript 3.0 では、onLoadError イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('error', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onLoadInit, "ActionScript 3.0 では、onLoadInit イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('init', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onLoadProgress, "ActionScript 3.0 では、onLoadProgress イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('progress', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onLoadStart, "ActionScript 3.0 では、onLoadStart は Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('start', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onClose, "ActionScript 3.0 では、onClose イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('close', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onConnect, "ActionScript 3.0 では、onConnect イベントハンドラは Flash Player によって自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('connect', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onXML, "ActionScript 3.0 では、onXML は Flash Player によって自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('xml', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "代わりに、プロパティ hasChildNodes を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "XMLEvent クラスは古くなり、xml イベントは送り出されなくなりました。data イベントだけがファイルの読み込み時に送り出されます。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "XMLDoc クラスの名前は XMLDocument になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "代わりに、Accessibility.active プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "代わりに、ActivityEvent.ACTIVITY 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "代わりに、DisplayObjectContainer.parent.getChildIndex を使用してください。MovieClip により拡張される DisplayObjectContainer クラスのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "代わりに、DisplayObjectContainer.parent.setChildIndex を使用してください。MovieClip により拡張される DisplayObjectContainer クラスのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "代わりに、DisplayObjectContainer.getChildAt を使用してください。MovieClip により拡張される DisplayObjectContainer クラスのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "代わりに、DisplayObjectContainer.numChildren を使用してください。DisplayObjectContainer.addChild は常に新しい子をインデックス DisplayObjectContainer.numChildren に追加します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "代わりに、ByteArray.bytesAvailable プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "代わりに、ByteArray.position プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "代わりに、ByteArray.position プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "代わりに、Camera.getCamera() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "代わりに、Camera.currentFPS プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "代わりに、Camera.keyFrameInterval プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "代わりに、Camera.loopback プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "代わりに、ColorTransform.color プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "代わりに、ColorTransform.color プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "代わりに、Container.textSnapshot プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "代わりに、ContextMenu.clone() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "代わりに、ContextMenu.forwardAndBack プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "代わりに、ContextMenuItem.clone() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "代わりに、CustomActions.actionsList プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "代わりに、DataEvent.DATA 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "代わりに、DisplayObject.scaleX プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "代わりに、DisplayObject.scaleX プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "代わりに、DisplayObject.scaleY プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "代わりに、DisplayObject.scaleY プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "代わりに、DisplayObject.mouseX プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "代わりに、DisplayObject.mouseX プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "代わりに、DisplayObject.mouseY プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "代わりに、DisplayObject.mouseY プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "代わりに、DisplayObject.name プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "代わりに、DisplayObject.parent プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "代わりに、DisplayObject.mask プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "代わりに、DisplayObject.visible プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "代わりに、DisplayObject.x プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "代わりに、DisplayObject.y プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "代わりに、DisplayObject.rotation プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "代わりに、DisplayObject.alpha プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "代わりに、DisplayObject.width プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "代わりに、DisplayObject.height プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "代わりに、ExternalInterface.available プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "代わりに、ErrorEvent.ERROR 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "代わりに、Event.isDefaultPrevented プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "代わりに、Event.ACTIVATE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "代わりに、Event.ADDED 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "代わりに、Event.CANCEL 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "代わりに、Event.CHANGE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "代わりに、Event.CLOSE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "代わりに、Event.COMPLETE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "代わりに、Event.CONNECT 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "代わりに、Event.DEACTIVATE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "代わりに、Event.ENTER_FRAME 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "代わりに、Event.ID3 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "代わりに、Event.INIT 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "代わりに、Event.MOUSE_LEAVE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "代わりに、Event.OPEN 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "代わりに、Event.REMOVED 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "代わりに、Event.RENDER 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "代わりに、Event.RESIZE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "代わりに、Event.SCROLL 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "代わりに、Event.SELECT 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "代わりに、Event.SOUND_COMPLETE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "代わりに、Event.TAB_CHILDREN_CHANGE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "代わりに、Event.TAB_ENABLED_CHANGE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "代わりに、Event.TAB_INDEX_CHANGE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "代わりに、Event.UNLOAD 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "代わりに、FocusEvent.FOCUS_IN 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "代わりに、FocusEvent.FOCUS_OUT 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "代わりに、FocusEvent.KEY_FOCUS_CHANGE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "代わりに、FocusEvent.MOUSE_FOCUS_CHANGE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "代わりに、Graphics.beginBitmapFill() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "代わりに、BitmapFilter.quality プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "代わりに、KeyboardEvent.charCode を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "代わりに、KeyboardEvent.keyCode を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "詳細については、KeyboardEvent クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "詳細については、KeyboardEvent.ctrlKey、KeyboardEvent.altKey、and KeyboardEvent.shiftKey を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "代わりに、PAGE_DOWN 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "代わりに、PAGE_UP 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "代わりに、DELETE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "代わりに、CAPS_LOCK 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "代わりに、NUMPAD_0 -> NUMPAD_9 のいずれかの定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "代わりに、InteractiveObject.focusRect プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "代わりに、InteractiveObject.contextMenu プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "代わりに、KeyboardEvent.charCode プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "代わりに、KeyboardEvent.keyCode プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "代わりに、Loader.contentLoaderInfo プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "代わりに、LoaderInfo.loaderURL プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "代わりに、LocalConnection.domain プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "代わりに、MenuEvent.contextMenuOwner プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "代わりに、Microphone.getMicrophone() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "MovieClip サブクラス名が A の場合、var mc= new A(); addChild(mc) を使用します。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "var mc= new MovieClip(); addChild(mc) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "var tf= new TextField(); addChild(mc) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Container.removeChild (childName) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\")); を使用してください。詳細については、Loader および DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "代わりに、DisplayObjectContainer.removeChild(childName) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "代わりに、DisplayObjectContainer.removeChild(childName) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "代わりに、DisplayObjectContainer.parent.getChildIndex を使用してください。詳細については、MovieClip により拡張される DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "代わりに、DisplayObjectContainer.parent.setChildIndex を使用してください。詳細については、MovieClip により拡張される DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "代わりに、DisplayObjectContainer.getChildAt を使用してください。詳細については、MovieClip により拡張される DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "代わりに、DisplayObjectContainer.numChildren を使用してください。DisplayObjectContainer.addChild は常に新しい子をインデックス DisplayObjectContainer.numChildren に追加します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "詳細については、DisplayObject.addChild を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "詳細については、LoaderInfo.bytesLoaded および Loader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "詳細については、LoaderInfo.bytesTotal および Loader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "同等の機能については、flash.net.URLLoader を参照してください。flash.net パッケージにも、パッケージレベルの関数 navigateToURL() および sendToURL() が含まれています。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "詳細については、LoaderInfo.url および Loader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "詳細については、LoaderInfo.url および Loader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "代わりに、MovieClip.mask プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "詳細については、LoaderInfo.swfVersion および Loader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "代わりに、MovieClip.currentFrame プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "代わりに、MovieClip.framesLoaded プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "代わりに、MovieClip.totalFrames プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "詳細については、displayObjectInstance.root を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "詳細については、displayObjectInstance.root を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "代わりに、静的プロパティ flash.media.SoundMixer.bufferTime を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "代わりに、NetStream.bufferTime プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "代わりに、NetStream.currentFPS プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "代わりに、NetStream.videoCodec プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "代わりに、NetStream.audioCodec プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "代わりに、ProductManager.isInstalled プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "代わりに、ProductManager.installedVersion プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "代わりに、ProductManager.isRunning プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "代わりに、Point.add() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "代わりに、Proxy.deleteDescendants プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "代わりに、heapDump() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "代わりに、ProgressEvent.bytesLoaded プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "代わりに、ProgressEvent.bytesTotal プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "代わりに、Rectangle.isEmpty プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "代わりに、SoundTransform.pan プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "代わりに、Sockect.bytesAvailable プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "代わりに、SharedObject.size プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "代わりに、SharedObject.fps プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "これはサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "代わりに、Sprite.constructChildren() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "代わりに、Sprite.dropTarget プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "代わりに、Stage.focus プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "代わりに、Stage.focus プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "代わりに、Stage.showDefaultContextMenu プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "代わりに、StyleSheet.styleNames プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "URLLoader のインスタンスを使用して StyleSheet データを読み込み、読み込んだデータを StyleSheet.parseCSS メソッドに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "URLLoader のインスタンスを使用して StyleSheet データを読み込み、読み込んだデータを StyleSheet.parseCSS メソッドに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "URLLoader のインスタンスを使用して StyleSheet データを読み込み、読み込んだデータを StyleSheet.parseCSS メソッドに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "URLLoader のインスタンスを使用して StyleSheet データを読み込み、読み込んだデータを StyleSheet.parseCSS メソッドに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "URLLoader のインスタンスを使用して StyleSheet データを読み込み、読み込んだデータを StyleSheet.parseCSS メソッドに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "代わりに、IME.enabled プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "代わりに、IME.enabled プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "代わりに、IME.instance プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "代わりに、IME.conversionMode プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "代わりに、IME.conversionMode プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "代わりに、System.vmVersion プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "代わりに、SWFLoaderInfo.swfVersion プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "代わりに、SWFLoaderInfo.actionScriptVersion プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "代わりに、TextField.defaultTextFormat プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "代わりに、TextField.defaultTextFormat プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "代わりに、DisplayObjectContainer.parent.getChildIndex を使用してください。詳細については、MovieClip により拡張される DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "代わりに、DisplayObjectContainer.parent.setChildIndex を使用してください。詳細については、MovieClip により拡張される DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "代わりに、DisplayObjectContainer.getChildAt を使用してください。詳細については、MovieClip により拡張される DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "代わりに、DisplayObjectContainer.numChildren を使用してください。DisplayObjectContainer.addChild は常に新しい子をインデックス DisplayObjectContainer.numChildren に追加します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "代わりに、TextField.replaceSelectedText() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "代わりに、TextField.getLineIndexOfChar() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "代わりに、TextField.selectionBeginIndex プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "代わりに、TextField.selectionEndIndex プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "代わりに、TextField.caretIndex プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "代わりに、Font.enumerateFonts() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "代わりに、TextField.maxScrollV プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "代わりに、TextField.scrollH プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "代わりに、TextField.maxScrollH プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "代わりに、TextField.defaultTextFormat プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "代わりに、一時的な TextField を作成し、TextField.getLineMetrics を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "代わりに、TextSnapshot.charCount プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "代わりに、flash.net パッケージで navigateToURL() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "代わりに、flash.net パッケージで sendToURL() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "代わりに、URLLoader.dataFormat プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "代わりに、URLStream.bytesAvailable プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "これはサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "代わりに、URLRequest.applicationDomain プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "リクエストヘッダを追加するには、URLRequest.requestHeaders プロパティを URLRequestHeader オブジェクトの配列に設定します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "URLLoader のインスタンスを使用して XML ファイルを読み込み、URLLoaders データを XMLDocuments コンストラクタに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "代わりに、flash.net パッケージで sendToURL() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "URLRequest オブジェクトを postData プロパティに設定し、URLLoader オブジェクトを使用して、XML ファイルを読み込みます。URLLoaders データを XMLDocuments コンストラクタに渡します。詳細については、URLLoader、URLRequest および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "URLLoader のインスタンスを使用して XML ファイルを読み込み、URLLoaders データを XMLDocuments コンストラクタに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "リクエストヘッダを追加するには、URLRequest.requestHeaders プロパティを URLRequestHeader オブジェクトの配列に設定します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "詳細については、URLLoader.bytesLoaded および URLLoader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "詳細については、URLLoader.bytesTotal および URLLoader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "URLLoader のインスタンスを使用して XML ファイルを読み込み、読み込んだデータを StyleSheet.parseCSS メソッドに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "代わりに、URLRequest.contentType プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "代わりに、XMLDocument コンストラクタまたは XMLDocument.parseXML メソッドがスローした可能性のある例外をチェックしてみてください。詳細については、XMLDocument を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Button, "Button クラスの名前は SimpleButton になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Container, "Container クラスの名前は DisplayObjectContainer になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Image, "Image クラスの名前は BitmapData になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "ImageFilter クラスの名前は BitmapFilter になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "ImageSprite クラスの名前は Bitmap になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "ImageLoaderInfo クラスの名前は BitmapLoaderInfo になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "ImeEvent クラスの名前は IMEEvent になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Key, "Key クラスの名前は Keyboard になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "LineMetrics クラスの名前は TextLineMetrics になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_LoadVars, "詳細については、URLVariables クラス、URLRequest.urlVariables および URLRequest.postData プロパティ、URLLoader.dataFormat プロパティを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "MenuEvent クラスの名前は ContextMenuEvent になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "SystemCapabilities クラスの名前は Capabilities になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextExtents, "代わりに、TextField.getLineMetrics プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Button, "Button クラスの名前は SimpleButton になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Container, "Container クラスの名前は DisplayObjectContainer になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Image, "Image クラスの名前は BitmapData になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "ImageFilter クラスの名前は BitmapFilter になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "ImageSprite クラスの名前は Bitmap になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "ImageLoaderInfo クラスの名前は BitmapLoaderInfo になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "ImeEvent クラスの名前は IMEEvent になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Key, "Key クラスの名前は Keyboard になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "LineMetrics クラスの名前は TextLineMetrics になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "詳細については、URLVariables クラス、URLRequest.urlVariables および URLRequest.postData プロパティ、URLLoader.dataFormat プロパティを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "MenuEvent クラスの名前は ContextMenuEvent になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "SystemCapabilities クラスの名前は Capabilities になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "代わりに、TextField.getLineMetrics プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "詳細については、同様の機能を提供する Proxy クラスのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "代わりに、XMLUI.getProperty メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "代わりに、XMLUI.setProperty メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "代わりに、DisplayObject.accessibilityProperties プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "代わりに、DisplayObject.scale9Grid プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "代わりに、Graphics.drawOval メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "代わりに、NetConnection.connected プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "代わりに、Socket.connected プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "代わりに、URLStream.connected プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "代わりに、SyncEvent.changeList プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "代わりに、TextField.scrollV プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "代わりに、TextField.bottomScrollV プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "代わりに、BitmapDataChannel.RED 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "代わりに、BitmapDataChannel.GREEN 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "代わりに、BitmapDataChannel.BLUE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "代わりに、BitmapDataChannel.ALPHA 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_instanceof, "代わりに、is 演算子を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "代わりに、flash.system.Security.showSettings メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "代わりに、System.useCodePage プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "代わりに、flash.events.EventDispatcher クラスを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "代わりに、静的プロパティ flash.media.SoundMixer.bufferTime を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "代わりに、ビットマップライブラリのシンボルクラスの新しいインスタンス (new myBitmapName()など) を作成してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "詳細については、Loader.load() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "MovieClipLoader クラスは flash.display.Loader クラスに置き換えられました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "MovieClipLoader クラスは flash.display.Loader クラスに置き換えられました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "代わりに、flash.system.IMEConversionMode.ALPHANUMERIC_FULL 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "代わりに、flash.system.IMEConversionMode.ALPHANUMERIC_HALF 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "代わりに、flash.system.IMEConversionMode.CHINESE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "代わりに、flash.system.IMEConversionMode.JAPANESE_HIRAGANA 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "代わりに、flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "代わりに、flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "代わりに、flash.system.IMEConversionMode.KOREAN 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "代わりに、flash.system.IMEConversionMode.UNKNOWN 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onCancel, "ActionScript 3.0 では、onCancel イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener (cancel, onCancel) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "相当の機能を持つものはありません。willTrigger() メソッドは、登録リスナーが存在するかどうかを判別するために使用できます。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onIMEComposition, "ActionScript 3.0 では、onIMEComposition イベントハンドラは Flash Player によって実行時に自動的にトリガされません。そのため、addEventListener (imeComposition, handlerName) を使い、あらかじめこのハンドラをイベントに登録しておく必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "詳細については、LoaderInfo.url および Loader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "代わりに、getFullYear() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "代わりに、setFullYear() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "代わりに、getUTCFullYear() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "代わりに、rate プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Selection, "Selection クラスは削除されました。詳細については、選択情報を希望するクラスの addEventListener メソッドを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Selection, "Selection クラスは削除されました。詳細については、選択情報を希望するクラスの addEventListener メソッドを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "代わりに、gain プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "ColorTransform クラスのコンストラクタまたはプロパティを使用して、カラー値を直接割り当てることができます。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "ColorTransform クラスのコンストラクタまたはプロパティを使用して、カラー値を直接割り当てることができます。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "flash.display.InteractiveObject クラスの focus 関連のプロパティのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "flash.display.Graphics.beginBitmapFill メソッドのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "flash.display.DisplayObject.hitTestObject() メソッドのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "addChild() メソッドのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "代わりに、load() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "flash.media.SoundChannel.leftPeak および flash.media.SoundChannel.rightPeak を使用して、サウンドチャンネルの振幅を監視およびコントロールします。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "代わりに、soundTransform プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "代わりに、SoundTransform.pan プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "代わりに、SoundTransform.pan プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "代わりに、bytesLoaded プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "代わりに、bytesTotal プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "TextField で += を使用するのは効果的ではありません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "TextField に += を使用してテキストを追加すると、TextField.appendText() メソッドを使用するよりも何倍も遅くなります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "括弧がない可能性があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "%s 型が必要なところに関数値が使用されています。この関数参照の後に括弧 () がない可能性があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_InstanceOfChanges, "instanceof 演算子を使用します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "instanceof 演算子は使用されなくなりました。代わりに is 演算子を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "イベントコールバックではなく、allowDomain() イベントハンドラが標準のメソッドになりました。詳細については、新しい LocalConnection.allowDomain メソッドを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "イベントコールバックではなく、allowInsecureDomain() イベントハンドラが標準のメソッドになりました。詳細については、新しい LocalConnection.allowInsecureDomain メソッドを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_call, "グローバル call() メソッドはサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Color, "Color クラスは削除されました。同等の機能の flash.geom.ColorTransform クラスを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Color, "Color クラスは削除されました。同等の機能の flash.geom.ColorTransform クラスを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF ファイルは常に同一ドメインの規則に従う必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_capabilities, "capabilities クラスの名前は Capabilities になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_capabilities, "capabilities クラスの名前は Capabilities になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onComplete, "ActionScript 3.0 では、onComplete イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('complete', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onHTTPError, "ActionScript 3.0 では、onHTTPError イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('httpError', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onIOError, "ActionScript 3.0 では、onIOError イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('ioError', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onProgress, "ActionScript 3.0 では、onProgress イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('progress', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onSecurityError, "ActionScript 3.0 では、onSecurityError イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('securityError', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onOpen, "ActionScript 3.0 では、onOpen イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('open', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "ActionScript 2.0 XML クラスを使用している可能性があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "移行の問題 : ActionScript 2.0 XML クラスの名前は XMLDocument になりました。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadDateCast, "無効な Date キャスト演算です。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) は new Date().toString() と同じように動作します。Date 型に値をキャストして、Date(x) の代わりに \"x as Date\" を使用します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ImportHidesClass, "現在のクラスと同じ名前でパッケージをインポートすると、このスコープ内のクラス識別子が非表示になります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "現在のクラスと同じ名前でパッケージをインポートすると、このスコープ内のクラス識別子が非表示になります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "同じ名前の引数が複数あります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "'%s' という名前の引数を複数指定しました。この引数への参照では、最後の引数が常に参照されます。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "代わりに、Rectangle.containsRect メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_eval, "この機能は廃止されました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_getVersion, "この機能は、flash.system.Capabilities.version プロパティに置き換えられました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "この機能は、flash.display.MovieClip.framesLoaded プロパティに置き換えられました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp__global, "_global プロパティは廃止されました。同等の機能の静的クラスメンバーを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadBoolAssignment, "ブール値が必要ですが、非ブール値が使用されています。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "ブール値が必要ですが、%s が使用されています。ブール式に型強制されます。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadES3TypeProp, "不明なプロパティです。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s は dynamic クラス %s の認識されたプロパティではありません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadES3TypeMethod, "不明なメソッドです。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s は dynamic クラス %s の認識されたメソッドではありません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DuplicateVariableDef, "変数定義が重複しています。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "変数定義が重複しています。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "定義名が読み込んだパッケージ名と同じです。この名前への非限定の参照は、パッケージに対するものとなり、定義に対するものではなくなります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "定義名が読み込んだパッケージ名と同じです。この名前への非限定の参照は、パッケージに対するものとなり、定義に対するものではなくなります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "固定プロパティを削除しようとした可能性があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "宣言されているプロパティ %s を削除することはできません。このプロパティに関連付けられているメモリを解放するには、プロパティの値を null に設定します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Deprecated, "推奨されない定義を使用しています。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Deprecated_specific, "\"%s\" は推奨されません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedMessage, "推奨されない定義を使用しています。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "推奨されない定義を使用しています。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "\"%s\" は推奨されません。\"%s\" を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedSince, "推奨されない定義を使用しています。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "\"%s\" は %s 以降推奨されていません。\"%s\" を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "推奨されない定義を使用しています。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "\"%s\" は %s 以降推奨されていません。" );
   }

   static final AscWarning[] warningConstantsKR= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsKR() 
   {
      int index=0;
        warningConstantsKR[index++] = new AscWarning(kWarning_NoTypeDecl, "유형 선언이 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s'에 유형 선언이 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadUndefinedComparision, "undefined 비교가 비논리적입니다. 유형이 지정되지 않은 변수나 * 유형의 변수만 undefined일 수 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "%s 유형의 변수는 undefined일 수 없습니다. 비교 전에 undefined 값의 유형은 %s(으)로 강제 변환됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "새 표현식에 사용된 함수에서 값을 반환합니다. 해당 함수의 새 인스턴스가 아닌 함수 반환 값이 결과가 됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "마이그레이션 문제: 새 %s의 결과가 해당 함수의 새 인스턴스가 아닌 %s의 반환 값입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "ActionScript 3.0에서 인수가 없는 Boolean()은 false를 반환합니다. ActionScript 2.0에서는 Boolean()이 undefined를 반환했습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "인수가 없는 Boolean()이 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NumberFromStringChanges, "ActionScript 3.0에서 공백 문자는 무시되고 \"는 0을 반환합니다. 매개 변수가 ''이거나 공백 문자를 포함할 경우 ActionScript 2.0에서 Number()는 NaN을 반환합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "마이그레이션 문제: 빈 문자열 인수로 Number('') 함수를 호출하면 ActionScript 3.0에서는 0이 반환되고 ActionScript 2.0에서는 NaN이 반환됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString() 형식이 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "마이그레이션 문제: Array.toString()의 null 및 undefined 요소 처리가 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DepricatedPropertyError, "지원되지 않는 ActionScript 2.0 속성입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "마이그레이션 문제: 이제 %s 속성은 지원되지 않습니다. %s." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DepricatedFunctionError, "지원되지 않는 ActionScript 2.0 함수입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "마이그레이션 문제: 이제 %s 메서드는 지원되지 않습니다. %s." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ChangesInResolve, "이제 __resolve는 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "마이그레이션 문제: 이제 __resolve는 지원되지 않습니다. 비슷한 기능을 구현하려면 새 Proxy 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_LevelNotSupported, "이제 _level은 지원되지 않습니다. 자세한 내용은 flash.display 패키지를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "마이그레이션 문제: 이제 _level은 지원되지 않습니다. 자세한 내용은 flash.display 패키지를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ClassIsSealed, "클래스가 봉인되었습니다. 이 클래스에는 멤버가 동적으로 추가될 수 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "마이그레이션 문제: %s은(는) 동적 클래스가 아닙니다. 인스턴스에 멤버가 동적으로 추가될 수 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ScopingChangeInThis, "this 키워드에 대한 범위 지정이 변경되었습니다. 클래스의 인스턴스에서 추출된 클래스 메서드는 항상 해당 인스턴스로 돌아가서 이 범위를 확인합니다. ActionScript 2.0에서 이 범위는 메서드가 호출되는 위치를 기준으로 동적으로 조회됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "마이그레이션 문제: this 키워드에 대한 범위 지정이 변경되어 ActionScript 3.0에서 %s 메서드가 다르게 동작합니다. 자세한 내용은 경고 항목 1083을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "네임스페이스 선언이 없습니다. 예를 들어 변수가 public, private 등으로 정의되지 않았습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s의 범위가 기본 네임스페이스인 %s internal로 지정됩니다. 이에 따라 이 패키지 외부에서는 보이지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0에서는 \"for x in target\" 문 내에서 객체의 속성이 임의의 순서로 반복 실행됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "마이그레이션 문제: ActionScript 3.0에서는 \"for x in target\" 문 내에서 객체의 속성이 임의의 순서로 반복 실행됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_InternalError, "컴파일러 내부 오류입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_InternalError_specific, "오류 코드: %s." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler가 리스너로 추가되지 않았습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "마이그레이션 문제: %s" );
        warningConstantsKR[index++] = new AscWarning(kWarning_NegativeUintLiteral, "uint 데이터 유형에 음수 값을 할당하면 큰 양수 값이 됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "음이 아닌 uint 값이 필요한 곳에 음수 값이 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadNullComparision, "null 비교가 비논리적입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadNullComparision_specific, "null 비교가 비논리적입니다. %s 유형의 변수는 null일 수 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadNaNComparision, "NaN 비교가 비논리적입니다. NaN != NaN이기 때문에 NaN이 포함된 모든 비교 연산은 false로 평가됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "NaN 비교가 비논리적입니다. 이 문은 항상 false로 평가됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "조건 내에 대입 연산자가 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "조건 내에 대입 연산자가 있습니다. = 대신 ==를 사용하려고 했습니까?" );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadNullAssignment, "null은 대입할 수 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "%s 값이 필요한 곳에 null이 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NoConstructor, "생성자가 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NoConstructor_specific, "%s 클래스에 대한 생성자 함수가 지정되지 않았습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "빈 명령문입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "코드 블록이 필요한 위치에 빈 명령문이 있습니다. ';'을 실수로 입력한 것입니까?" );
        warningConstantsKR[index++] = new AscWarning(kWarning_ConstNotInitialized, "상수가 초기화되지 않았습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "상수가 초기화되지 않았습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadArrayCast, "Array 형 변환 연산이 잘못된 것 같습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x)가 새 Array(x)와 동일하게 동작합니다. 값을 Array 유형으로 형 변환하려면 Array(x) 대신 x as Array 표현식을 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "super() 문이 생성자 내에서 호출되지 않았습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "이 생성자가 시작되기 전에 super() 문이 실행됩니다. super() 문의 실행 시기를 명시적으로 제어하려면 생성자 내에 super()에 대한 호출을 추가하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_version, "Capabilities.version을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Focusrect, "자세한 내용은 InteractiveObject.focusRect를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Highquality, "자세한 내용은 Stage.quality를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "자세한 내용은 Stage.quality를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "자세한 내용은 Stage.quality를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Quality, "자세한 내용은 Stage.quality를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "정적 속성 flash.media.SoundMixer.bufferTime을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "자세한 내용은 LoaderInfo.url을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_NewLine, "개행을 표시하려면 '\n'을 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "자세한 내용은 textField.maxScroll을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Level, "ActionScript 3.0에는 레벨의 개념이 없으며, 대신 표시 목록에 대한 직접 액세스를 제공합니다. 자세한 내용은 flash.display 패키지를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Parent, "parent 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Root, "이 속성은 제거되었습니다. 가장 비슷한 속성은 ActionScript 3.0 표시 목록의 루트 역할을 하는 Stage입니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "호출자를 대신 함수의 인수로 선언해 보십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Button_Target, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "parent 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "자세한 내용은 Sprite.hitArea를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Scroll, "자세한 내용은 flash.text.TextField 클래스의 scrollH 및 scrollV 속성을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TargetPath, "경로 대신 MovieClip 객체를 인수로 직접 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Video_Height, "자세한 내용은 Video.videoHeight를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Video_Width, "자세한 내용은 Video.videoWidth를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp__Proto__, "자세한 내용은 이제 사용되지 않는 __proto__를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Stage, "자세한 내용은 DisplayObject.stage를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp__remoteClass, "flash.net 패키지에 있는 registerClass() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_random, "Math.random()을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_chr, "String.fromCharCode()를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_mbchr, "String.fromCharCode()를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ord, "String.charCodeAt()을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_mbord, "String.charCodeAt()을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_substring, "String.substr 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "String.substr 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_length, "인수의 length 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_mblength, "인수의 length 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ASNative, "자세한 내용은 ASnative의 변경 사항을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_addProperty, "도트(.) 표기법을 대신 사용하여 인스턴스에 직접 속성을 설정하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_getProperty, "도트(.) 표기법을 대신 사용하여 속성에 직접 액세스하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_setProperty, "도트(.) 표기법을 대신 사용하여 인스턴스에 직접 속성을 설정하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_asfunction, "자세한 내용은 TextEvent.LINK 및 addEventListener()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "이 메서드는 flash.utils 패키지로 옮겨졌습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "새 MovieClip 클래스 생성자 함수로 대체되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_fscommand, "flash.system 패키지로 옮겨졌습니다. Javascript/ActionScript 통신을 위한 flash.external.ExternalInterface 클래스도 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_getURL, "동일한 기능은 flash.net.URLLoader를 참조하십시오.  flash.net 패키지에도 패키지 레벨 함수인 navigateToURL()과 sendToURL()이 포함되어 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "자세한 내용은 MovieClip.gotoAndPlay()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "자세한 내용은 MovieClip.gotoAndStop()을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_play, "자세한 내용은 MovieClip.play()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_print, "자세한 내용은 PrintJob.start()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "자세한 내용은 PrintJob을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "자세한 내용은 PrintJob을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_printNum, "자세한 내용은 PrintJob을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Container.removeChild(childName)을 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_setInterval, "flash.utils 패키지로 옮겨졌습니다. Timer 클래스를 대신 사용해 보십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "자세한 내용은 MovieClip.nextFrame()을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_startDrag, "자세한 내용은 MovieClip.startDrag()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_stop, "자세한 내용은 MovieClip.stop()을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "자세한 내용은 Sound.stopAllSounds()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "자세한 내용은 MovieClip.stopDrag()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "도트(.) 연산자나 with 문을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "자세한 내용은 DisplayObject.stage와 Stage.quality를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "DisplayObjectContainer.removeChild(childName)을 대신 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "DisplayObjectContainer.removeChild(childName)을 대신 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "이제 이 함수는 전역 함수가 아니지만 TimerEvent, MouseEvent 및 KeyboardEvent 클래스의 메서드로 계속 사용할 수 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "자세한 내용은 Video.attachNetStream과 Video.attachCamera를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "로드를 수행하고 StyleSheet.parseCSS()로 결과를 전달하려면 URLLoader 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "ActionScript 3.0에서는 기본적으로 모든 클래스가 등록됩니다. AMF를 사용할 경우 자세한 내용은 flash.utils.registerClassAlias()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "비슷한 기능을 구현하려면 접근자 속성(get/set 함수)이나 flash.utils.Proxy 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "비슷한 기능을 구현하려면 접근자 속성(get/set 함수)이나 flash.utils.Proxy 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "자세한 내용은 MovieClip.loadMovie()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "자세한 내용은 MovieClip.loadMovieNum()을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "자세한 내용은 Loader.load()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "자세한 내용은 Loader.load()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "자세한 내용은 addEventListener ( eventName, listener, useCapture, priority )를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "자세한 내용은 addEventListener ( eventName, listener, useCapture, priority )를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "자세한 내용은 addEventListener ( eventName, listener, useCapture, priority )를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "자세한 내용은 addEventListener ( eventName, listener, useCapture, priority )를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "라이브러리에서 사운드를 생성하려면 SWF 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onStatus, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onStatus 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'status', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onID3, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onID3 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'id3', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onLoad, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onLoad 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'load', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onSoundComplete, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onSoundComplete 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'soundComplete', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onSetFocus, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onSetFocus 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'focusIn', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onResize, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onResize 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'resize', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onChanged, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onChanged 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'change', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onKillFocus, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onKillFocus 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'focusOut', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onScroller, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onScroller 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'scroll', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onMouseDown, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onMouseDown 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseDown', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onMouseUp, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onMouseUp 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseUp', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onMouseMove, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onMouseMove 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseMove', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onMouseWheel, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onMouseWheel 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseWheel', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onKeyDown, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onKeyDown 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'keyDown', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onKeyUp, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onKeyUp 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'keyUp', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onData, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onData 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'data', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onHTTPStatus 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'httpStatus', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onDragOut, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onDragOut 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseOut', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onDragOver, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onDragOver 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseOver', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onPress, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onPress 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseDown', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onRelease, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onRelease 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'click', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onReleaseOutside 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseUp', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onRollOut, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onRollOut 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseOut', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onRollOver, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onRollOver 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseOver', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onActivity, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onActivity 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'activity', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onSelect, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onSelect 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'menuSelect', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onEnterFrame, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onEnterFrame을 트리거하지 않습니다. 먼저 addEventListener ( 'enterFrame', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onUnload, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onUnload 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'unload', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onLoadComplete, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onLoadComplete를 트리거하지 않습니다. 먼저 addEventListener ( 'load', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onLoadError, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onLoadError 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'error', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onLoadInit, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onLoadInit 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'init', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onLoadProgress, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onLoadProgress 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'progress', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onLoadStart, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onLoadStart를 트리거하지 않습니다. 먼저 addEventListener ( 'start', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onClose, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onClose 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'close', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onConnect, "ActionScript 3.0에서는 Flash Player가 자동으로 onConnect 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'connect', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onXML, "ActionScript 3.0에서는 Flash Player가 자동으로 onXML을 트리거하지 않습니다. 먼저 addEventListener ( 'xml', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "hasChildNodes 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "이제 XMLEvent 클래스가 사용되지 않으며 xml 이벤트가 전달되지 않습니다. 파일 로드 중 data 이벤트만 전달됩니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "XMLDoc 클래스의 이름이 XMLDocument로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Accessibility.active 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "ActivityEvent.ACTIVITY 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "DisplayObjectContainer.parent.getChildIndex를 대신 사용하십시오. MovieClip에 의해 확장되는 DisplayObjectContainer 클래스에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "DisplayObjectContainer.parent.setChildIndex를 대신 사용하십시오. MovieClip에 의해 확장되는 DisplayObjectContainer 클래스에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "DisplayObjectContainer.getChildAt을 대신 사용하십시오. MovieClip에 의해 확장되는 DisplayObjectContainer 클래스에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "DisplayObjectContainer.numChildren을 대신 사용하십시오. DisplayObjectContainer.addChild는 항상 DisplayObjectContainer.numChildren 인덱스에 새 자식을 추가합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "ByteArray.bytesAvailable 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "ByteArray.position 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "ByteArray.position 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Camera.getCamera() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Camera.currentFPS 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Camera.keyFrameInterval 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Camera.loopback 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "ColorTransform.color 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "ColorTransform.color 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Container.textSnapshot 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "ContextMenu.clone() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "ContextMenu.forwardAndBack 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "ContextMenuItem.clone() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "CustomActions.actionsList 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "DataEvent.DATA 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "DisplayObject.scaleX 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "DisplayObject.scaleX 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "DisplayObject.scaleY 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "DisplayObject.scaleY 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "DisplayObject.mouseX 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "DisplayObject.mouseX 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "DisplayObject.mouseY 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "DisplayObject.mouseY 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "DisplayObject.name 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "DisplayObject.parent 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "DisplayObject.mask 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "DisplayObject.visible 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "DisplayObject.x 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "DisplayObject.y 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "DisplayObject.rotation 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "DisplayObject.alpha 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "DisplayObject.width 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "DisplayObject.height 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "ExternalInterface.available 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "ErrorEvent.ERROR 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Event.isDefaultPrevented 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Event.ACTIVATE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Event.ADDED 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Event.CANCEL 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Event.CHANGE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Event.CLOSE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Event.COMPLETE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Event.CONNECT 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Event.DEACTIVATE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Event.ENTER_FRAME 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Event.ID3 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Event.INIT 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Event.MOUSE_LEAVE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Event.OPEN 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Event.REMOVED 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Event.RENDER 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Event.RESIZE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Event.SCROLL 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Event.SELECT 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Event.SOUND_COMPLETE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Event.TAB_CHILDREN_CHANGE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Event.TAB_ENABLED_CHANGE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Event.TAB_INDEX_CHANGE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Event.UNLOAD 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "FocusEvent.FOCUS_IN 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "FocusEvent.FOCUS_OUT 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "FocusEvent.KEY_FOCUS_CHANGE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "FocusEvent.MOUSE_FOCUS_CHANGE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Graphics.beginBitmapFill() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "BitmapFilter.quality 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "KeyboardEvent.charCode를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "KeyboardEvent.keyCode를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "자세한 내용은 KeyboardEvent 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "자세한 내용은 KeyboardEvent.ctrlKey, KeyboardEvent.altKey 및 KeyboardEvent.shiftKey를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "PAGE_DOWN 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "PAGE_UP 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "DELETE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "CAPS_LOCK 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "NUMPAD_0 -> NUMPAD_9 상수 중 하나를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "InteractiveObject.focusRect 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "InteractiveObject.contextMenu 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "KeyboardEvent.charCode 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "KeyboardEvent.keyCode 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Loader.contentLoaderInfo 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "LoaderInfo.loaderURL 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "LocalConnection.domain 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "MenuEvent.contextMenuOwner 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Microphone.getMicrophone() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "MovieClip 하위 클래스 이름이 A일 경우 var mc= new A(); addChild(mc)를 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "var mc= new MovieClip(); addChild(mc)를 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "var tf= new TextField(); addChild(mc)를 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Container.removeChild(childName)을 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));을 사용하십시오. 자세한 내용은 Loader 및 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "DisplayObjectContainer.removeChild(childName)을 대신 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "DisplayObjectContainer.removeChild(childName)을 대신 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "DisplayObjectContainer.parent.getChildIndex를 대신 사용하십시오. 자세한 내용은 MovieClip에 의해 확장되는 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "DisplayObjectContainer.parent.setChildIndex를 대신 사용하십시오. 자세한 내용은 MovieClip에 의해 확장되는 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "DisplayObjectContainer.getChildAt을 대신 사용하십시오. 자세한 내용은 MovieClip에 의해 확장되는 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "DisplayObjectContainer.numChildren을 대신 사용하십시오. DisplayObjectContainer.addChild는 항상 DisplayObjectContainer.numChildren 인덱스에 새 자식을 추가합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "자세한 내용은 DisplayObject.addChild를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "자세한 내용은 LoaderInfo.bytesLoaded 및 Loader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "자세한 내용은 LoaderInfo.bytesTotal 및 Loader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "동일한 기능은 flash.net.URLLoader를 참조하십시오.  flash.net 패키지에도 패키지 레벨 함수인 navigateToURL()과 sendToURL()이 포함되어 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "자세한 내용은 LoaderInfo.url 및 Loader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "자세한 내용은 LoaderInfo.url 및 Loader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "MovieClip.mask 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "자세한 내용은 LoaderInfo.swfVersion 및 Loader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "MovieClip.currentFrame 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "MovieClip.framesLoaded 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "MovieClip.totalFrames 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "자세한 내용은 displayObjectInstance.root를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "자세한 내용은 displayObjectInstance.root를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "정적 속성 flash.media.SoundMixer.bufferTime을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "NetStream.bufferTime 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "NetStream.currentFPS 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "NetStream.videoCodec 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "NetStream.audioCodec 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "ProductManager.isInstalled 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "ProductManager.installedVersion 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "ProductManager.isRunning 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Point.add() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Proxy.deleteDescendants 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "heapDump() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "ProgressEvent.bytesLoaded 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "ProgressEvent.bytesTotal 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Rectangle.isEmpty 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "SoundTransform.pan 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Sockect.bytesAvailable 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "SharedObject.size 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "SharedObject.fps 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "이제 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Sprite.constructChildren() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Sprite.dropTarget 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Stage.focus 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Stage.focus 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Stage.showDefaultContextMenu 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "StyleSheet.styleNames 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "URLLoader의 인스턴스를 사용하여 StyleSheet 데이터를 로드한 후 로더 데이터를 StyleSheet.parseCSS 메서드에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "URLLoader의 인스턴스를 사용하여 StyleSheet 데이터를 로드한 후 로더 데이터를 StyleSheet.parseCSS 메서드에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "URLLoader의 인스턴스를 사용하여 StyleSheet 데이터를 로드한 후 로더 데이터를 StyleSheet.parseCSS 메서드에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "URLLoader의 인스턴스를 사용하여 StyleSheet 데이터를 로드한 후 로더 데이터를 StyleSheet.parseCSS 메서드에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "URLLoader의 인스턴스를 사용하여 StyleSheet 데이터를 로드한 후 로더 데이터를 StyleSheet.parseCSS 메서드에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "IME.enabled 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "IME.enabled 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "IME.instance 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "IME.conversionMode 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "IME.conversionMode 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "System.vmVersion 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "SWFLoaderInfo.swfVersion 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "SWFLoaderInfo.actionScriptVersion 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "TextField.defaultTextFormat 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "TextField.defaultTextFormat 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "DisplayObjectContainer.parent.getChildIndex를 대신 사용하십시오. 자세한 내용은 MovieClip에 의해 확장되는 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "DisplayObjectContainer.parent.setChildIndex를 대신 사용하십시오. 자세한 내용은 MovieClip에 의해 확장되는 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "DisplayObjectContainer.getChildAt을 대신 사용하십시오. 자세한 내용은 MovieClip에 의해 확장되는 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "DisplayObjectContainer.numChildren을 대신 사용하십시오.  DisplayObjectContainer.addChild는 항상 DisplayObjectContainer.numChildren 인덱스에 새 자식을 추가합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "TextField.replaceSelectedText() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "TextField.getLineIndexOfChar() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "TextField.selectionBeginIndex 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "TextField.selectionEndIndex 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "TextField.caretIndex 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Font.enumerateFonts() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "TextField.maxScrollV 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "TextField.scrollH 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "TextField.maxScrollH 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "TextField.defaultTextFormat 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "임시 TextField를 만들고 TextField.getLineMetrics를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "TextSnapshot.charCount 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "flash.net 패키지에 있는 navigateToURL() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "flash.net 패키지에 있는 sendToURL() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "URLLoader.dataFormat 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "URLStream.bytesAvailable 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "이제 이 속성은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "URLRequest.applicationDomain 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "요청 헤더를 추가하려면 URLRequest.requestHeaders 속성을 URLRequestHeader 객체의 배열로 설정하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "URLLoader의 인스턴스를 사용하여 XML 파일을 로드한 후 URLLoaders 데이터를 XMLDocuments 생성자에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "flash.net 패키지에 있는 sendToURL() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "URLRequest 객체의 postData 속성을 설정하고 URLLoader 객체와 함께 이 속성을 사용하여 XML 파일을 로드하십시오.  그리고 URLLoaders 데이터를 XMLDocuments 생성자에 전달하십시오. 자세한 내용은 URLLoader, URLRequest 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "URLLoader의 인스턴스를 사용하여 XML 파일을 로드한 후 URLLoaders 데이터를 XMLDocuments 생성자에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "요청 헤더를 추가하려면 URLRequest.requestHeaders 속성을 URLRequestHeader 객체의 배열로 설정하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "자세한 내용은 URLLoader.bytesLoaded 및 URLLoader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "자세한 내용은 URLLoader.bytesTotal 및 URLLoader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "URLLoader의 인스턴스를 사용하여 XML 파일을 로드한 후 로더 데이터를 StyleSheet.parseCSS 메서드에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "URLRequest.contentType 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "대신 XMLDocument.parseXML 메서드 또는 XMLDocument 생성자에서 throw될 수 있는 예외를 확인하십시오. 자세한 내용은 XMLDocument를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Button, "Button 클래스의 이름이 SimpleButton으로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Container, "Container 클래스의 이름이 DisplayObjectContainer로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Image, "Image 클래스의 이름이 BitmapData로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "ImageFilter 클래스의 이름이 BitmapFilter로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "ImageSprite 클래스의 이름이 Bitmap으로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "ImageLoaderInfo 클래스의 이름이 BitmapLoaderInfo로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "ImeEvent 클래스의 이름이 IMEEvent로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Key, "Key 클래스의 이름이 Keyboard로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "LineMetrics 클래스의 이름이 TextLineMetrics로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_LoadVars, "자세한 내용은 URLVariables 클래스, URLRequest.urlVariables와 URLRequest.postData 속성 및 URLLoader.dataFormat 속성을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "MenuEvent 클래스의 이름이 ContextMenuEvent로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "SystemCapabilities 클래스의 이름이 Capabilities로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextExtents, "TextField.getLineMetrics 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Button, "Button 클래스의 이름이 SimpleButton으로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Container, "Container 클래스의 이름이 DisplayObjectContainer로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Image, "Image 클래스의 이름이 BitmapData로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "ImageFilter 클래스의 이름이 BitmapFilter로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "ImageSprite 클래스의 이름이 Bitmap으로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "ImageLoaderInfo 클래스의 이름이 BitmapLoaderInfo로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "ImeEvent 클래스의 이름이 IMEEvent로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Key, "Key 클래스의 이름이 Keyboard로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "LineMetrics 클래스의 이름이 TextLineMetrics로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "자세한 내용은 URLVariables 클래스, URLRequest.urlVariables와 URLRequest.postData 속성 및 URLLoader.dataFormat 속성을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "MenuEvent 클래스의 이름이 ContextMenuEvent로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "SystemCapabilities 클래스의 이름이 Capabilities로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "TextField.getLineMetrics 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "자세한 내용은 비슷한 기능을 제공하는 Proxy 클래스에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "XMLUI.getProperty 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "XMLUI.setProperty 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "DisplayObject.accessibilityProperties 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "DisplayObject.scale9Grid 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Graphics.drawOval 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "NetConnection.connected 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Socket.connected 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "URLStream.connected 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "SyncEvent.changeList 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "TextField.scrollV 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "TextField.bottomScrollV 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "BitmapDataChannel.RED 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "BitmapDataChannel.GREEN 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "BitmapDataChannel.BLUE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "BitmapDataChannel.ALPHA 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_instanceof, "is 연산자를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "flash.system.Security.showSettings 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "System.useCodePage 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "flash.events.EventDispatcher 클래스를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "정적 속성 flash.media.SoundMixer.bufferTime을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "new myBitmapName()과 같이 비트맵 라이브러리 심볼 클래스의 새 인스턴스를 대신 만드십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "자세한 내용은 Loader.load()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "MovieClipLoader 클래스는 flash.display.Loader 클래스로 바뀌었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "MovieClipLoader 클래스는 flash.display.Loader 클래스로 바뀌었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "자세한 내용은 addEventListener(eventName, listener, useCapture, priority)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "flash.system.IMEConversionMode.ALPHANUMERIC_FULL 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "flash.system.IMEConversionMode.ALPHANUMERIC_HALF 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "flash.system.IMEConversionMode.CHINESE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "flash.system.IMEConversionMode.JAPANESE_HIRAGANA 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "flash.system.IMEConversionMode.KOREAN 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "flash.system.IMEConversionMode.UNKNOWN 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "자세한 내용은 addEventListener(eventName, listener, useCapture, priority)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onCancel, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onCancel 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( cancel, onCancel)을 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "직접적으로 대신 사용되는 요소는 없습니다. willTrigger() 메서드를 사용하여 등록된 리스너가 있는지 여부를 식별할 수 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onIMEComposition, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onIMEComposition 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( imeComposition, handlerName)을 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "자세한 내용은 LoaderInfo.url 및 Loader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "getFullYear() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "setFullYear() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "getUTCFullYear() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "rate 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Selection, "Selection 클래스가 제거되었습니다. 자세한 내용은 해당 Selection 정보가 필요한 클래스의 addEventListener 메서드를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Selection, "Selection 클래스가 제거되었습니다. 자세한 내용은 해당 Selection 정보가 필요한 클래스의 addEventListener 메서드를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "gain 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "ColorTransform 클래스 생성자 또는 속성을 사용하여 색상 값을 직접 할당할 수 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "ColorTransform 클래스 생성자 또는 속성을 사용하여 색상 값을 직접 할당할 수 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "flash.display.InteractiveObject 클래스의 포커스 관련 속성에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "flash.display.Graphics.beginBitmapFill 메서드에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "flash.display.DisplayObject.hitTestObject() 메서드에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "addChild() 메서드에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "load() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "사운드 채널의 진폭을 모니터링하고 제어하려면 flash.media.SoundChannel.leftPeak 및 flash.media.SoundChannel.rightPeak를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "soundTransform 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "SoundTransform.pan 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "SoundTransform.pan 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "bytesLoaded 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "bytesTotal 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "TextField에 +=를 사용하는 것은 비효율적입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "+=를 사용하여 TextField에 텍스트를 추가하는 것은 TextField.appendText() 메서드를 사용하는 것보다 몇 배나 느립니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "괄호가 누락된 것 같습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "%s 유형이 필요한 곳에 함수 값이 사용되었습니다. 이 함수 참조 다음에 괄호 ()가 누락된 것 같습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_InstanceOfChanges, "instanceof 연산자가 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "이제 instanceof 연산자는 사용되지 않습니다. is 연산자를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "이제 allowDomain() 이벤트 핸들러는 이벤트 콜백이 아닌 표준 메서드입니다. 자세한 내용은 새 LocalConnection.allowDomain 메서드를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "이제 allowInsecureDomain() 이벤트 핸들러는 이벤트 콜백이 아닌 표준 메서드입니다. 자세한 내용은 새 LocalConnection.allowInsecureDomain 메서드를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_call, "이제 전역 call() 메서드는 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Color, "Color 클래스가 제거되었습니다. 동일한 기능을 구현하려면 flash.geom.ColorTransform 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Color, "Color 클래스가 제거되었습니다. 동일한 기능을 구현하려면 flash.geom.ColorTransform 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF 파일에서는 항상 정확한 도메인 일치 규칙을 사용합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_capabilities, "capabilities 클래스의 이름이 Capabilities로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_capabilities, "capabilities 클래스의 이름이 Capabilities로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "자세한 내용은 addEventListener(eventName, listener, useCapture, priority)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onComplete, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onComplete 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'complete', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onHTTPError, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onHTTPError 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'httpError', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onIOError, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onIOError 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'ioError', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onProgress, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onProgress 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'progress', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onSecurityError, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onSecurityError 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'securityError', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onOpen, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onOpen 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'open', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "ActionScript 2.0 XML 클래스가 사용된 것 같습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "마이그레이션 문제: ActionScript 2.0 XML 클래스의 이름이 XMLDocument로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadDateCast, "Date 형 변환 연산이 잘못되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x)는 새 Date().toString()과 동일하게 동작합니다. 값을 Date 유형으로 형 변환하려면 Date(x) 대신 \"x as Date\"를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ImportHidesClass, "현재 클래스와 같은 이름을 사용하여 패키지를 가져오면 이 범위에서 클래스 식별자가 숨겨집니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "현재 클래스와 같은 이름을 사용하여 패키지를 가져오면 이 범위에서 클래스 식별자가 숨겨집니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "이름이 같은 인수가 여러 개 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "이름이 '%s'인 인수가 여러 개 지정되었습니다. 해당 인수에 대한 참조는 항상 마지막 인수로 결정됩니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Rectangle.containsRect 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_eval, "이 기능은 제거되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_getVersion, "이 기능은 flash.system.Capabilities.version 속성으로 대체되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "이 기능은 flash.display.MovieClip.framesLoaded 속성으로 대체되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp__global, "이 _global 속성은 제거되었습니다. 동일한 기능을 구현하려면 클래스의 정적 멤버를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadBoolAssignment, "Boolean 값이 필요한 곳에 Boolean이 아닌 값이 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "Boolean 값이 필요한 곳에 %s이(가) 사용되었습니다. 표현식은 Boolean으로 강제 형 변환됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadES3TypeProp, "알 수 없는 속성입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s은(는) 동적 클래스 %s의 인식되는 속성이 아닙니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadES3TypeMethod, "알 수 없는 메서드입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s은(는) 동적 클래스 %s의 인식되는 메서드가 아닙니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DuplicateVariableDef, "변수 정의가 중복되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "변수 정의가 중복되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "정의 이름이 가져온 패키지 이름과 같습니다. 해당 이름에 대한 정규화되지 않은 참조는 정의가 아닌 패키지로 결정됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "정의 이름이 가져온 패키지 이름과 같습니다. 해당 이름에 대한 정규화되지 않은 참조는 정의가 아닌 패키지로 결정됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "고정된 속성을 삭제하려 한 것 같습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "선언된 속성 %s은(는) 삭제할 수 없습니다. 관련된 메모리를 비우려면 값을 null로 설정해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Deprecated, "더 이상 사용되지 않는 정의가 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Deprecated_specific, "%s'이(가) 더 이상 사용되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedMessage, "더 이상 사용되지 않는 정의가 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "더 이상 사용되지 않는 정의가 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "%s'이(가) 더 이상 사용되지 않습니다. '%s'을(를) 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedSince, "더 이상 사용되지 않는 정의가 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "%s'이(가) %s 이후로 더 이상 사용되지 않습니다. '%s'을(를) 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "더 이상 사용되지 않는 정의가 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "%s'이(가) %s 이후로 더 이상 사용되지 않습니다." );
   }

   static final AscWarning[] warningConstantsNB= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsNB() 
   {
      int index=0;
        warningConstantsNB[index++] = new AscWarning(kWarning_NoTypeDecl, "Mangler typedeklarasjon." );
        warningConstantsNB[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s «%s» har ingen typedeklarasjon." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Ulogisk sammenligning med udefinert. Kun variabler uten type (eller variabler av typen *) kan være udefinerte." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Variabler av typen %s kan ikke være udefinerte. Den udefinerte verdien blir omgjort til type %s før sammenligning." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "Funksjon som er brukt i nytt uttrykk, returnerer en verdi. Resultatet blir det funksjonen returnerer, ikke en ny forekomst av funksjonen." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Migreringsproblem: Resultatet av ny %s blir returverdien til %s, i stedet for en ny forekomst av den funksjonen." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() uten argumenter gir usant i retur i ActionScript 3.0. Boolean() returnerte udefinert i ActionScript 2.0." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Bruke Boolean() uten argumenter." );
        warningConstantsNB[index++] = new AscWarning(kWarning_NumberFromStringChanges, "I ActionScript 3.0 ignoreres mellomromstegn og '' returnerer 0. Number() returnerer NaN i ActionScript 2.0 når parameteren er '' eller inneholder mellomromstegn." );
        warningConstantsNB[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Migreringsproblem: Når funksjonen Number('') blir kalt med et tomt strengargument, returnerer den 0 i ActionScript 3.0, og NaN i ActionScript 2.0." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString()-formatet er endret." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Migreringsproblem: Array.toString()-håndtering av nullelementer og udefinerte elementer er endret." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DepricatedPropertyError, "ActionScript 2.0-egenskap som ikke støttes." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Migreringsproblem: Egenskapen %s støttes ikke lenger. %s." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DepricatedFunctionError, "ActionScript 2.0-funksjon som ikke støttes." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Migreringsproblem: Metoden %s støttes ikke lenger. %s." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve støttes ikke lenger." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Migreringsproblem: __resolve støttes ikke lenger. Bruk den nye klassen Proxy for lignende funksjonalitet." );
        warningConstantsNB[index++] = new AscWarning(kWarning_LevelNotSupported, "_level støttes ikke lenger. Hvis du vil vite mer, kan du se på pakken flash.display." );
        warningConstantsNB[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Migreringsproblem: _level støttes ikke lenger. Hvis du vil vite mer, kan du se på pakken flash.display." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ClassIsSealed, "Klassen er forseglet. Medlemmer kan ikke legges til dynamisk." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Migreringsproblem: %s er ikke en dynamisk klasse. Det går ikke an å legge medlemmer til forekomster dynamisk." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Endring i omfang for nøkkelordet «this». Klassemetoder som er trukket ut fra en forekomst av en klasse, løser alltid dette tilbake til den forekomsten. I ActionScript 2.0 slås dette opp dynamisk, basert på hvor metoden ble aktivert fra." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Migreringsproblem: Metoden %s kommer til å oppføre seg annerledes i ActionScript 3.0, på grunn av endringen i omfanget for nøkkelordet «this». Du finner mer informasjon i oppføringen for advarsel 1083." );
        warningConstantsNB[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Mangler deklarasjon for navneområdet (for eksempel er ikke variabelen definert som public, private osv.)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "Omfanget til %s settes til standard navneområde: %s internal. Det blir ikke synlig utenfor denne pakken." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 gjentas over egenskapene til et objekt innen en \"for x in mål\"-setning i tilfeldig rekkefølge." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Migreringsproblem: ActionScript 3.0 gjentas over egenskapene til et objekt innen en \"for x in mål\"-setning i tilfeldig rekkefølge." );
        warningConstantsNB[index++] = new AscWarning(kWarning_InternalError, "Intern feil i kompilatoren." );
        warningConstantsNB[index++] = new AscWarning(kWarning_InternalError_specific, "Feilkode: %s." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler ble ikke lagt til som et lytteobjekt." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Migreringsproblem: %s" );
        warningConstantsNB[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Negativ verdi blir en stor positiv verdi når den er tilordnet en uint-datatype." );
        warningConstantsNB[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Negativ verdi brukt der en uint-verdi (ikke negativ) er forventet." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadNullComparision, "Ulogisk sammenligning med null." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Ulogisk sammenligning med null. Variabler av typen %s kan ikke være null." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadNaNComparision, "Ulogisk sammenligning med NaN. Enhver sammenligningsoperasjon med NaN evalueres som usann fordi NaN != NaN." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Ulogisk sammenligning med NaN. Denne setningen evalueres alltid som usann." );
        warningConstantsNB[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Tilordning innen betinget." );
        warningConstantsNB[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Tilordning innen betinget. Mente du == i stedet for =?" );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadNullAssignment, "Umulig nulltilordning." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "null brukt der en %s-verdi var forventet." );
        warningConstantsNB[index++] = new AscWarning(kWarning_NoConstructor, "Mangler konstruktør." );
        warningConstantsNB[index++] = new AscWarning(kWarning_NoConstructor_specific, "Finner ingen konstruktørfunksjon for klassen %s." );
        warningConstantsNB[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Tom setning." );
        warningConstantsNB[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Tom setning funnet der kodeblokk var forventet. Skrev du \";\" ved et uhell?" );
        warningConstantsNB[index++] = new AscWarning(kWarning_ConstNotInitialized, "Konstant er ikke initialisert." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "Konstanten ble ikke initialisert." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadArrayCast, "Muligens ugyldig Array-plasseringsoperasjon." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) oppfører seg på samme måte som nye Array(x). Hvis du vil plassere en verdi til typen Array, bruker du uttrykket x som Array i stedet for Array(x)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "super()-setningen ble ikke kalt i konstruktøren." );
        warningConstantsNB[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "super()-setningen blir utført før denne konstruktøren legges inn. Legg til et kall til super() i konstruktøren hvis du ønsker å ha direkte kontroll over når den utføres." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_version, "Bruk Capabilities.version i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Hvis du vil vite mer, kan du se på InteractiveObject.focusRect." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Highquality, "Hvis du vil vite mer, kan du se på Stage.quality." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Hvis du vil vite mer, kan du se på Stage.quality." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Hvis du vil vite mer, kan du se på Stage.quality." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Quality, "Hvis du vil vite mer, kan du se på Stage.quality." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Bruk den statiske egenskapen flash.media.SoundMixer.bufferTime i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Denne funksjonaliteten støttes ikke lenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Hvis du vil vite mer, kan du se på LoaderInfo.url." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Denne funksjonaliteten støttes ikke lenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_NewLine, "Bruk \n for ny linje." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Hvis du vil vite mer, kan du se på textField.maxScroll." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Level, "Nivåkonseptet finnes ikke i ActionScript 3.0. Den gir i stedet direkte tilgang til visningslisten. Du finner mer informasjon i flash.display-pakken." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Parent, "Bruk egenskapen parent i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Root, "Denne egenskapen er fjernet. Stage er den nærmest tilsvarende egenskapen, som også er root for visningslisten til ActionScript 3.0." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Prøv å deklarere kalleren som et argument i funksjonen i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Denne funksjonaliteten støttes ikke lenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Bruk egenskapen parent i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Denne funksjonaliteten støttes ikke lenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Hvis du vil vite mer, kan du se på Sprite.hitArea." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Scroll, "Hvis du vil vite mer, kan du se på egenskapene scrollH og scrollV for klassen flash.text.TextField." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Bruk MovieClip-objekter som argumenter direkte i stedet for som baner." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Hvis du vil vite mer, kan du se på Video.videoHeight." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Hvis du vil vite mer, kan du se på Video.videoWidth." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp__Proto__, "Hvis du vil vite mer, kan du se på foreldede __proto__." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Stage, "Hvis du vil vite mer, kan du se på DisplayObject.stage." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Bruk metoden registerClass() i pakken flash.net i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_random, "Bruk Math.random() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_chr, "Bruk String.fromCharCode() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Bruk String.fromCharCode() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ord, "Bruk String.charCodeAt() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_mbord, "Bruk String.charCodeAt() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_substring, "Bruk metoden String.substr i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Bruk metoden String.substr i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_length, "Bruk lengdeegenskapen til argumentet i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_mblength, "Bruk lengdeegenskapen til argumentet i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Hvis du vil vite mer, kan du se på endringene i ASnative." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Angi egenskaper direkte på forekomsten med punktnotasjon (.) i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Bruk direkte tilgang til egenskaper med punktnotasjon (.) i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Angi egenskaper direkte på forekomsten med punktnotasjon (.) i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Hvis du vil vite mer, kan du se på TextEvent.LINK og addEventListener()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Denne metoden har flyttet til pakken flash.utils." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Byttet ut med ny MovieClip-klassekonstruktørfunksjon." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Flyttet til flash.system-pakke. Se også klassen flash.external.ExternalInterface for Javascript/ActionScript-kommunikasjon." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_getURL, "Du finner tilsvarende funksjonalitet i flash.net.URLLoader. Pakken flash.net inneholder også pakkenivåfunksjonene navigateToURL() og sendToURL()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Hvis du vil vite mer, kan du se på MovieClip.gotoAndPlay()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Hvis du vil vite mer, kan du se på MovieClip.gotoAndStop()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_play, "Hvis du vil vite mer, kan du se på MovieClip.play()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_print, "Hvis du vil vite mer, kan du se på PrintJob.start()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Hvis du vil vite mer, kan du se på PrintJob." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Hvis du vil vite mer, kan du se på PrintJob." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_printNum, "Hvis du vil vite mer, kan du se på PrintJob." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Bruk Container.removeChild(childName). Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Flyttet til flash.utils-pakke. Prøv å bruke Timer-klassen i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Hvis du vil vite mer, kan du se på MovieClip.nextFrame()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Hvis du vil vite mer, kan du se på MovieClip.startDrag()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_stop, "Hvis du vil vite mer, kan du se på MovieClip.stop()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Hvis du vil vite mer, kan du se på Sound.stopAllSounds()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Hvis du vil vite mer, kan du se på MovieClip.stopDrag()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Bruk punktoperatoren (.) eller with-setningen i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Hvis du vil vite mer, kan du se på DisplayObject.stage og Stage.quality." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Bruk Use DisplayObjectContainer.removeChild(childName) i stedet. Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Bruk Use DisplayObjectContainer.removeChild(childName) i stedet. Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Denne funksjonen er ikke lenger en global funksjon, men er fremdeles tilgjengelig som en metode for klassene TimerEvent, MouseEvent og KeyboardEvent." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Hvis du vil vite mer, kan du se på Video.attachNetStream, Video.attachCamera." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Bruk URLLoader-klassen til å utføre innlasting, og send resultatet til StyleSheet.parseCSS()" );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "I ActionScript 3.0 er alle klasser registrert som standard. Hvis du bruker AMF, kan du finne mer informasjon i flash.utils.registerClassAlias()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Bruk aksessoregenskaper (get/set-funksjoner) eller klassen flash.utils.Proxy for å få lignende funksjonalitet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Bruk aksessoregenskaper (get/set-funksjoner) eller klassen flash.utils.Proxy for å få lignende funksjonalitet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Hvis du vil vite mer, kan du se på MovieClip.loadMovie()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Hvis du vil vite mer, kan du se på MovieClip.loadMovieNum()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Hvis du vil vite mer, kan du se på Loader.load()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Hvis du vil vite mer, kan du se på Loader.load()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Hvis du vil vite mer, kan du se på addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Hvis du vil vite mer, kan du se på removeEventListener (eventName, listener, useCapture)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Hvis du vil vite mer, kan du se på addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Hvis du vil vite mer, kan du se på removeEventListener (eventName, listener, useCapture)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Hvis du vil vite mer, kan du se på addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Hvis du vil vite mer, kan du se på removeEventListener (eventName, listener, useCapture)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Hvis du vil vite mer, kan du se på addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Hvis du vil vite mer, kan du se på removeEventListener (eventName, listener, useCapture)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Bruk SWF-klassen til å lage lyder fra biblioteket" );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onStatus, "Hendelsesbehandleren onStatus utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (status, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onID3, "Hendelsesbehandleren onID3 utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (id3, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onLoad, "Hendelsesbehandleren onLoad utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (load, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onSoundComplete, "Hendelsesbehandleren onSoundComplete utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (soundComplete, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onSetFocus, "Hendelsesbehandleren onSetFocus utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (focusIn, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onResize, "Hendelsesbehandleren onResize utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (resize, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onChanged, "Hendelsesbehandleren onChanged utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (change, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onKillFocus, "Hendelsesbehandleren onKillFocus utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (focusOut, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onScroller, "Hendelsesbehandleren onScroller utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (scroll, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onMouseDown, "Hendelsesbehandleren onMouseDown utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (mouseDown, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onMouseUp, "Hendelsesbehandleren onMouseUp utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (mouseUp, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onMouseMove, "Hendelsesbehandleren onMouseMove utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (mouseMove, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onMouseWheel, "Hendelsesbehandleren onMouseWheel utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (mouseWheel, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onKeyDown, "Hendelsesbehandleren onKeyDown utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (keyDown, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onKeyUp, "Hendelsesbehandleren onKeyUp utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (keyUp, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onData, "Hendelsesbehandleren onData utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (data, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "Hendelsesbehandleren onHTTPStatus utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (httpStatus, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onDragOut, "Hendelsesbehandleren onDragOut utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (mouseOut, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onDragOver, "Hendelsesbehandleren onDragOver utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (mouseOver, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onPress, "Hendelsesbehandleren onPress utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (mouseDown, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onRelease, "Hendelsesbehandleren onRelease utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (click, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "Hendelsesbehandleren onReleaseOutside utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (mouseUp, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onRollOut, "Hendelsesbehandleren onRollOut utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (mouseOut, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onRollOver, "Hendelsesbehandleren onRollOver utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (mouseOver, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onActivity, "Hendelsesbehandleren onActivity utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (activity, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onSelect, "Hendelsesbehandleren onSelect utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (menuSelect, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onEnterFrame, "onEnterFrame utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (enterFrame, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onUnload, "Hendelsesbehandleren onUnload utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (unload, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onLoadComplete, "onLoadComplete utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (load, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onLoadError, "Hendelsesbehandleren onLoadError utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (error, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onLoadInit, "Hendelsesbehandleren onLoadInit utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (init, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onLoadProgress, "Hendelsesbehandleren onLoadProgress utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (progress, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onLoadStart, "onLoadStart utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (start, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onClose, "Hendelsesbehandleren onClose utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (close, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onConnect, "Hendelsesbehandleren onConnect utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (connect, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onXML, "onXML utløses ikke automatisk av Flash Player i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (xml, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Bruk egenskapen hasChildNodes i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "XMLEvent-klassen er utdatert, og xml-hendelsen sendes ikke lenger. Bare datahendelsen sendes ved fillasting." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "XMLDoc-klassen heter nå XMLDocument." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Bruk egenskapen Accessibility.active i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Bruk konstanten ActivityEvent.ACTIVITY i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Bruk DisplayObjectContainer.parent.getChildIndex i stedet. Se hjelpen for klassen DisplayObjectContainer, som utvides av MovieClip." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Bruk DisplayObjectContainer.parent.setChildIndex i stedet. Se hjelpen for klassen DisplayObjectContainer, som utvides av MovieClip." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Bruk DisplayObjectContainer.getChildAt i stedet. Se hjelpen for klassen DisplayObjectContainer, som utvides av MovieClip." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Bruk DisplayObjectContainer.numChildren i stedet. DisplayObjectContainer.addChild legger alltid den nye underordnede til indeksen DisplayObjectContainer.numChildren." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Bruk egenskapen ByteArray.bytesAvailable i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Bruk egenskapen ByteArray.position i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Bruk egenskapen ByteArray.position i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Bruk metoden Camera.getCamera() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Bruk egenskapen Camera.currentFPS i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Bruk egenskapen Camera.keyFrameInterval i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Bruk egenskapen Camera.loopback i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Bruk egenskapen ColorTransform.color i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Bruk egenskapen ColorTransform.color i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Bruk egenskapen Container.textSnapshot i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Bruk metoden ContextMenu.clone() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Bruk egenskapen ContextMenu.forwardAndBack i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Bruk metoden ContextMenuItem.clone() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Bruk egenskapen CustomActions.actionsList i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Bruk konstanten DataEvent.DATA i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Bruk egenskapen DisplayObject.scaleX i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Bruk egenskapen DisplayObject.scaleX i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Bruk egenskapen DisplayObject.scaleY i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Bruk egenskapen DisplayObject.scaleY i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Bruk egenskapen DisplayObject.mouseX i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Bruk egenskapen DisplayObject.mouseX i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Bruk egenskapen DisplayObject.mouseY i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Bruk egenskapen DisplayObject.mouseY i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Denne funksjonen støttes ikke lenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Denne funksjonen støttes ikke lenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Bruk egenskapen DisplayObject.name i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Bruk egenskapen DisplayObject.parent i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Bruk egenskapen DisplayObject.mask i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Bruk egenskapen DisplayObject.visible i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Bruk egenskapen DisplayObject.x i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Bruk egenskapen DisplayObject.y i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Bruk egenskapen DisplayObject.rotation i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Bruk egenskapen DisplayObject.alpha i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Bruk egenskapen DisplayObject.width i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Bruk egenskapen DisplayObject.height i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Bruk egenskapen ExternalInterface.available i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Bruk konstanten ErrorEvent.ERROR i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Bruk egenskapen Event.isDefaultPrevented i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Bruk konstanten Event.ACTIVATE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Bruk konstanten Event.ADDED i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Bruk konstanten Event.CANCEL i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Bruk konstanten Event.CHANGE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Bruk konstanten Event.CLOSE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Bruk konstanten Event.COMPLETE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Bruk konstanten Event.CONNECT i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Bruk konstanten Event.DEACTIVATE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Bruk konstanten Event.ENTER_FRAME i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Bruk konstanten Event.ID3 i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Bruk konstanten Event.INIT i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Bruk konstanten Event.MOUSE_LEAVE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Bruk konstanten Event.OPEN i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Bruk konstanten Event.REMOVED i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Bruk konstanten Event.RENDER i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Bruk konstanten Event.RESIZE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Bruk konstanten Event.SCROLL i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Bruk konstanten Event.SELECT i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Bruk konstanten Event.SOUND_COMPLETE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Bruk konstanten Event.TAB_CHILDREN_CHANGE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Bruk konstanten Event.TAB_ENABLED_CHANGE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Bruk konstanten Event.TAB_INDEX_CHANGE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Bruk konstanten Event.UNLOAD i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Bruk konstanten FocusEvent.FOCUS_IN i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Bruk konstanten FocusEvent.FOCUS_OUT i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Bruk konstanten FocusEvent.KEY_FOCUS_CHANGE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Bruk konstanten FocusEvent.MOUSE_FOCUS_CHANGE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Bruk metoden Graphics.beginBitmapFill() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Bruk egenskapen BitmapFilter.quality i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Bruk KeyboardEvent.charCode i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Bruk KeyboardEvent.keyCode i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Hvis du vil vite mer, kan du se på klassen KeyboardEvent." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Hvis du vil vite mer, kan du se på KeyboardEvent.ctrlKey, KeyboardEvent.altKey og KeyboardEvent.shiftKey." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Bruk konstanten PAGE_DOWN i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Bruk konstanten PAGE_UP i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Bruk konstanten DELETE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Bruk konstanten CAPS_LOCK i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Bruk en av konstantene NUMPAD_0 -> NUMPAD_9 i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Bruk egenskapen InteractiveObject.focusRect i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Bruk egenskapen InteractiveObject.contextMenu i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Bruk egenskapen KeyboardEvent.charCode i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Bruk egenskapen KeyboardEvent.keyCode i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Bruk egenskapen KeyboardEvent.contentLoaderInfo i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Denne funksjonen støttes ikke lenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Denne funksjonen støttes ikke lenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Bruk egenskapen LoaderInfo.loaderURL i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Bruk egenskapen LocalConnection.domain i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Bruk egenskapen MenuEvent.contextMenuOwner i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Bruk metoden Microphone.getMicrophone() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Hvis MovieClip-underklassenavnet er A, bruker du var mc= new A(); addChild(mc). Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Bruk var mc= new MovieClip(); addChild(mc). Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Bruk var tf= new TextField(); addChild(mc). Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Bruk Container.removeChild(childName). Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Bruk var l = new Loader(); addChild(l); l.load(new URLRequest(\"din url\"));. Hvis du vil vite mer, kan du se på klassene Loader og DisplayObjectContainer." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Bruk Use DisplayObjectContainer.removeChild(childName) i stedet. Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Bruk Use DisplayObjectContainer.removeChild(childName) i stedet. Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Bruk DisplayObjectContainer.parent.getChildIndex i stedet. Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer, som MovieClip forlenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Bruk DisplayObjectContainer.parent.setChildIndex i stedet. Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer, som MovieClip forlenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Bruk DisplayObjectContainer.getChildAt i stedet. Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer, som MovieClip forlenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Bruk DisplayObjectContainer.numChildren i stedet. DisplayObjectContainer.addChild legger alltid den nye underordnede til indeksen DisplayObjectContainer.numChildren." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Hvis du vil vite mer, kan du se på DisplayObject.addChild." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Hvis du vil vite mer, kan du se på LoaderInfo.bytesLoaded og Loader-klassen." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Hvis du vil vite mer, kan du se på LoaderInfo.bytesTotal og Loader-klassen." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Du finner tilsvarende funksjonalitet i flash.net.URLLoader. Pakken flash.net inneholder også pakkenivåfunksjonene navigateToURL() og sendToURL()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Hvis du vil vite mer, kan du se på LoaderInfo.url og Loader-klassen." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Hvis du vil vite mer, kan du se på LoaderInfo.url og Loader-klassen." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Bruk egenskapen MovieClip.mask i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Hvis du vil vite mer, kan du se på LoaderInfo.swfVersion og Loader-klassen." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Bruk egenskapen MovieClip.currentFrame i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Bruk egenskapen MovieClip.framesLoaded i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Bruk egenskapen MovieClip.totalFrames i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Hvis du vil vite mer, kan du se på displayObjectInstance.root." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Hvis du vil vite mer, kan du se på displayObjectInstance.root." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Bruk den statiske egenskapen flash.media.SoundMixer.bufferTime i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Hvis du vil vite mer, kan du se på klassen Graphics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Bruk egenskapen NetStream.bufferTime i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Bruk egenskapen NetStream.currentFPS i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Bruk egenskapen NetStream.videoCodec i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Bruk egenskapen NetStream.audioCodec i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Bruk egenskapen ProductManager.isInstalled i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Bruk egenskapen ProductManager.installedVersion i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Bruk egenskapen ProductManager.isRunning i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Bruk metoden Point.add() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Bruk egenskapen Proxy.deleteDescendants i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Bruk metoden heapDump() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Bruk egenskapen ProgressEvent.bytesLoaded i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Bruk egenskapen ProgressEvent.bytesTotal i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Bruk egenskapen Rectangle.isEmpty i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Bruk egenskapen SoundTransform.pan i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Bruk egenskapen Sockect.bytesAvailable i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Bruk egenskapen SharedObject.size i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Bruk egenskapen SharedObject.fps i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Dette støttes ikke lenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Bruk metoden Sprite.constructChildren() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Bruk egenskapen Sprite.dropTarget i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Bruk egenskapen Stage.focus i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Bruk egenskapen Stage.focus i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Bruk egenskapen Stage.showDefaultContextMenu i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Bruk egenskapen StyleSheet.styleNames i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Bruk en forekomst av URLLoader for å laste inn StyleSheet-data, og send deretter innlastingsdataene til metoden StyleSheet.parseCSS. Hvis du vil vite mer, kan du se på klassene URLLoader og EventDispatcher." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Bruk en forekomst av URLLoader for å laste inn StyleSheet-data, og send deretter innlastingsdataene til metoden StyleSheet.parseCSS. Hvis du vil vite mer, kan du se på klassene URLLoader og EventDispatcher." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Bruk en forekomst av URLLoader for å laste inn StyleSheet-data, og send deretter innlastingsdataene til metoden StyleSheet.parseCSS. Hvis du vil vite mer, kan du se på klassene URLLoader og EventDispatcher." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Bruk en forekomst av URLLoader for å laste inn StyleSheet-data, og send deretter innlastingsdataene til metoden StyleSheet.parseCSS. Hvis du vil vite mer, kan du se på klassene URLLoader og EventDispatcher." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Bruk en forekomst av URLLoader for å laste inn StyleSheet-data, og send deretter innlastingsdataene til metoden StyleSheet.parseCSS. Hvis du vil vite mer, kan du se på klassene URLLoader og EventDispatcher." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Bruk egenskapen IME.enabled i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Bruk egenskapen IME.enabled i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Bruk egenskapen IME.instance i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Bruk egenskapen IME.conversionMode i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Bruk egenskapen IME.conversionMode i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Bruk egenskapen System.vmVersion i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Bruk egenskapen SWFLoaderInfo.swfVersion i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Bruk egenskapen SWFLoaderInfo.actionScriptVersion i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Bruk egenskapen TextField.defaultTextFormat i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Bruk egenskapen TextField.defaultTextFormat i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Bruk DisplayObjectContainer.parent.getChildIndex i stedet. Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer, som MovieClip forlenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Bruk DisplayObjectContainer.parent.setChildIndex i stedet. Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer, som MovieClip forlenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Bruk DisplayObjectContainer.getChildAt i stedet. Hvis du vil vite mer, kan du se på klassen DisplayObjectContainer, som MovieClip forlenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Bruk DisplayObjectContainer.numChildren i stedet. DisplayObjectContainer.addChild legger alltid den nye underordnede til indeksen DisplayObjectContainer.numChildren." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Bruk metoden TextField.replaceSelectedText() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Bruk metoden TextField.getLineIndexOfChar() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Bruk egenskapen TextField.selectionBeginIndex i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Bruk egenskapen TextField.selectionEndIndex i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Bruk egenskapen TextField.caretIndex i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Bruk metoden Font.enumerateFonts() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Bruk egenskapen TextField.maxScrollV i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Bruk egenskapen TextField.scrollH i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Bruk egenskapen TextField.maxScrollH i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Bruk egenskapen TextField.defaultTextFormat i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Opprett et midlertidig TextField og bruk TextField.getLineMetrics i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Bruk egenskapen TextSnapshot.charCount i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Bruk metoden navigateToURL() i pakken flash.net i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Bruk metoden sendToURL() i pakken flash.net i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Bruk egenskapen URLLoader.dataFormat i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Bruk egenskapen URLStream.bytesAvailable i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Denne egenskapen støttes ikke lenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Bruk egenskapen URLRequest.applicationDomain i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Du legger til topptekst for forespørsler ved å angi egenskapen URLRequest.requestHeaders til en matrise av URLRequestHeader-objekter." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Bruk en forekomst av URLLoader til å laste inn XML-filen, og send deretter URLLoader-data til XMLDocuments-konstruktøren. Hvis du vil vite mer, kan du se på klassene URLLoader og EventDispatcher." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Bruk metoden sendToURL() i pakken flash.net i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Angi en postData-egenskap for et URLRequest-objekt og bruk det med et URLLoader-objekt for å laste XML-filen. Send URLLoaders-dataene til XMLDocuments-konstruktøren. Hvis du vil vite mer, kan du se på klassene URLLoader, URLRequest og EventDispatcher." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Bruk en forekomst av URLLoader til å laste inn XML-filen, og send deretter URLLoader-data til XMLDocuments-konstruktøren. Hvis du vil vite mer, kan du se på klassene URLLoader og EventDispatcher." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Du legger til topptekst for forespørsler ved å angi egenskapen URLRequest.requestHeaders til en matrise av URLRequestHeader-objekter." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Hvis du vil vite mer, kan du se på URLLoader.bytesLoaded og URLLoader-klassen." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Hvis du vil vite mer, kan du se på URLLoader.bytesTotal og URLLoader-klassen." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Bruk en forekomst av URLLoader til å laste inn XML-filen, og send deretter innlastingsdata til StyleSheet.parseCSS-metoden. Hvis du vil vite mer, kan du se på klassene URLLoader og EventDispatcher." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Bruk egenskapen URLRequest.contentType i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Se etter mulige unntak som har oppstått i XMLDocument-konstruktøren eller XMLDocument.parseXML-metoden i stedet. Hvis du vil vite mer, kan du se på XMLDocument." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Button, "Button-klassen heter nå SimpleButton." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Container, "Container-klassen heter nå DisplayObjectContainer." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Image, "Image-klassen heter nå BitmapData." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "ImageFilter-klassen heter nå BitmapFilter." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "ImageSprite-klassen heter nå Bitmap." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "ImageLoaderInfo-klassen heter nå BitmapLoaderInfo." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "ImeEvent-klassen heter nå IMEEvent." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Key, "Key-klassen heter nå Keyboard." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "LineMetrics-klassen heter nå TextLineMetrics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Hvis du vil vite mer, kan du se på URLVariables-klassen, egenskapene URLRequest.urlVariables og URLRequest.postData, og egenskapen URLLoader.dataFormat." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "MenuEvent-klassen heter nå ContextMenuEvent." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "SystemCapabilities-klassen heter nå Capabilities." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Bruk egenskapen TextField.getLineMetrics i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Button, "Button-klassen heter nå SimpleButton." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Container, "Container-klassen heter nå DisplayObjectContainer." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Image, "Image-klassen heter nå BitmapData." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "ImageFilter-klassen heter nå BitmapFilter." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "ImageSprite-klassen heter nå Bitmap." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "ImageLoaderInfo-klassen heter nå BitmapLoaderInfo." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "ImeEvent-klassen heter nå IMEEvent." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Key, "Key-klassen heter nå Keyboard." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "LineMetrics-klassen heter nå TextLineMetrics." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Hvis du vil vite mer, kan du se på URLVariables-klassen, egenskapene URLRequest.urlVariables og URLRequest.postData, og egenskapen URLLoader.dataFormat." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "MenuEvent-klassen heter nå ContextMenuEvent." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "SystemCapabilities-klassen heter nå Capabilities." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Bruk egenskapen TextField.getLineMetrics i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Hvis du vil vite mer, kan du se i hjelpen for Proxy-klassen, som gir lignende funksjonalitet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Bruk metoden XMLUI.getProperty i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Bruk metoden XMLUI.setProperty i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Bruk egenskapen DisplayObject.accessibilityProperties i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Bruk egenskapen DisplayObject.scale9Grid i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Bruk metoden Graphics.drawOval i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Bruk egenskapen NetConnection.connected i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Bruk egenskapen Sockect.connected i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Bruk egenskapen URLStream.connected i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Bruk egenskapen SyncEvent.changeList i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Bruk egenskapen TextField.scrollV i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Bruk egenskapen TextField.bottomScrollV i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Bruk konstanten BitmapDataChannel.RED i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Bruk konstanten BitmapDataChannel.GREEN i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Bruk konstanten BitmapDataChannel.BLUE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Bruk konstanten BitmapDataChannel.ALPHA i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Bruk operatoren is i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Bruk metoden flash.system.Security.showSettings i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Bruk egenskapen System.useCodePage i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Bruk klassen flash.events.EventDispatcher i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Bruk den statiske egenskapen flash.media.SoundMixer.bufferTime i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Opprett en ny forekomst av klassen for punktgrafikkbiblioteksymbol, dvs. nye myBitmapName(), i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Hvis du vil vite mer, kan du se på Loader.load()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "MovieClipLoader-klassen er byttet ut med flash.display.Loader-klassen." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "MovieClipLoader-klassen er byttet ut med flash.display.Loader-klassen." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Hvis du vil vite mer, kan du se på addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Hvis du vil vite mer, kan du se på removeEventListener (eventName, listener, useCapture)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Bruk konstanten flash.system.IMEConversionMode.ALPHANUMERIC_FULL i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Bruk konstanten flash.system.IMEConversionMode.ALPHANUMERIC_HALF i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Bruk konstanten flash.system.IMEConversionMode.CHINESE i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Bruk konstanten flash.system.IMEConversionMode.JAPANESE_HIRAGANA i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Bruk konstanten flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Bruk konstanten flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Bruk konstanten flash.system.IMEConversionMode.KOREAN i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Bruk konstanten flash.system.IMEConversionMode.UNKNOWN i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Hvis du vil vite mer, kan du se på addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Hvis du vil vite mer, kan du se på removeEventListener (eventName, listener, useCapture)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onCancel, "Hendelsesbehandleren onCancel utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (cancel, onCancel)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Det finnes ingen direkte erstatning. willTrigger()-metoden kan brukes til å finne ut om noen lytteobjekter er registrert." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onIMEComposition, "Hendelsesbehandleren onIMEComposition utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (imeComposition, handlerName)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Hvis du vil vite mer, kan du se på LoaderInfo.url og Loader-klassen." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Bruk metoden getFullYear() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Bruk metoden setFullYear() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Bruk metoden getUTCFullYear() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Bruk egenskapen rate i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Selection, "Klassen Selection er fjernet. Hvis du vil vite mer, kan du se på addEventListener-metoden til klassen du vil ha selection-informasjon fra." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Selection, "Klassen Selection er fjernet. Hvis du vil vite mer, kan du se på addEventListener-metoden til klassen du vil ha selection-informasjon fra." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Bruk egenskapen gain i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Fargeverdier kan tilordnes direkte med klassekonstruktøren ColorTransform eller egenskaper." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Fargeverdier kan tilordnes direkte med klassekonstruktøren ColorTransform eller egenskaper." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Se i hjelpen for fokusrelaterte egenskaper for klassen flash.display.InteractiveObject." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Se i hjelpen for metoden flash.display.Graphics.beginBitmapFill." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Se i hjelpen for metoden flash.display.DisplayObject.hitTestObject()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Se i hjelpen for metoden addChild()." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Bruk metoden load() i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Bruk Use flash.media.SoundChannel.leftPeak og flash.media.SoundChannel.rightPeak til å overvåke og kontrollere amplitude for en lydkanal." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Bruk egenskapen soundTransform i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Bruk egenskapen SoundTransform.pan i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Bruk egenskapen SoundTransform.pan i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Bruk egenskapen bytesLoaded i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Bruk egenskapen bytesTotal i stedet." );
        warningConstantsNB[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Ineffektiv bruk av += for et TextField." );
        warningConstantsNB[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Det å legge til tekst i et TextField med += er mye tregere enn å bruke metoden TextField.appendText()." );
        warningConstantsNB[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Mulig manglende parenteser." );
        warningConstantsNB[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Funksjonsverdi brukt der typen %s var forventet. Det kan hende at parentesene () mangler etter denne funksjonsreferansen." );
        warningConstantsNB[index++] = new AscWarning(kWarning_InstanceOfChanges, "Bruk av instanceof-operatoren." );
        warningConstantsNB[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "instanceof-operatoren er avskrevet, bruk is-operatoren i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "Hendelsesbehandleren allowDomain() er nå en standardmetode, ikke en handlingscallback. Hvis du vil vite mer, kan du se på den nye metoden LocalConnection.allowDomain." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "Hendelsesbehandleren allowInsecureDomain() er nå en standardmetode, ikke en handlingscallback. Hvis du vil vite mer, kan du se på den nye metoden LocalConnection.allowInsecureDomain." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_call, "Den globale metoden call() støttes ikke lenger." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_Color, "Klassen Color er fjernet. Bruk klassen flash.geom.ColorTransform for tilsvarende funksjonalitet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Color, "Klassen Color er fjernet. Bruk klassen flash.geom.ColorTransform for tilsvarende funksjonalitet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF-filer bruker alltid nøyaktige regler for domenesamsvar." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp_capabilities, "Klassen capabilities heter nå Capabilities." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_capabilities, "Klassen capabilities heter nå Capabilities." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Hvis du vil vite mer, kan du se på addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Hvis du vil vite mer, kan du se på removeEventListener (eventName, listener, useCapture)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onComplete, "Hendelsesbehandleren onComplete utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (complete, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onHTTPError, "Hendelsesbehandleren onHTTPError utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (httpError, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onIOError, "Hendelsesbehandleren onIOError utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (ioError, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onProgress, "Hendelsesbehandleren onProgress utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (progress, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onSecurityError, "Hendelsesbehandleren onSecurityError utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (securityError, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Event_onOpen, "Hendelsesbehandleren onOpen utløses ikke automatisk av Flash Player ved kjøretid i ActionScript 3.0. Du må først registrere denne behandleren for hendelsen med addEventListener (open, callback_handler)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Mulig bruk av ActionScript 2.0-XML-klassen." );
        warningConstantsNB[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Migreringsproblem: ActionScript 2.0 XML-klassen heter nå XMLDocument." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadDateCast, "Ugyldig Date-plasseringsoperasjon" );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) oppfører seg på samme måte som nye Date().toString(). Hvis du vil plassere en verdi til typen Date, bruker du \"x as Date\" i stedet for Date(x)." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ImportHidesClass, "Import av en pakke med samme navn som gjeldende klasse, vil skjule klasseidentifikatoren i dette området." );
        warningConstantsNB[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Import av en pakke med samme navn som gjeldende klasse, vil skjule klasseidentifikatoren i dette området." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Flere enn ett argument har samme navn." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Flere enn ett argument med navnet %s er angitt. Referanser til dette argumentet løses alltid til det siste av dem." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Bruk metoden Rectangle.containsRect i stedet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_eval, "Denne funksjonaliteten er fjernet." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Denne funksjonaliteten er byttet ut med egenskapen flash.system.Capabilities.version." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Denne funksjonaliteten er byttet ut med egenskapen flash.display.MovieClip.framesLoaded." );
        warningConstantsNB[index++] = new AscWarning(kUnsupportedProp__global, "Egenskapen _global er fjernet. Du kan oppnå tilsvarende funksjonalitet ved å bruke et statisk klassemedlem." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadBoolAssignment, "Ikke-boolsk verdi ble brukt når det ble forventet en boolsk verdi." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "%s brukt der en boolsk verdi var forventet. Uttrykkstypen blir gjort om til boolsk." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadES3TypeProp, "Ukjent egenskap." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s er ikke en kjent egenskap for den dynamiske klassen %s." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Ukjent metode." );
        warningConstantsNB[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s er ikke en kjent metode for den dynamiske klassen %s." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Duplisert variabeldefinisjon." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Duplisert variabeldefinisjon." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Definisjonsnavnet er det samme som et importert pakkenavn. Ikke-kvalifiserte referanser til dette navnet løses til pakken og ikke til definisjonen." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Definisjonsnavnet er det samme som et importert pakkenavn. Ikke-kvalifiserte referanser til dette navnet løses til pakken og ikke til definisjonen." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Mulig forsøk på å slette en fast egenskap." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "Den deklarerte egenskapen %s kan ikke slettes. Hvis du vil frigjøre tilordnet minne, kan du sette verdien til null." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Deprecated, "Bruk av avskrevet definisjon." );
        warningConstantsNB[index++] = new AscWarning(kWarning_Deprecated_specific, "%s er avskrevet." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DeprecatedMessage, "Bruk av avskrevet definisjon." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsNB[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Bruk av avskrevet definisjon." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "%s er avskrevet. Bruk %s." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DeprecatedSince, "Bruk av avskrevet definisjon." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "%s har vært avskrevet siden %s. Bruk %s." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Bruk av avskrevet definisjon." );
        warningConstantsNB[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "%s har vært avskrevet siden %s." );
   }

   static final AscWarning[] warningConstantsNL= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsNL() 
   {
      int index=0;
        warningConstantsNL[index++] = new AscWarning(kWarning_NoTypeDecl, "Typedeclaratie ontbreekt." );
        warningConstantsNL[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' heeft geen typedeclaratie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Onlogische vergelijking met undefined. Alleen variabelen zonder type (of variabelen van type *) kunnen ongedefinieerd zijn." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Variabelen van type %s kunnen niet ongedefinieerd zijn. De waarde undefined wordt door gedwongen tot %s voorafgaand aan vergelijking." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "De functie die wordt gebruikt in nieuwe expressie retourneert een waarde. Het resultaat is hetgeen de functie retourneert, niet een nieuwe instantie van die functie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Migratieprobleem: resultaat van new %s zal de geretourneerde waarde van %s zijn en niet een nieuwe instantie van die functie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() zonder argumenten retourneert false in ActionScript 3.0. Boolean() retourneerde undefined in ActionScript 2.0." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Gebruik van Boolean() zonder argumenten." );
        warningConstantsNL[index++] = new AscWarning(kWarning_NumberFromStringChanges, "In ActionScript 3.0 wordt witruimte genegeerd en retourneert '' 0. In ActionScript 2.0 retourneert Number() NaN wanneer de parameter '' is of witruimte bevat." );
        warningConstantsNL[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Migratieprobleem: wanneer de functie Number('') wordt aangeroepen met een leeg tekenreeksargument, retourneert deze 0 in ActionScript 3.0 en NaN in ActionScript 2.0." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Indeling Array.toString() is gewijzigd." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Migratieprobleem: afhandeling door Array.toString() van elementen met waarde null of undefined is gewijzigd." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Niet-ondersteunde ActionScript 2.0-eigenschap." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Migratieprobleem: de eigenschap %s wordt niet meer ondersteund. %s." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Niet-ondersteunde ActionScript 2.0-functie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Migratieprobleem: de methode%s wordt niet meer ondersteund. %s." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve wordt niet meer ondersteund." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Migratieprobleem: __resolve wordt niet meer ondersteund. Gebruik de nieuwe klasse Proxy voor soortgelijke functionaliteit." );
        warningConstantsNL[index++] = new AscWarning(kWarning_LevelNotSupported, "_level  wordt niet meer ondersteund. Raadpleeg het pakket flash.display voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Migratieprobleem: _level wordt niet meer ondersteund. Raadpleeg het pakket flash.display voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ClassIsSealed, "Klasse is verzegeld. Er kunnen geen leden dynamisch aan worden toegevoegd." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Migratieprobleem: %s is geen dynamische klasse.  Aan instanties kunnen geen leden dynamisch worden toegevoegd." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Bereikwijziging voor het trefwoord this. Klassemethoden die uit een instantie van een klasse zijn geëxtraheerd, verwijzen altijd terug naar die instantie. In ActionScript 2.0 wordt dit dynamisch opgezocht op basis van waar de methode is aangeroepen." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Migratieprobleem: methode %s zal zich in ActionScript 3.0 anders gedragen als gevolg van de bereikwijziging voor het trefwoord this. Zie de vermelding bij waarschuwing 1083 voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Naamruimtedeclaratie ontbreekt (variabele is bijvoorbeeld niet als public, private, enzovoort, gedefinieerd)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s wordt binnen het bereik van de standaardnaamruimte geplaatst: %s internal. Dit element zal buiten dit pakket niet zichtbaar zijn." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 voert in willekeurige volgorde een herhaling uit over de eigenschappen van een object binnen een instructie \"for x in target\"." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Migratieprobleem: ActionScript 3.0 voert in willekeurige volgorde een herhaling uit over de eigenschappen van een object binnen een instructie \"for x in target\"." );
        warningConstantsNL[index++] = new AscWarning(kWarning_InternalError, "Interne fout in compiler." );
        warningConstantsNL[index++] = new AscWarning(kWarning_InternalError_specific, "Foutcode: %s." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler is niet als een listener toegevoegd." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Migratieprobleem: %s" );
        warningConstantsNL[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Negatieve waarde wordt een grote positieve waarde wanneer toegewezen aan een gegevenstype uint." );
        warningConstantsNL[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Negatieve waarde gebruikt waar een uint-waarde (niet-negatief) wordt verwacht." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadNullComparision, "Onlogische vergelijking met null." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Onlogische vergelijking met null. Variabelen van type %s kunnen niet null zijn." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadNaNComparision, "Onlogische vergelijking met NaN. Elke vergelijkingsbewerking met NaN levert false op omdat NaN != NaN." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Onlogische vergelijking met NaN. De instructie levert altijd false op." );
        warningConstantsNL[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Toewijzing binnen voorwaardelijk." );
        warningConstantsNL[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Toewijzing binnen voorwaardelijk. Bedoelde u == in plaats van =?" );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadNullAssignment, "Onmogelijke null-toewijzing." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "De waarde null is gebruikt waar een waarde %s werd verwacht." );
        warningConstantsNL[index++] = new AscWarning(kWarning_NoConstructor, "Constructor ontbreekt." );
        warningConstantsNL[index++] = new AscWarning(kWarning_NoConstructor_specific, "Er is geen constructorfunctie opgegeven voor klasse %s." );
        warningConstantsNL[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Lege instructie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Lege instructie waar blok of code wordt verwacht. Hebt u per ongeluk ';' getypt?" );
        warningConstantsNL[index++] = new AscWarning(kWarning_ConstNotInitialized, "Constante is niet geïnitialiseerd." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "De constante is niet geïnitialiseerd." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadArrayCast, "Mogelijk ongeldige bewerking bij casten van Array." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) gedraagt zich hetzelfde als het de nieuwe Array(x). U kunt een waarde casten naar type Array met de expressie x als array in plaats van Array(x)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "De instructie super() is niet binnen de constructor aangeroepen." );
        warningConstantsNL[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "De instructie super() wordt uitgevoerd voordat deze constructor wordt ingevoerd. Voeg een aanroep van super() binnen de constructor toe wanneer u expliciet wilt bepalen wanneer deze wordt uitgevoerd." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_version, "Gebruik hiervan de versie Capabilities." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Zie InteractiveObject.focusRect voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Highquality, "Zie Stage.quality voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Zie Stage.quality voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Zie Stage.quality voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Quality, "Zie Stage.quality voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Gebruik in plaats hiervan de statische eigenschap flash.media.SoundMixer.bufferTime." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Deze functionaliteit wordt niet meer ondersteund." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Zie LoaderInfo.url voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Deze functionaliteit wordt niet meer ondersteund." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_NewLine, "Gebruik '\n' voor een nieuwe regel." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Zie textField.maxScroll voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Level, "Het concept van niveaus bestaat niet in ActionScript 3.0. Daar hebt u rechtstreeks toegang tot het weergaveoverzicht. Zie het pakket flash.display voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Parent, "Gebruik in plaats hiervan de eigenschap parent." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Root, "Deze eigenschap is verwijderd. Het dichtstbijzijnde equivalent is het werkgebied dat als basis van het weergaveoverzicht van ActionScript 3.0 fungeert." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Probeer in plaats hiervan de aanroeper als een argument van de functie te declareren." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Deze functionaliteit wordt niet meer ondersteund." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Gebruik in plaats hiervan de eigenschap parent." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Deze functionaliteit wordt niet meer ondersteund." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Zie Sprite.hitArea voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Scroll, "Zie de eigenschappen scrollH en scrollV van de klasse flash.text.TextField voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Gebruik objecten MovieClip rechtstreeks als argumenten in plaats van paden." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Zie Video.videoHeight voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Zie Video.videoWidth voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp__Proto__, "Zie de verouderde __proto__ voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Stage, "Zie DisplayObject.stage voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Gebruik in plaats hiervan de methode registerClass() in het pakket flash.net." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_random, "Gebruik in plaats hiervan Math.random()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_chr, "Gebruik in plaats hiervan String.fromCharCode()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Gebruik in plaats hiervan String.fromCharCode()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ord, "Gebruik in plaats hiervan String.charCodeAt()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_mbord, "Gebruik in plaats hiervan String.charCodeAt()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_substring, "Gebruik in plaats hiervan de methode String.substr." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Gebruik in plaats hiervan de methode String.substr." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_length, "Gebruik in plaats hiervan de eigenschap length van het argument." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_mblength, "Gebruik in plaats hiervan de eigenschap length van het argument." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Zie wijzigingen in ASnative voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Stel in plaats hiervan eigenschappen rechtstreeks in bij de instantie met de notatie dot (.)." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Benader in plaats hiervan eigenschappen rechtstreeks met de notatie dot (.)." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Stel in plaats hiervan eigenschappen rechtstreeks in bij de instantie met de notatie dot (.)." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Zie TextEvent.LINK en addEventListener() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Deze methode is verplaatst naar het pakket flash.utils." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Vervangen door nieuwe constructorfunctie van de klasse MovieClip." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Verplaatst naar het pakket flash.system. Zie ook de klasse flash.external.ExternalInterface voor informatie over communicatie tussen JavaScript en ActionScript." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_getURL, "Zie flash.net.URLLoader voor equivalente functionaliteit. Het pakket flash.net bevat tevens de functies navigateToURL() en sendToURL()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Zie MovieClip.gotoAndPlay() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Zie MovieClip.gotoAndStop() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_play, "Zie MovieClip.play() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_print, "Zie PrintJob.start() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Zie PrintJob voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Zie PrintJob voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_printNum, "Zie PrintJob voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Gebruik Container.removeChild(childName). Zie de klasse DisplayObjectContainer voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Verplaatst naar het pakket flash.utils. U kunt in plaats hiervan de klasse Timer gebruiken." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Zie MovieClip.nextFrame() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Zie MovieClip.startDrag() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_stop, "Zie MovieClip.stop() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Zie Sound.stopAllSounds() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Zie MovieClip.stopDrag() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Gebruik in plaats hiervan de puntoperator (.) of de instructie with." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Zie DisplayObject.stage en Stage.quality voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Gebruik in plaats hiervan DisplayObjectContainer.removeChild(childName). Zie de klasse DisplayObjectContainer voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Gebruik in plaats hiervan DisplayObjectContainer.removeChild(childName). Zie de klasse DisplayObjectContainer voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Deze functie is geen algemene functie meer maar is nog steeds beschikbaar als een methode van de klassen TimerEvent, MouseEvent en KeyboardEvent." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Zie Video.attachNetStream, Video.attachCamera voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Gebruik de klasse URLLoader om het laden uit te voeren en het resultaat door te geven aan StyleSheet.parseCSS()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "In ActionScript 3.0 worden alle klassen standaard geregistreerd. Zie flash.utils.registerClassAlias() voor meer informatie wanneer u AMF gebruikt." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Gebruik accessoreigenschappen (functies get/set) of de klasse utils.Proxy voor soortgelijke functionaliteit." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Gebruik accessoreigenschappen (functies get/set) of de klasse utils.Proxy voor soortgelijke functionaliteit." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Zie MovieClip.loadMovie() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Zie MovieClip.loadMovieNum() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Zie Loader.load() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Zie Loader.load() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Zie addEventListener (eventName, listener, useCapture, priority) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Zie removeEventListener (eventName, listener, useCapture) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Zie addEventListener (eventName, listener, useCapture, priority) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Zie removeEventListener (eventName, listener, useCapture) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Zie addEventListener (eventName, listener, useCapture, priority) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Zie removeEventListener (eventName, listener, useCapture) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Zie addEventListener (eventName, listener, useCapture, priority) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Zie removeEventListener (eventName, listener, useCapture) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Gebruik de klasse SWF om geluiden te maken vanuit de bibliotheek." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onStatus, "De gebeurtenishandler onStatus wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('status', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onID3, "De gebeurtenishandler onID3 wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0.  U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('id3', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onLoad, "De gebeurtenishandler onLoad wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('load', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onSoundComplete, "De gebeurtenishandler onSoundComplete wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0.  U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('soundComplete', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onSetFocus, "De gebeurtenishandler onSetFocus wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('focusIn', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onResize, "De gebeurtenishandler onResize wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0.  U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('resize', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onChanged, "De gebeurtenishandler onChanged wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('change', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onKillFocus, "De gebeurtenishandler onKillFocus wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('focusOut', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onScroller, "De gebeurtenishandler onScroller wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('scroll', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onMouseDown, "De gebeurtenishandler onMouseDown wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('mouseDown', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onMouseUp, "De gebeurtenishandler onMouseUp wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('mouseUp', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onMouseMove, "De gebeurtenishandler onMouseMove wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('mouseMove', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onMouseWheel, "De gebeurtenishandler onMouseWheel wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('mouseWheel', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onKeyDown, "De gebeurtenishandler onKeyDown wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('keyDown', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onKeyUp, "De gebeurtenishandler onKeyUp wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('keyUp', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onData, "De gebeurtenishandler onData wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('data', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "De gebeurtenishandler onHTTPStatus wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('httpStatus', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onDragOut, "De gebeurtenishandler onDragOut wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('mouseOut', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onDragOver, "De gebeurtenishandler onDragOver wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('mouseOver', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onPress, "De gebeurtenishandler onPress wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('mouseDown', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onRelease, "De gebeurtenishandler onRelease wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('click', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "De gebeurtenishandler onReleaseOutside wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('mouseUp', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onRollOut, "De gebeurtenishandler onRollOut wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('mouseOut', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onRollOver, "De gebeurtenishandler onRollOver wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('mouseOver', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onActivity, "De gebeurtenishandler onActivity wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('activity', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onSelect, "De gebeurtenishandler onSelect wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('menuSelect', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onEnterFrame, "De gebeurtenishandler onEnterFrame wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('enterFrame', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onUnload, "De gebeurtenishandler onUnload wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('unload', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onLoadComplete, "De gebeurtenishandler onLoadComplete wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('load', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onLoadError, "De gebeurtenishandler onLoadError wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('error', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onLoadInit, "De gebeurtenishandler onLoadInit wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('init', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onLoadProgress, "De gebeurtenishandler onLoadProgress wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('progress', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onLoadStart, "De gebeurtenishandler onLoadStart wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('start', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onClose, "De gebeurtenishandler onClose wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('close', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onConnect, "De gebeurtenishandler onConnect wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('connect', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onXML, "De gebeurtenishandler onXML wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('xml', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Gebruik in plaats hiervan de eigenschap hasChildNodes." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "De klasse XMLEvent is overbodig en de gebeurtenis xml wordt niet meer verzonden. Alleen de gebeurtenis data wordt verzonden tijdens het laden van het bestand." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "De naam van de klasse XMLDoc is gewijzigd in XMLDocument." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Gebruik in plaats hiervan de eigenschap Accessibility.active." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Gebruik in plaats hiervan de constante ActivityEvent.ACTIVITY." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Gebruik in plaats hiervan DisplayObjectContainer.parent.getChildIndex. Zie de Help voor de klasse DisplayObjectContainer die is uitgebreid met MovieClip." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Gebruik in plaats hiervan DisplayObjectContainer.parent.setChildIndex. Zie de Help voor de klasse DisplayObjectContainer die is uitgebreid met MovieClip." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Gebruik in plaats hiervan DisplayObjectContainer.getChildAt. Zie de Help voor de klasse DisplayObjectContainer die is uitgebreid met MovieClip." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Gebruik in plaats hiervan DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild voegt het nieuwe onderliggende item altijd toe aan index DisplayObjectContainer.numChildren." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Gebruik in plaats hiervan de eigenschap ByteArray.bytesAvailable." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Gebruik in plaats hiervan de eigenschap ByteArray.position." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Gebruik in plaats hiervan de eigenschap ByteArray.position." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Gebruik in plaats hiervan de methode Camera.getCamera()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Gebruik in plaats hiervan de eigenschap Camera.currentFPS." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Gebruik in plaats hiervan de eigenschap Camera.keyFrameInterval." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Gebruik in plaats hiervan de eigenschap Camera.loopback." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Gebruik in plaats hiervan de eigenschap ColorTransform.color." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Gebruik in plaats hiervan de eigenschap ColorTransform.color." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Gebruik in plaats hiervan de eigenschap Container.textSnapshot." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Gebruik in plaats hiervan de methode ContextMenu.clone()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Gebruik in plaats hiervan de eigenschap ContextMenu.forwardAndBack." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Gebruik in plaats hiervan de methode ContextMenuItem.clone()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Gebruik in plaats hiervan de eigenschap CustomActions.actionsList." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Gebruik in plaats hiervan de constante DataEvent.DATA." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Gebruik in plaats hiervan de eigenschap DisplayObject.scaleX." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Gebruik in plaats hiervan de eigenschap DisplayObject.scaleX." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Gebruik in plaats hiervan de eigenschap DisplayObject.scaleY." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Gebruik in plaats hiervan de eigenschap DisplayObject.scaleY." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Gebruik in plaats hiervan de eigenschap DisplayObject.mouseX." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Gebruik in plaats hiervan de eigenschap DisplayObject.mouseX." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Gebruik in plaats hiervan de eigenschap DisplayObject.mouseY." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Gebruik in plaats hiervan de eigenschap DisplayObject.mouseY." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Deze functie wordt niet meer ondersteund." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Deze functie wordt niet meer ondersteund." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Gebruik in plaats hiervan de eigenschap DisplayObject.name." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Gebruik in plaats hiervan de eigenschap DisplayObject.parent." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Gebruik in plaats hiervan de eigenschap DisplayObject.mask." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Gebruik in plaats hiervan de eigenschap DisplayObject.visible." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Gebruik in plaats hiervan de eigenschap DisplayObject.x." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Gebruik in plaats hiervan de eigenschap DisplayObject.y." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Gebruik in plaats hiervan de eigenschap DisplayObject.rotation." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Gebruik in plaats hiervan de eigenschap DisplayObject.alpha." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Gebruik in plaats hiervan de eigenschap DisplayObject.width." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Gebruik in plaats hiervan de eigenschap DisplayObject.height." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Gebruik in plaats hiervan de eigenschap ExternalInterface.available." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Gebruik in plaats hiervan de constante ErrorEvent.ERROR." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Gebruik in plaats hiervan de eigenschap Event.isDefaultPrevented." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Gebruik in plaats hiervan de constante Event.ACTIVATE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Gebruik in plaats hiervan de constante Event.ADDED." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Gebruik in plaats hiervan de constante Event.CANCEL." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Gebruik in plaats hiervan de constante Event.CHANGE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Gebruik in plaats hiervan de constante Event.CLOSE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Gebruik in plaats hiervan de constante Event.COMPLETE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Gebruik in plaats hiervan de constante Event.CONNECT." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Gebruik in plaats hiervan de constante Event.DEACTIVATE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Gebruik in plaats hiervan de constante Event.ENTER_FRAME." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Gebruik in plaats hiervan de constante Event.ID3." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Gebruik in plaats hiervan de constante Event.INIT." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Gebruik in plaats hiervan de constante Event.MOUSE_LEAVE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Gebruik in plaats hiervan de constante Event.OPEN." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Gebruik in plaats hiervan de constante Event.REMOVED." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Gebruik in plaats hiervan de constante Event.RENDER." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Gebruik in plaats hiervan de constante Event.RESIZE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Gebruik in plaats hiervan de constante Event.SCROLL." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Gebruik in plaats hiervan de constante Event.SELECT." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Gebruik in plaats hiervan de constante Event.SOUND_COMPLETE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Gebruik in plaats hiervan de constante Event.TAB_CHILDREN_CHANGE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Gebruik in plaats hiervan de constante Event.TAB_ENABLED_CHANGE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Gebruik in plaats hiervan de constante Event.TAB_INDEX_CHANGE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Gebruik in plaats hiervan de constante Event.UNLOAD." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Gebruik in plaats hiervan de constante FocusEvent.FOCUS_IN." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Gebruik in plaats hiervan de constante FocusEvent.FOCUS_OUT." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Gebruik in plaats hiervan de constante FocusEvent.KEY_FOCUS_CHANGE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Gebruik in plaats hiervan de constante FocusEvent.MOUSE_FOCUS_CHANGE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Gebruik in plaats hiervan de methode Graphics.beginBitmapFill()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Gebruik in plaats hiervan de eigenschap BitmapFilter.quality." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Gebruik in plaats hiervan KeyboardEvent.charCode." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Gebruik in plaats hiervan KeyboardEvent.keyCode." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Zie de klasse KeyboardEvent voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Zie KeyboardEvent.ctrlKey, KeyboardEvent.altKey en KeyboardEvent.shiftKey voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Gebruik in plaats hiervan de constante PAGE_DOWN." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Gebruik in plaats hiervan de constante PAGE_UP." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Gebruik in plaats hiervan de constante DELETE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Gebruik in plaats hiervan de constante CAPS_LOCK." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Gebruik in plaats hiervan de constanten NUMPAD_0 t/m NUMPAD_9." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Gebruik in plaats hiervan de eigenschap InteractiveObject.focusRect." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Gebruik in plaats hiervan de eigenschap InteractiveObject.contextMenu." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Gebruik in plaats hiervan de eigenschap KeyboardEvent.charCode." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Gebruik in plaats hiervan de eigenschap KeyboardEvent.keyCode." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Gebruik in plaats hiervan de eigenschap Loader.contentLoaderInfo." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Deze functie wordt niet meer ondersteund." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Deze functie wordt niet meer ondersteund." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Gebruik in plaats hiervan de eigenschap LoaderInfo.loaderURL." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Gebruik in plaats hiervan de eigenschap LocalConnection.domain." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Gebruik in plaats hiervan de eigenschap MenuEvent.contextMenuOwner." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Gebruik in plaats hiervan de methode Microphone.getMicrophone()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Wanneer de subklasse van MovieClip de naam A heeft, gebruikt u var mc= new A(); addChild(mc). Zie de klasse DisplayObjectContainer voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Gebruik var mc= new MovieClip(); addChild(mc). Zie de klasse DisplayObjectContainer voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Gebruik var tf= new TextField(); addChild(mc). Zie de klasse DisplayObjectContainer voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Gebruik Container.removeChild(childName). Zie de klasse DisplayObjectContainer voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Gebruik var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));. Zie de klassen Loader en DisplayObjectContainer voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Gebruik in plaats hiervan DisplayObjectContainer.removeChild(childName). Zie de klasse DisplayObjectContainer voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Gebruik in plaats hiervan DisplayObjectContainer.removeChild(childName). Zie de klasse DisplayObjectContainer voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Gebruik in plaats hiervan DisplayObjectContainer.parent.getChildIndex. Zie de klasse DisplayObjectContainer (uitgebreid door MovieClip) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Gebruik in plaats hiervan DisplayObjectContainer.parent.setChildIndex. Zie de klasse DisplayObjectContainer (uitgebreid door MovieClip) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Gebruik in plaats hiervan DisplayObjectContainer.getChildAt. Zie de klasse DisplayObjectContainer (uitgebreid door MovieClip) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Gebruik in plaats hiervan DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild voegt het nieuwe onderliggende item altijd toe aan index DisplayObjectContainer.numChildren." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Zie DisplayObject.addChild voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Zie LoaderInfo.bytesLoaded en de klasse Loader voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Zie LoaderInfo.bytesTotal en de klasse Loader voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Zie flash.net.URLLoader voor equivalente functionaliteit. Het pakket flash.net bevat tevens de functies navigateToURL() en sendToURL()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Zie LoaderInfo.url en de klasse Loader voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Zie LoaderInfo.url en de klasse Loader voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Gebruik in plaats hiervan de eigenschap MovieClip.mask." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Zie LoaderInfo.swfVersion en de klasse Loader voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Gebruik in plaats hiervan de eigenschap MovieClip.currentFrame." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Gebruik in plaats hiervan de eigenschap MovieClip.framesLoaded." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Gebruik in plaats hiervan de eigenschap MovieClip.totalFrames." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Zie displayObjectInstance.root voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Zie displayObjectInstance.root voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Gebruik in plaats hiervan de statische eigenschap flash.media.SoundMixer.bufferTime." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Zie de klasse Graphics voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Gebruik in plaats hiervan de eigenschap NetStream.bufferTime." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Gebruik in plaats hiervan de eigenschap NetStream.currentFPS." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Gebruik in plaats hiervan de eigenschap NetStream.videoCodec." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Gebruik in plaats hiervan de eigenschap NetStream.audioCodec." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Gebruik in plaats hiervan de eigenschap ProductManager.isInstalled." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Gebruik in plaats hiervan de eigenschap ProductManager.installedVersion." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Gebruik in plaats hiervan de eigenschap ProductManager.isRunning." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Gebruik in plaats hiervan de methode Point.add()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Gebruik in plaats hiervan de eigenschap Proxy.deleteDescendants." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Gebruik in plaats hiervan de methode heapDump()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Gebruik in plaats hiervan de eigenschap ProgressEvent.bytesLoaded." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Gebruik in plaats hiervan de eigenschap ProgressEvent.bytesTotal." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Gebruik in plaats hiervan de eigenschap Rectangle.isEmpty." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Gebruik in plaats hiervan de eigenschap SoundTransform.pan." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Gebruik in plaats hiervan de eigenschap Sockect.bytesAvailable." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Gebruik in plaats hiervan de eigenschap SharedObject.size." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Gebruik in plaats hiervan de eigenschap SharedObject.fps." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Wordt niet meer ondersteund." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Gebruik in plaats hiervan de methode Sprite.constructChildren()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Gebruik in plaats hiervan de eigenschap Sprite.dropTarget." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Gebruik in plaats hiervan de eigenschap Stage.focus." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Gebruik in plaats hiervan de eigenschap Stage.focus." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Gebruik in plaats hiervan de eigenschap Stage.showDefaultContextMenu." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Gebruik in plaats hiervan de eigenschap StyleSheet.styleNames." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Gebruik een instantie van URLLoader om de StyleSheet-gegevens te laden en geef de gegevens van de lader vervolgens door aan de methode StyleSheet.parseCSS. Zie de klassen URLLoader en EventDispatcher voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Gebruik een instantie van URLLoader om de StyleSheet-gegevens te laden en geef de gegevens van de lader vervolgens door aan de methode StyleSheet.parseCSS. Zie de klassen URLLoader en EventDispatcher voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Gebruik een instantie van URLLoader om de StyleSheet-gegevens te laden en geef de gegevens van de lader vervolgens door aan de methode StyleSheet.parseCSS. Zie de klassen URLLoader en EventDispatcher voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Gebruik een instantie van URLLoader om de StyleSheet-gegevens te laden en geef de gegevens van de lader vervolgens door aan de methode StyleSheet.parseCSS. Zie de klassen URLLoader en EventDispatcher voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Gebruik een instantie van URLLoader om de StyleSheet-gegevens te laden en geef de gegevens van de lader vervolgens door aan de methode StyleSheet.parseCSS. Zie de klassen URLLoader en EventDispatcher voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Gebruik in plaats hiervan de eigenschap IME.enabled." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Gebruik in plaats hiervan de eigenschap IME.enabled." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Gebruik in plaats hiervan de eigenschap IME.instance." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Gebruik in plaats hiervan de eigenschap IME.conversionMode." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Gebruik in plaats hiervan de eigenschap IME.conversionMode." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Gebruik in plaats hiervan de eigenschap System.vmVersion." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Gebruik in plaats hiervan de eigenschap SWFLoaderInfo.swfVersion." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Gebruik in plaats hiervan de eigenschap SWFLoaderInfo.actionScriptVersion." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Gebruik in plaats hiervan de eigenschap TextField.defaultTextFormat." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Gebruik in plaats hiervan de eigenschap TextField.defaultTextFormat." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Gebruik in plaats hiervan DisplayObjectContainer.parent.getChildIndex. Zie de klasse DisplayObjectContainer (uitgebreid door MovieClip) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Gebruik in plaats hiervan DisplayObjectContainer.parent.setChildIndex. Zie de klasse DisplayObjectContainer (uitgebreid door MovieClip) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Gebruik in plaats hiervan DisplayObjectContainer.getChildAt. Zie de klasse DisplayObjectContainer (uitgebreid door MovieClip) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Gebruik in plaats hiervan DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild voegt het nieuwe onderliggende item altijd toe aan index DisplayObjectContainer.numChildren." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Gebruik in plaats hiervan de methode TextField.replaceSelectedText()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Gebruik in plaats hiervan de methode TextField.getLineIndexOfChar()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Gebruik in plaats hiervan de eigenschap TextField.selectionBeginIndex." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Gebruik in plaats hiervan de eigenschap TextField.selectionEndIndex." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Gebruik in plaats hiervan de eigenschap TextField.caretIndex." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Gebruik in plaats hiervan de methode Font.enumerateFonts()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Gebruik in plaats hiervan de eigenschap TextField.maxScrollV." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Gebruik in plaats hiervan de eigenschap TextField.scrollH." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Gebruik in plaats hiervan de eigenschap TextField.maxScrollH." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Gebruik in plaats hiervan de eigenschap TextField.defaultTextFormat." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Maak een tijdelijk TextField en gebruik in plaats hiervan TextField.getLineMetrics." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Gebruik in plaats hiervan de eigenschap TextSnapshot.charCount." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Gebruik in plaats hiervan de methode navigateToURL() in het pakket flash.net." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Gebruik in plaats hiervan de methode sendToURL() in het pakket flash.net." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Gebruik in plaats hiervan de eigenschap URLLoader.dataFormat." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Gebruik in plaats hiervan de eigenschap URLStream.bytesAvailable." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Deze eigenschap wordt niet meer ondersteund." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Gebruik in plaats hiervan de eigenschap URLRequest.applicationDomain." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Wanneer u aanvraagheaders wilt toevoegen, stelt u de eigenschap URLRequest.requestHeaders in op een array van objecten URLRequestHeader." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Gebruik een instantie van URLLoader om het XML-bestand te laden en geef vervolgens de gegevens van URLLoader door aan de constructor XMLDocument. Zie de klassen URLLoader en EventDispatcher voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Gebruik in plaats hiervan de methode sendToURL() in het pakket flash.net." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Stel de eigenschap postData van een object URLRequest in en gebruik deze met een object URLLoader om het XML-bestand te laden. Geef de gegevens van URLLoader door aan de constructor XMLDocument. Zie de klassen URLLoader, URLRequest en EventDispatcher voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Gebruik een instantie van URLLoader om het XML-bestand te laden en geef vervolgens de gegevens van URLLoader door aan de constructor XMLDocument. Zie de klassen URLLoader en EventDispatcher voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Wanneer u aanvraagheaders wilt toevoegen, stelt u de eigenschap URLRequest.requestHeaders in op een array van objecten URLRequestHeader." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Zie URLLoader.bytesLoaded en de klasse URLLoader voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Zie URLLoader.bytesTotal en de klasse URLLoader voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Gebruik een instantie van URLLoader om het XML-bestand te laden en geef vervolgens de gegevens van de lader door aan de methode StyleSheet.parseCSS. Zie de klassen URLLoader en EventDispatcher voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Gebruik in plaats hiervan de eigenschap URLRequest.contentType." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Controleer in plaats hiervan op de mogelijke uitzonderingen die worden gegenereerd door de constructor XMLDocument of de methode XMLDocument.parseXML. Zie XMLDocument voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Button, "De naam van de klasse Button is gewijzigd in SimpleButton." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Container, "De naam van de klasse Container is gewijzigd in DisplayObjectContainer." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Image, "De naam van de klasse Image is gewijzigd in BitmapData." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "De naam van de klasse ImageFilter is gewijzigd in BitmapFilter." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "De naam van de klasse ImageSprite is gewijzigd in Bitmap." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "De naam van de klasse ImageLoaderInfo is gewijzigd in BitmapLoaderInfo." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "De naam van de klasse ImeEvent is gewijzigd in IMEEvent." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Key, "De naam van de klasse Key is gewijzigd in Keyboard." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "De naam van de klasse LineMetrics is gewijzigd in TextLineMetrics." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Zie de klasse URLVariables, de eigenschappen URLRequest.urlVariables en URLRequest.postData en de eigenschap URLLoader.dataFormat voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "De naam van de klasse MenuEvent is gewijzigd in ContextMenuEvent." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "De naam van de klasse SystemCapabilities is gewijzigd in Capabilities." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Gebruik in plaats hiervan de eigenschap TextField.getLineMetrics." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Button, "De naam van de klasse Button is gewijzigd in SimpleButton." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Container, "De naam van de klasse Container is gewijzigd in DisplayObjectContainer." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Image, "De naam van de klasse Image is gewijzigd in BitmapData." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "De naam van de klasse ImageFilter is gewijzigd in BitmapFilter." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "De naam van de klasse ImageSprite is gewijzigd in Bitmap." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "De naam van de klasse ImageLoaderInfo is gewijzigd in BitmapLoaderInfo." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "De naam van de klasse ImeEvent is gewijzigd in IMEEvent." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Key, "De naam van de klasse Key is gewijzigd in Keyboard." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "De naam van de klasse LineMetrics is gewijzigd in TextLineMetrics." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Zie de klasse URLVariables, de eigenschappen URLRequest.urlVariables en URLRequest.postData en de eigenschap URLLoader.dataFormat voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "De naam van de klasse MenuEvent is gewijzigd in ContextMenuEvent." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "De naam van de klasse SystemCapabilities is gewijzigd in Capabilities." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Gebruik in plaats hiervan de eigenschap TextField.getLineMetrics." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Zie de Help voor de klasse Proxy, die soortgelijke functionaliteit biedt, voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Gebruik in plaats hiervan de methode XMLUI.getProperty." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Gebruik in plaats hiervan de methode XMLUI.setProperty." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Gebruik in plaats hiervan de eigenschap DisplayObject.accessibilityProperties." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Gebruik in plaats hiervan de eigenschap DisplayObject.scale9Grid." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Gebruik in plaats hiervan de methode Graphics.drawOval." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Gebruik in plaats hiervan de eigenschap NetConnection.connected." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Gebruik in plaats hiervan de eigenschap Socket.connected." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Gebruik in plaats hiervan de eigenschap URLStream.connected." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Gebruik in plaats hiervan de eigenschap SyncEvent.changeList." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Gebruik in plaats hiervan de eigenschap TextField.scrollV." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Gebruik in plaats hiervan de eigenschap TextField.bottomScrollV." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Gebruik in plaats hiervan de constante BitmapDataChannel.RED." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Gebruik in plaats hiervan de constante BitmapDataChannel.GREEN." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Gebruik in plaats hiervan de constante BitmapDataChannel.BLUE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Gebruik in plaats hiervan de constante BitmapDataChannel.ALPHA." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Gebruik in plaats hiervan de operator is." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Gebruik in plaats hiervan de methode flash.system.Security.showSettings." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Gebruik in plaats hiervan de eigenschap System.useCodePage." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Gebruik in plaats hiervan de klasse flash.events.EventDispatcher." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Gebruik in plaats hiervan de statische eigenschap flash.media.SoundMixer.bufferTime." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Maak in plaats hiervan een nieuwe instantie van de klasse voor bibliotheeksymbolen van type bitmap, met andere woorden, new myBitmapName()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Zie Loader.load() voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "De klasse MovieClipLoader is vervangen door de klasse flash.display.Loader." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "De klasse MovieClipLoader is vervangen door de klasse flash.display.Loader." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Zie addEventListener (eventName, listener, useCapture, priority) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Zie removeEventListener (eventName, listener, useCapture) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Gebruik in plaats hiervan de constante flash.system.IMEConversionMode.ALPHANUMERIC_FULL." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Gebruik in plaats hiervan de constante flash.system.IMEConversionMode.ALPHANUMERIC_HALF." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Gebruik in plaats hiervan de constante flash.system.IMEConversionMode.CHINESE." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Gebruik in plaats hiervan de constante flash.system.IMEConversionMode.JAPANESE_HIRAGANA." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Gebruik in plaats hiervan de constante flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Gebruik in plaats hiervan de constante flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Gebruik in plaats hiervan de constante flash.system.IMEConversionMode.KOREAN." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Gebruik in plaats hiervan de constante flash.system.IMEConversionMode.UNKNOWN." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Zie addEventListener (eventName, listener, useCapture, priority) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Zie removeEventListener (eventName, listener, useCapture) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onCancel, "De gebeurtenishandler onCancel wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener (cancel, onCancel)." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Er is geen directe vervanging. U kunt de methode willTrigger() gebruiken om na te gaan of listeners zijn geregistreerd." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onIMEComposition, "De gebeurtenishandler onIMEComposition wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener (imeComposition, handlerName)." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Zie LoaderInfo.url en de klasse Loader voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Gebruik in plaats hiervan de methode getFullYear()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Gebruik in plaats hiervan de methode setFullYear()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Gebruik in plaats hiervan de methode getUTCFullYear()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Gebruik in plaats hiervan de eigenschap rate." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Selection, "De klasse Selection is verwijderd. Zie de methode addEventListener van de klasse waarvan u selectiegegevens wilt voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Selection, "De klasse Selection is verwijderd. Zie de methode addEventListener van de klasse waarvan u selectiegegevens wilt voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Gebruik in plaats hiervan de eigenschap gain." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Kleurwaarden kunnen rechtstreeks worden toegewezen met de constructor of eigenschappen van de klasse ColorTransform." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Kleurwaarden kunnen rechtstreeks worden toegewezen met de constructor of eigenschappen van de klasse ColorTransform." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Zie de Help voor de eigenschappen van de klasse flash.display.InteractiveObject die betrekking hebben op focus." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Zie de Help voor de methode flash.display.Graphics.beginBitmapFill." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Zie de Help voor de methode flash.display.DisplayObject.hitTestObject()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Zie de Help voor de methode addChild()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Gebruik in plaats hiervan de methode load()." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Gebruik media.SoundChannel.leftPeak en flash.media.SoundChannel.rightPeak om de amplitude van een geluidskanaal te volgen en te controleren." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Gebruik in plaats hiervan de eigenschap soundTransform." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Gebruik in plaats hiervan de eigenschap SoundTransform.pan." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Gebruik in plaats hiervan de eigenschap SoundTransform.pan." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Gebruik in plaats hiervan de eigenschap bytesLoaded." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Gebruik in plaats hiervan de eigenschap bytesTotal." );
        warningConstantsNL[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Inefficiënt gebruik van += op een TextField." );
        warningConstantsNL[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Tekst toevoegen aan een TextField met += is vele malen langzamer dan het gebruik van de methode TextField.appendText()." );
        warningConstantsNL[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Mogelijk ontbreken ronde haakjes." );
        warningConstantsNL[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Waarde van het type Function is gebruikt waar type %s werd verwacht. Mogelijk ontbreken ronde haakjes () na deze functieverwijzing." );
        warningConstantsNL[index++] = new AscWarning(kWarning_InstanceOfChanges, "Gebruik van de operator instanceof." );
        warningConstantsNL[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "De operator instanceof is vervangen; gebruik in plaats hiervan de operator is." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "De gebeurtenishandler allowDomain() is nu een standaardmethode in plaats van een gebeurteniscall-back. Zie de nieuwe methode LocalConnection.allowDomain voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "De gebeurtenishandler allowInsecureDomain() is nu een standaardmethode in plaats van een gebeurteniscall-back. Zie de nieuwe methode LocalConnection.allowInsecureDomain voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_call, "De algemene methode call() wordt niet meer ondersteund." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_Color, "De klasse Color is verwijderd. Gebruik de klasse flash.geom.ColorTransform voor equivalente functionaliteit." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Color, "De klasse Color is verwijderd. Gebruik de klasse flash.geom.ColorTransform voor equivalente functionaliteit." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "SWF-bestanden van ActionScript 3.0 gebruiken altijd exacte domeinovereenkomst." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp_capabilities, "De naam van de klasse capabilities is gewijzigd in Capabilities." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_capabilities, "De naam van de klasse capabilities is gewijzigd in Capabilities." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Zie addEventListener (eventName, listener, useCapture, priority) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Zie removeEventListener (eventName, listener, useCapture) voor meer informatie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onComplete, "De gebeurtenishandler onComplete wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('complete', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onHTTPError, "De gebeurtenishandler onHTTPError wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('httpError', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onIOError, "De gebeurtenishandler onIOError wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('ioError', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onProgress, "De gebeurtenishandler onProgress wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('progress', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onSecurityError, "De gebeurtenishandler onSecurityError wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('securityError', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Event_onOpen, "De gebeurtenishandler onOpen wordt niet automatisch geactiveerd door Flash Player tijdens uitvoering in ActionScript 3.0. U moet deze handler eerst voor de gebeurtenis registreren met addEventListener ('open', callback_handler)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Mogelijk gebruik van de ActionScript 2.0-klasse XML." );
        warningConstantsNL[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Migratieprobleem: de naam van de ActionScript 2.0-klasse XML is gewijzigd in XMLDocument." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadDateCast, "Ongeldige bewerking bij casten van Date." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) gedraagt zich op dezelfde manier als nieuwe Date().toString(). Wanneer u een waarde naar een type Date wilt casten, gebruikt u \"x as Date\" in plaats van Date(x)." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ImportHidesClass, "Wanneer een pakket met dezelfde naam als de huidige klasse wordt geïmporteerd, wordt die klasse-id in dit bereik verborgen." );
        warningConstantsNL[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Wanneer een pakket met dezelfde naam als de huidige klasse wordt geïmporteerd, wordt die klasse-id in dit bereik verborgen." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Meerdere argumenten hebben dezelfde naam." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Er zijn meerdere argumenten met de naam %s opgegeven. Verwijzingen naar dat argument worden altijd omgezet naar de laatste." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Gebruik in plaats hiervan de methode Rectangle.containsRect." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_eval, "Deze functionaliteit is verwijderd." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Deze functionaliteit is vervangen door de eigenschap flash.system.Capabilities.version." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Deze functionaliteit is vervangen door de eigenschap flash.display.MovieClip.framesLoaded." );
        warningConstantsNL[index++] = new AscWarning(kUnsupportedProp__global, "De eigenschap _global is verwijderd. Gebruik een statisch lid van een klasse voor equivalente functionaliteit." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadBoolAssignment, "Er is een niet-Booleaanse waarde gebruikt waar een Booleaanse waarde werd verwacht." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "%s is gebruikt waar een Booleaanse waarde werd verwacht. De expressie wordt gedwongen naar het type Boolean." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadES3TypeProp, "Onbekende eigenschap." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s is geen herkende eigenschap van de dynamische klasse %s." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Onbekende methode." );
        warningConstantsNL[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s is geen herkende methode van de dynamische klasse %s." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Dubbele variabeledefinitie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Dubbele variabeledefinitie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Naam van definitie is gelijk aan de naam van een geïmporteerd pakket. Niet-gekwalificeerde verwijzingen naar die naam worden omgezet naar het pakket en niet naar de definitie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Naam van definitie is gelijk aan de naam van een geïmporteerd pakket. Niet-gekwalificeerde verwijzingen naar die naam worden omgezet naar het pakket en niet naar de definitie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Mogelijk poging tot verwijderen van een vaste eigenschap." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "De gedeclareerde eigenschap %s kan niet worden verwijderd. U kunt gekoppeld geheugen vrijmaken door de waarde ervan in te stellen op null." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Deprecated, "Gebruik van afgeschafte definitie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_Deprecated_specific, "%s is afgeschaft." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DeprecatedMessage, "Gebruik van afgeschafte definitie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsNL[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Gebruik van afgeschafte definitie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "%s' is afgeschaft.  Gebruik '%s'.%s" );
        warningConstantsNL[index++] = new AscWarning(kWarning_DeprecatedSince, "Gebruik van afgeschafte definitie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "%s' is afgeschaft sinds '%s'. Gebruik '%s'." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Gebruik van afgeschafte definitie." );
        warningConstantsNL[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "%s' is afgeschaft sinds '%s'." );
   }

   static final AscWarning[] warningConstantsPL= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsPL() 
   {
      int index=0;
        warningConstantsPL[index++] = new AscWarning(kWarning_NoTypeDecl, "Brak deklaracji typu." );
        warningConstantsPL[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s o nazwie „%s” nie ma deklaracji typu." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Nielogiczne porównanie z niezdefiniowanym obiektem.  Tylko zmienne bez typu (lub z typem *) mogą być niezdefiniowane." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Zmienne typu %s nie mogą być niezdefiniowane. Przed porównaniem nastąpi wymuszenie dla niezdefiniowanej wartości typu %s." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "Funkcja użyta w wyrażeniu new zwraca wartość.  Wynikiem będzie wartość zwrócona przez funkcję, a nie jej nowa instancja." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Problem z przenoszeniem: wynikiem wyrażenia new %s będzie wartość zwrócona przez funkcję %s, a nie jej nowa instancja." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Metoda Boolean() bez argumentów zwraca w języku ActionScript 3.0 wartość false.  W języku ActionScript 2.0 metoda Boolean() zwracała niezdefiniowaną wartość." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Użycie metody Boolean() bez argumentów." );
        warningConstantsPL[index++] = new AscWarning(kWarning_NumberFromStringChanges, "W języku ActionScript 3.0 znak odstępu jest ignorowany i '' zwraca 0. Metoda Number() zwraca NaN w języku ActionScript 2.0, gdy parametr jest równy '' lub zawiera znak odstępu." );
        warningConstantsPL[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Problem z przenoszeniem: gdy funkcja Numer ('') jest uruchamiana dla argumentu będącego pustym ciągiem, zwraca 0 w języku ActionScript 3.0 i NaN w języku ActionScript 2.0." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Format tablicy Array.toString() został zmieniony." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Problem z przenoszeniem: została zmieniona obsługa elementów null i niezdefiniowanych w metodzie Array.toString()" );
        warningConstantsPL[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Nieobsługiwana właściwość ActionScript 2.0." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Problem z przenoszeniem: właściwość %s nie jest już obsługiwana.  %s." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Nieobsługiwana funkcja ActionScript 2.0." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Problem z przenoszeniem: metoda %s nie jest już obsługiwana.  %s." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ChangesInResolve, "Właściwość __resolve nie jest już obsługiwana." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Problem z przenoszeniem: Właściwość __resolve nie jest już obsługiwana.  Podobne funkcje można uzyskać, korzystając z nowej klasy Proxy." );
        warningConstantsPL[index++] = new AscWarning(kWarning_LevelNotSupported, "Właściwość _level nie jest już obsługiwana. Więcej informacji znajduje się w pakiecie flash.display." );
        warningConstantsPL[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Problem z przenoszeniem: Właściwość _level nie jest już obsługiwana. Więcej informacji znajduje się w pakiecie flash.display." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ClassIsSealed, "Klasa jest statyczna.  Nie można dynamicznie dodawać do niej elementów." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Problem z przenoszeniem: Klasa %s nie jest klasą dynamiczną.  Do jej instancji nie można dynamicznie dodawać elementów." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Zmiana sposobu określania zakresu dla tego słowa kluczowego.  Metody klasy wydzielone z instancji klasy będą zawsze wracały do tej instancji.  W języku ActionScript 2.0 następuje wyszukiwanie dynamiczne na podstawie miejsca wywołania metody." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Problem z przenoszeniem: Metoda %s będzie zachowywać się inaczej w języku ActionScript 3.0 z powodu zmiany sposobu określania zakresu dla tego słowa kluczowego. Dodatkowe informacje zawiera wpis ostrzeżenia 1083." );
        warningConstantsPL[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Brak deklaracji przestrzeni nazw (na przykład zmienna nie została zdefiniowana jako publiczna, prywatna itp.)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "Zakres %s zostanie określony jako domyślna przestrzeń nazw. Zmienna %s ma atrybut internal.  Nie będzie ona widoczna poza danym pakietem." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 iteruje właściwości obiektu w instrukcji \"for x in [obiekt docelowy]\" w kolejności losowej." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Problem z przenoszeniem: ActionScript 3.0 iteruje właściwości obiektu w instrukcji \"for x in [obiekt docelowy]\" w kolejności losowej." );
        warningConstantsPL[index++] = new AscWarning(kWarning_InternalError, "Błąd wewnętrzny kompilatora." );
        warningConstantsPL[index++] = new AscWarning(kWarning_InternalError_specific, "Kod błędu: %s." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "ObsługaZdarzeń nie została dodana do detektora." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Problem z przenoszeniem: %s" );
        warningConstantsPL[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Wartość ujemna zostanie zmieniona na dużą wartość dodatnią, gdy zostanie przypisana do typu danych uint." );
        warningConstantsPL[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Użyto wartości ujemnej, podczas gdy była oczekiwana wartość nie mniejsza niż zero (uint)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadNullComparision, "Nielogiczne porównanie z obiektem null." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Nielogiczne porównanie z obiektem null.  Zmienne typu %s nie mogą mieć wartości null." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadNaNComparision, "Nielogiczne porównanie z obiektem typu NaN. Każda operacja porównania z obiektem typu NaN da wartość false, ponieważ zachodzi NaN != NaN." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Nielogiczne porównanie z obiektem typu NaN.  Ta instrukcja zawsze daje wartość false." );
        warningConstantsPL[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Przypisanie w instrukcji warunkowej." );
        warningConstantsPL[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Przypisanie w instrukcji warunkowej.  Czy chodziło o operator == zamiast =?" );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadNullAssignment, "Niemożliwe przypisanie wartości null." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "Użyto wartości null, podczas gdy była oczekiwana wartość %s." );
        warningConstantsPL[index++] = new AscWarning(kWarning_NoConstructor, "Brak konstruktora." );
        warningConstantsPL[index++] = new AscWarning(kWarning_NoConstructor_specific, "Dla klasy %s nie określono funkcji konstruktora." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ConstNotInitialized, "Stała nie została zainicjowana." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "Stała nie została zainicjowana." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadArrayCast, "Możliwa nieprawidłowa operacja rzutowania tablicy." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Instrukcja Array(x) zachowuje się tak samo jak instrukcja new Array(x).  Aby rzutować wartość do typu Array, należy użyć wyrażenia x as Array, a nie Array(x)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "Instrukcja super() nie została wywołana w konstruktorze." );
        warningConstantsPL[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "Instrukcja super() zostanie wykonana przed rozpoczęciem wykonywania tego konstruktora.  Aby jawnie sterować wykonaniem instrukcji super() w konstruktorze, należy umieścić w nim wywołanie tej instrukcji." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_version, "Zamiast tego należy użyć właściwości Capabilities.version." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Więcej informacji zawiera właściwość InteractiveObject.focusRect." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Highquality, "Więcej informacji zawiera właściwość Stage.quality." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Więcej informacji zawiera właściwość Stage.quality." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Więcej informacji zawiera właściwość Stage.quality." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Quality, "Więcej informacji zawiera właściwość Stage.quality." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Zamiast tego należy użyć statycznej właściwości flash.media.SoundMixer.bufferTime." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Te funkcje nie są już obsługiwane." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Więcej informacji zawiera właściwość LoaderInfo.url." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Te funkcje nie są już obsługiwane." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_NewLine, "W celu uzyskania nowego wiersza należy użyć symbolu „\n”." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Więcej informacji zawiera właściwość textField.maxScroll." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Level, "Koncepcja poziomów nie istnieje w języku ActionScript 3.0. Zamiast tego można uzyskiwać dostęp bezpośrednio do listy wyświetlania. Szczegółowe informacje zawiera pakiet flash.display." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Parent, "Zamiast tego należy użyć właściwości nadrzędnej." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Root, "Ta właściwość została usunięta. Jej najbliższym odpowiednikiem jest właściwość Stage, służąca jako główny obiekt listy wyświetlania ActionScript 3.0." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Zamiast tego należy spróbować zadeklarować element wywołujący jako argument funkcji." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Te funkcje nie są już obsługiwane." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Zamiast tego należy użyć właściwości nadrzędnej." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Te funkcje nie są już obsługiwane." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Więcej informacji zawiera właściwość Sprite.hitArea." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Scroll, "Więcej informacji zawierają właściwości scrollH i scrollV klasy flash.text.TextField." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Zamiast ścieżek należy używać jako argumentów samych obiektów MovieClip." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Więcej informacji zawiera właściwość Video.videoHeight." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Więcej informacji zawiera właściwość Video.videoWidth." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp__Proto__, "Więcej informacji zawiera przestarzała właściwość __proto__." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Stage, "Więcej informacji zawiera właściwość DisplayObject.stage." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Zamiast tego należy użyć metody registerClass() w pakiecie flash.net." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_random, "Zamiast tego należy użyć metody Math.random()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_chr, "Zamiast tego należy użyć metody String.fromCharCode()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Zamiast tego należy użyć metody Use String.fromCharCode()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ord, "Zamiast tego należy użyć metody String.charCodeAt()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_mbord, "Zamiast tego należy użyć metody String.charCodeAt()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_substring, "Zamiast tego należy użyć metody String.substr." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Zamiast tego należy użyć metody String.substr." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_length, "Zamiast tego należy użyć właściwości length argumentu." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_mblength, "Zamiast tego należy użyć właściwości length argumentu." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Więcej informacji zawierają zmiany odniesienia ASnative." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Zamiast tego należy ustawić właściwości bezpośrednio w instancji, korzystając z notacji kropkowej (.)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Zamiast tego należy uzyskiwać dostęp do właściwości bezpośrednio za pomocą notacji kropkowej (.)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Zamiast tego należy ustawić właściwości bezpośrednio w instancji, korzystając z notacji kropkowej (.)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Dodatkowe informacje zawiera zdarzenie TextEvent.LINK i metoda addEventListener()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Ta metoda została przeniesiona do pakietu flash.utils." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Zastąpiono nową funkcją konstruktora klasy MovieClip." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Przeniesiono do pakietu flash.system. Zobacz też informacje dotyczące komunikacji JavaScript/ActionScript w klasie flash.external.ExternalInterface." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_getURL, "Odpowiednik tej funkcji znajduje się w pakiecie flash.net.URLLoader.  Pakiet flash.net zawiera również funkcje poziomu pakietu navigateToURL() i sendToURL()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Więcej informacji zawiera metoda MovieClip.gotoAndPlay()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Więcej informacji zawiera metoda MovieClip.gotoAndStop()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_play, "Więcej informacji zawiera metoda MovieClip.play()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_print, "Więcej informacji zawiera metoda PrintJob.start()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Więcej informacji zawiera klasa PrintJob." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Więcej informacji zawiera klasa PrintJob." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_printNum, "Więcej informacji zawiera klasa PrintJob." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Należy użyć metody Container.removeChild(nazwa elementu potomnego). Więcej informacji znajduje się w klasie DisplayObjectContainer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Przeniesiono do pakietu flash.utils.  Należy rozważyć zamienne użycie klasy Timer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Więcej informacji zawiera metoda MovieClip.nextFrame()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Więcej informacji zawiera metoda MovieClip.startDrag()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_stop, "Więcej informacji zawiera metoda MovieClip.stop()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Więcej informacji zawiera metoda Sound.stopAllSounds()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Więcej informacji zawiera metoda MovieClip.stopDrag()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Zamiast tego należy użyć operatora kropki (.) lub instrukcji with." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Więcej informacji zawierają właściwości DisplayObject.stage i Stage.quality." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Zamiast tego należy użyć metody DisplayObjectContainer.removeChild(nazwa elementu potomnego). Więcej informacji znajduje się w klasie DisplayObjectContainer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Zamiast tego należy użyć metody DisplayObjectContainer.removeChild(nazwa elementu potomnego). Więcej informacji znajduje się w klasie DisplayObjectContainer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Ta funkcja nie jest już globalna, ale nadal jest dostępna jako metoda klas TimerEvent, MouseEvent i KeyboardEvent." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Więcej informacji zawierają pakiety Video.attachNetStream i Video.attachCamera." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Należy wykonać wczytywanie za pomocą klasy URLLoader i przekazać wynik do metody StyleSheet.parseCSS()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "Domyślnie w języku ActionScript 3.0 wszystkie klasy są zarejestrowane.  Dodatkowe informacje dotyczące używania formatu AMF zawiera metoda flash.utils.registerClassAlias()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "W celu uzyskania podobnych funkcji należy użyć właściwości metod uzyskiwania dostępu (funkcji pobierających/ustawiających) lub klasy flash.utils.Proxy." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "W celu uzyskania podobnych funkcji należy użyć właściwości metod uzyskiwania dostępu (funkcji pobierających/ustawiających) lub klasy flash.utils.Proxy." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Więcej informacji zawiera metoda MovieClip.loadMovie()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Więcej informacji zawiera metoda MovieClip.loadMovieNum()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Więcej informacji zawiera metoda Loader.load()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Więcej informacji zawiera metoda Loader.load()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Więcej informacji zawiera metoda addEventListener(nazwa zdarzenia, detektor, użyj przechwytu, priorytet)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Więcej informacji zawiera metoda removeEventListener(nazwa zdarzenia, detektor, użyj przechwytu)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Więcej informacji zawiera metoda addEventListener(nazwa zdarzenia, detektor, użyj przechwytu, priorytet)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Więcej informacji zawiera metoda removeEventListener(nazwa zdarzenia, detektor, użyj przechwytu)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Więcej informacji zawiera metoda addEventListener(nazwa zdarzenia, detektor, użyj przechwytu, priorytet)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Więcej informacji zawiera metoda removeEventListener(nazwa zdarzenia, detektor, użyj przechwytu)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Więcej informacji zawiera metoda addEventListener(nazwa zdarzenia, detektor, użyj przechwytu, priorytet)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Więcej informacji zawiera metoda removeEventListener(nazwa zdarzenia, detektor, użyj przechwytu)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Używanie klasy SWF do tworzenia dźwięków z biblioteki" );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onStatus, "Moduł obsługi zdarzeń onStatus nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('status', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onID3, "Moduł obsługi zdarzeń onID3 nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('id3', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onLoad, "Moduł obsługi zdarzeń onLoad nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('load', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onSoundComplete, "Moduł obsługi zdarzeń onSoundComplete nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('soundComplete', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onSetFocus, "Moduł obsługi zdarzeń onSetFocus nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('focusIn', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onResize, "Moduł obsługi zdarzeń onResize nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('resize', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onChanged, "Moduł obsługi zdarzeń onChanged nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('change', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onKillFocus, "Moduł obsługi zdarzeń onKillFocus nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('focusOut', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onScroller, "Moduł obsługi zdarzeń onScroller nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('scroll', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onMouseDown, "Moduł obsługi zdarzeń onMouseDown nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('mouseDown', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onMouseUp, "Moduł obsługi zdarzeń onMouseUp nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('mouseUp', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onMouseMove, "Moduł obsługi zdarzeń onMouseMove nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('mouseMove', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onMouseWheel, "Moduł obsługi zdarzeń onMouseWheel nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('mouseWheel', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onKeyDown, "Moduł obsługi zdarzeń onKeyDown nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('keyDown', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onKeyUp, "Moduł obsługi zdarzeń onKeyUp nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('keyUp', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onData, "Moduł obsługi zdarzeń onData nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('data', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "Moduł obsługi zdarzeń onHTTPStatus nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('httpStatus', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onDragOut, "Moduł obsługi zdarzeń onDragOut nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('mouseOut', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onDragOver, "Moduł obsługi zdarzeń onDragOver nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('mouseOver', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onPress, "Moduł obsługi zdarzeń onPress nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('mouseDown', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onRelease, "Moduł obsługi zdarzeń onRelease nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('click', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "Moduł obsługi zdarzeń onReleaseOutside nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('mouseUp', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onRollOut, "Moduł obsługi zdarzeń onRollOut nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('mouseOut', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onRollOver, "Moduł obsługi zdarzeń onRollOver nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('mouseOver', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onActivity, "Moduł obsługi zdarzeń onActivity nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('activity', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onSelect, "Moduł obsługi zdarzeń onSelect nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('menuSelect', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onEnterFrame, "Moduł obsługi zdarzeń onEnterFrame nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('enterFrame', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onUnload, "Moduł obsługi zdarzeń onUnload nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('unload', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onLoadComplete, "Moduł obsługi zdarzeń onLoadComplete nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('load', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onLoadError, "Moduł obsługi zdarzeń onLoadError nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('error', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onLoadInit, "Moduł obsługi zdarzeń onLoadInit nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('init', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onLoadProgress, "Moduł obsługi zdarzeń onLoadProgress nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('progress', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onLoadStart, "Moduł obsługi zdarzeń onLoadStart nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('start', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onClose, "Moduł obsługi zdarzeń onClose nie jest wyzwalany automatycznie przez program Flash Player w czasie wykonywania skryptów ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('close', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onConnect, "Moduł obsługi zdarzeń onConnect nie jest wyzwalany automatycznie przez program Flash Player w skryptach ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('connect', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onXML, "Moduł obsługi zdarzeń onXML jest wyzwalany automatycznie przez program Flash Player w skryptach ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener ('xml', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Zamiast tego należy użyć właściwości hasChildNodes." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "Klasa XMLEvent jest przestarzała, a zdarzenie xml nie jest już dysponowane. Podczas wczytywania pliku jest dysponowane tylko zdarzenie danych." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "Nazwa klasy XMLDoc została zmieniona na XMLDocument." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Zamiast tego należy użyć właściwości Accessibility.active." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Zamiast tego należy użyć stałej ActivityEvent.ACTIVITY." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Zamiast tego należy użyć właściwości DisplayObjectContainer.parent.getChildIndex. Zobacz pomoc klasy DisplayObjectContainer rozszerzonej przez klasę MovieClip." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Zamiast tego należy użyć właściwości DisplayObjectContainer.parent.setChildIndex. Zobacz pomoc klasy DisplayObjectContainer rozszerzonej przez klasę MovieClip." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Zamiast tego należy użyć właściwości DisplayObjectContainer.getChildAt. Zobacz pomoc klasy DisplayObjectContainer rozszerzonej przez klasę MovieClip." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Zamiast tego należy użyć właściwości DisplayObjectContainer.numChildren. Właściwość DisplayObjectContainer.addChild zawsze dodaje nowy element potomny do indeksu DisplayObjectContainer.numChildren." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Zamiast tego należy użyć właściwości ByteArray.bytesAvailable." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Zamiast tego należy użyć właściwości ByteArray.position." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Zamiast tego należy użyć właściwości ByteArray.position." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Zamiast tego należy użyć metody Camera.getCamera()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Zamiast tego należy użyć właściwości Camera.currentFPS." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Zamiast tego należy użyć właściwości Camera.keyFrameInterval." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Zamiast tego należy użyć właściwości Camera.loopback." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Zamiast tego należy użyć właściwości ColorTransform.color." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Zamiast tego należy użyć właściwości ColorTransform.color." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Zamiast tego należy użyć właściwości Container.textSnapshot." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Zamiast tego należy użyć metody ContextMenu.clone()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Zamiast tego należy użyć właściwości ContextMenu.forwardAndBack." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Zamiast tego należy użyć metody ContextMenuItem.clone()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Zamiast tego należy użyć właściwości CustomActions.actionsList." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Zamiast tego należy użyć stałej DataEvent.DATA." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Zamiast tego należy użyć właściwości DisplayObject.scaleX." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Zamiast tego należy użyć właściwości DisplayObject.scaleX." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Zamiast tego należy użyć właściwości DisplayObject.scaleY." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Zamiast tego należy użyć właściwości DisplayObject.scaleY." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Zamiast tego należy użyć właściwości DisplayObject.mouseX." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Zamiast tego należy użyć właściwości DisplayObject.mouseX." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Zamiast tego należy użyć właściwości DisplayObject.mouseY." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Zamiast tego należy użyć właściwości DisplayObject.mouseY." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Ta funkcja nie jest już obsługiwana." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Ta funkcja nie jest już obsługiwana." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Zamiast tego należy użyć właściwości DisplayObject.name." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Zamiast tego należy użyć właściwości DisplayObject.parent." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Zamiast tego należy użyć właściwości DisplayObject.mask." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Zamiast tego należy użyć właściwości DisplayObject.visible." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Zamiast tego należy użyć właściwości DisplayObject.x." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Zamiast tego należy użyć właściwości DisplayObject.y." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Zamiast tego należy użyć właściwości DisplayObject.rotation." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Zamiast tego należy użyć właściwości DisplayObject.alpha." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Zamiast tego należy użyć właściwości DisplayObject.width." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Zamiast tego należy użyć właściwości DisplayObject.height." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Zamiast tego należy użyć właściwości ExternalInterface.available." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Zamiast tego należy użyć stałej ErrorEvent.ERROR." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Zamiast tego należy użyć właściwości Event.isDefaultPrevented." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Zamiast tego należy użyć stałej Event.ACTIVATE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Zamiast tego należy użyć stałej Event.ADDED." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Zamiast tego należy użyć stałej Event.CANCEL." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Zamiast tego należy użyć stałej Event.CHANGE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Zamiast tego należy użyć stałej Event.CLOSE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Zamiast tego należy użyć stałej Event.COMPLETE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Zamiast tego należy użyć stałej Event.CONNECT." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Zamiast tego należy użyć stałej Event.DEACTIVATE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Zamiast tego należy użyć stałej Event.ENTER_FRAME." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Zamiast tego należy użyć stałej Event.ID3." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Zamiast tego należy użyć stałej Event.INIT." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Zamiast tego należy użyć stałej Event.MOUSE_LEAVE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Zamiast tego należy użyć stałej Event.OPEN." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Zamiast tego należy użyć stałej Event.REMOVED." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Zamiast tego należy użyć stałej Event.RENDER." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Zamiast tego należy użyć stałej Event.RESIZE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Zamiast tego należy użyć stałej Event.SCROLL." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Zamiast tego należy użyć stałej Event.SELECT." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Zamiast tego należy użyć stałej Event.SOUND_COMPLETE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Zamiast tego należy użyć stałej Event.TAB_CHILDREN_CHANGE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Zamiast tego należy użyć stałej Event.TAB_ENABLED_CHANGE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Zamiast tego należy użyć stałej Event.TAB_INDEX_CHANGE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Zamiast tego należy użyć stałej Event.UNLOAD." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Zamiast tego należy użyć stałej FocusEvent.FOCUS_IN." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Zamiast tego należy użyć stałej FocusEvent.FOCUS_OUT." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Zamiast tego należy użyć stałej FocusEvent.KEY_FOCUS_CHANGE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Zamiast tego należy użyć stałej FocusEvent.MOUSE_FOCUS_CHANGE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Zamiast tego należy użyć metody Graphics.beginBitmapFill()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Zamiast tego należy użyć właściwości BitmapFilter.quality." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Zamiast tego należy użyć właściwości KeyboardEvent.charCode." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Zamiast tego należy użyć właściwości KeyboardEvent.keyCode." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Więcej informacji znajduje się w klasie KeyboardEvent." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Więcej informacji znajduje się we właściwościach KeyboardEvent.ctrlKey, KeyboardEvent.altKey i KeyboardEvent.shiftKey." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Zamiast tego należy użyć stałej PAGE_DOWN." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Zamiast tego należy użyć stałej PAGE_UP." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Zamiast tego należy użyć stałej DELETE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Zamiast tego należy użyć stałej CAPS_LOCK." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Zamiast tego należy użyć stałych od NUMPAD_0 do NUMPAD_9." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Zamiast tego należy użyć właściwości InteractiveObject.focusRect." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Zamiast tego należy użyć właściwości InteractiveObject.contextMenu." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Zamiast tego należy użyć właściwości KeyboardEvent.charCode." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Zamiast tego należy użyć właściwości KeyboardEvent.keyCode." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Zamiast tego należy użyć właściwości Loader.contentLoaderInfo." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Ta funkcja nie jest już obsługiwana." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Ta funkcja nie jest już obsługiwana." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Zamiast tego należy użyć właściwości LoaderInfo.loaderURL." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Zamiast tego należy użyć właściwości LocalConnection.domain." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Zamiast tego należy użyć właściwości MenuEvent.contextMenuOwner." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Zamiast tego należy użyć metody Microphone.getMicrophone()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Jeśli nazwa podklasy obiektu MovieClip ma wartość A, należy użyć wyrażenia: var mc= new A(); addChild(mc). Więcej informacji znajduje się w klasie DisplayObjectContainer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Należy użyć wyrażenia: var mc= new MovieClip(); addChild(mc). Więcej informacji znajduje się w klasie DisplayObjectContainer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Należy użyć wyrażenia: var tf= new TextField(); addChild(mc). Więcej informacji znajduje się w klasie DisplayObjectContainer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Należy użyć metody Container.removeChild(nazwa elementu potomnego). Więcej informacji znajduje się w klasie DisplayObjectContainer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Należy użyć wyrażenia var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));. Więcej informacji znajduje się w klasie Loader i DisplayObjectContainer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Zamiast tego należy użyć metody DisplayObjectContainer.removeChild(nazwa elementu potomnego). Więcej informacji znajduje się w klasie DisplayObjectContainer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Zamiast tego należy użyć metody DisplayObjectContainer.removeChild(nazwa elementu potomnego). Więcej informacji znajduje się w klasie DisplayObjectContainer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Zamiast tego należy użyć właściwości DisplayObjectContainer.parent.getChildIndex. Więcej informacji znajduje się w klasie DisplayObjectContainer rozszerzanej przez obiekt MovieClip." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Zamiast tego należy użyć właściwości DisplayObjectContainer.parent.setChildIndex. Więcej informacji znajduje się w klasie DisplayObjectContainer rozszerzonej przez obiekt MovieClip." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Zamiast tego należy użyć właściwości DisplayObjectContainer.getChildAt. Więcej informacji znajduje się w klasie DisplayObjectContainer rozszerzanej przez obiekt MovieClip." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Zamiast tego należy użyć właściwości DisplayObjectContainer.numChildren. Właściwość DisplayObjectContainer.addChild zawsze dodaje nowy element potomny do indeksu DisplayObjectContainer.numChildren." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Więcej informacji znajduje się w metodzie DisplayObject.addChild." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Więcej informacji znajduje się we właściwości LoaderInfo.bytesLoaded i w klasie Loader." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Więcej informacji znajduje się we właściwości LoaderInfo.bytesTotal i w klasie Loader." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Odpowiednik tej funkcji znajduje się w pakiecie flash.net.URLLoader.  Pakiet flash.net zawiera również funkcje poziomu pakietu navigateToURL() i sendToURL()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Więcej informacji znajduje się we właściwości LoaderInfo.url i w klasie Loader." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Więcej informacji znajduje się we właściwości LoaderInfo.url i w klasie Loader." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Zamiast tego należy użyć właściwości MovieClip.mask." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Więcej informacji znajduje się we właściwości LoaderInfo.swfVersion i w klasie Loader." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Zamiast tego należy użyć właściwości MovieClip.currentFrame." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Zamiast tego należy użyć właściwości MovieClip.framesLoaded." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Zamiast tego należy użyć właściwości MovieClip.totalFrames." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Więcej informacji znajduje się we właściwości displayObjectInstance.root." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Więcej informacji znajduje się we właściwości displayObjectInstance.root." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Zamiast tego należy użyć statycznej właściwości flash.media.SoundMixer.bufferTime." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Więcej informacji znajduje się w klasie Graphics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Zamiast tego należy użyć właściwości NetStream.bufferTime." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Zamiast tego należy użyć właściwości NetStream.currentFPS." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Zamiast tego należy użyć właściwości NetStream.videoCodec." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Zamiast tego należy użyć właściwości NetStream.audioCodec." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Zamiast tego należy użyć właściwości ProductManager.isInstalled." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Zamiast tego należy użyć właściwości ProductManager.installedVersion." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Zamiast tego należy użyć właściwości ProductManager.isRunning." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Zamiast tego należy użyć metody Point.add()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Zamiast tego należy użyć właściwości Proxy.deleteDescendants." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Zamiast tego należy użyć metody heapDump()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Zamiast tego należy użyć właściwości ProgressEvent.bytesLoaded." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Zamiast tego należy użyć właściwości ProgressEvent.bytesTotal." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Zamiast tego należy użyć właściwości Rectangle.isEmpty." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Zamiast tego należy użyć właściwości SoundTransform.pan." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Zamiast tego należy użyć właściwości Sockect.bytesAvailable." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Zamiast tego należy użyć właściwości SharedObject.size." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Zamiast tego należy użyć właściwości SharedObject.fps." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Ten element nie jest już obsługiwany." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Zamiast tego należy użyć metody Sprite.constructChildren()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Zamiast tego należy użyć właściwości Sprite.dropTarget." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Zamiast tego należy użyć właściwości Stage.focus." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Zamiast tego należy użyć właściwości Stage.focus." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Zamiast tego należy użyć właściwości Stage.showDefaultContextMenu." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Zamiast tego należy użyć właściwości StyleSheet.styleNames." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Należy użyć instancji klasy URLLoader w celu załadowania danych StyleSheet, a następnie przekazać dane modułu ładującego do metody StyleSheet.parseCSS. Więcej informacji znajduje się w klasach URLLoader i EventDispatcher." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Należy użyć instancji klasy URLLoader w celu załadowania danych StyleSheet, a następnie przekazać dane modułu ładującego do metody StyleSheet.parseCSS. Więcej informacji znajduje się w klasach URLLoader i EventDispatcher." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Należy użyć instancji klasy URLLoader w celu załadowania danych StyleSheet, a następnie przekazać dane modułu ładującego do metody StyleSheet.parseCSS. Więcej informacji znajduje się w klasach URLLoader i EventDispatcher." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Należy użyć instancji klasy URLLoader w celu załadowania danych StyleSheet, a następnie przekazać dane modułu ładującego do metody StyleSheet.parseCSS. Więcej informacji znajduje się w klasach URLLoader i EventDispatcher." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Należy użyć instancji klasy URLLoader w celu załadowania danych StyleSheet, a następnie przekazać dane modułu ładującego do metody StyleSheet.parseCSS. Więcej informacji znajduje się w klasach URLLoader i EventDispatcher." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Zamiast tego należy użyć właściwości IME.enabled." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Zamiast tego należy użyć właściwości IME.enabled." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Zamiast tego należy użyć właściwości IME.instance." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Zamiast tego należy użyć właściwości IME.conversionMode." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Zamiast tego należy użyć właściwości IME.conversionMode." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Zamiast tego należy użyć właściwości System.vmVersion." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Zamiast tego należy użyć właściwości SWFLoaderInfo.swfVersion." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Zamiast tego należy użyć właściwości SWFLoaderInfo.actionScriptVersion." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Zamiast tego należy użyć właściwości TextField.defaultTextFormat." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Zamiast tego należy użyć właściwości TextField.defaultTextFormat." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Zamiast tego należy użyć właściwości DisplayObjectContainer.parent.getChildIndex. Więcej informacji znajduje się w klasie DisplayObjectContainer rozszerzanej przez obiekt MovieClip." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Zamiast tego należy użyć właściwości DisplayObjectContainer.parent.setChildIndex. Więcej informacji znajduje się w klasie DisplayObjectContainer rozszerzanej przez obiekt MovieClip." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Zamiast tego należy użyć właściwości DisplayObjectContainer.getChildAt. Więcej informacji znajduje się w klasie DisplayObjectContainer rozszerzanej przez obiekt MovieClip." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Zamiast tego należy użyć właściwości DisplayObjectContainer.numChildren.  Właściwość DisplayObjectContainer.addChild zawsze dodaje nowy element potomny do indeksu DisplayObjectContainer.numChildren." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Zamiast tego należy użyć metody TextField.replaceSelectedText()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Zamiast tego należy użyć metody TextField.getLineIndexOfChar()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Zamiast tego należy użyć właściwości TextField.selectionBeginIndex." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Zamiast tego należy użyć właściwości TextField.selectionEndIndex." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Zamiast tego należy użyć właściwości TextField.caretIndex." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Zamiast tego należy użyć metody Font.enumerateFonts()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Zamiast tego należy użyć właściwości TextField.maxScrollV." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Zamiast tego należy użyć właściwości TextField.scrollH." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Zamiast tego należy użyć właściwości TextField.maxScrollH." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Zamiast tego należy użyć właściwości TextField.defaultTextFormat." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Zamiast tego należy utworzyć tymczasowy obiekt TextField i użyć właściwości TextField.getLineMetrics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Zamiast tego należy użyć właściwości TextSnapshot.charCount." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Zamiast tego należy użyć metody navigateToURL() w pakiecie flash.net." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Zamiast tego należy użyć metody sendToURL() w pakiecie flash.net." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Zamiast tego należy użyć właściwości URLLoader.dataFormat." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Zamiast tego należy użyć właściwości URLStream.bytesAvailable." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Ta właściwość nie jest już obsługiwana." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Zamiast tego należy użyć właściwości URLRequest.applicationDomain." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Aby dodać nagłówki żądania, należy ustawić we właściwości URLRequest.requestHeaders tablicę obiektów URLRequestHeader." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Należy użyć instancji obiektu URLLoader w celu załadowania pliku XML, a następnie przekazać dane obiektu URLLoader do konstruktora obiektów XMLDocument. Więcej informacji znajduje się w klasach URLLoader i EventDispatcher." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Zamiast tego należy użyć metody sendToURL() w pakiecie flash.net." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Należy ustawić właściwość postData obiektu URLRequest, a następnie użyć go wraz z obiektem URLLoader w celu załadowania pliku XML.  Dane obiektu URLLoader należy przekazać do konstruktora obiektów XMLDocument. Więcej informacji znajduje się w klasach URLLoader, URLRequest i EventDispatcher." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Należy użyć instancji obiektu URLLoader w celu załadowania pliku XML, a następnie przekazać dane obiektu URLLoader do konstruktora obiektów XMLDocument. Więcej informacji znajduje się w klasach URLLoader i EventDispatcher." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Aby dodać nagłówki żądania, należy ustawić we właściwości URLRequest.requestHeaders tablicę obiektów URLRequestHeader." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Więcej informacji znajduje się we właściwości URLLoader.bytesLoaded i w klasie URLLoader." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Więcej informacji znajduje się we właściwości URLLoader.bytesTotal i w klasie URLLoader." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Należy użyć instancji obiektu URLLoader w celu załadowania danych pliku XML, a następnie przekazać dane modułu ładującego do metody StyleSheet.parseCSS. Więcej informacji znajduje się w klasach URLLoader i EventDispatcher." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Zamiast tego należy użyć właściwości URLRequest.contentType." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Zamiast tego należy sprawdzić, czy zostały wygenerowane wyjątki w konstruktorze obiektów XMLDocument lub metodzie XMLDocument.parseXML. Więcej informacji znajduje się w klasie XMLDocument." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Button, "Nazwa klasy Button została zmieniona na SimpleButton." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Container, "Nazwa klasy Container została zmieniona na DisplayObjectContainer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Image, "Nazwa klasy Image została zmieniona na BitmapData." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "Nazwa klasy ImageFilter została zmieniona na BitmapFilter." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "Nazwa klasy ImageSprite została zmieniona na Bitmap." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "Nazwa klasy ImageLoaderInfo została zmieniona na BitmapLoaderInfo." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "Nazwa klasy ImeEvent została zmieniona na IMEEvent." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Key, "Nazwa klasy Key została zmieniona na Keyboard." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "Nazwa klasy LineMetrics została zmieniona na TextLineMetrics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Więcej informacji znajduje się w klasie URLVariables, a także we właściwościach URLRequest.urlVariables, URLRequest.postData i URLLoader.dataFormat." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "Nazwa klasy MenuEvent została zmieniona na ContextMenuEvent." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "Nazwa klasy SystemCapabilities została zmieniona na Capabilities." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Zamiast tego należy użyć właściwości TextField.getLineMetrics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Button, "Nazwa klasy Button została zmieniona na SimpleButton." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Container, "Nazwa klasy Container została zmieniona na DisplayObjectContainer." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Image, "Nazwa klasy Image została zmieniona na BitmapData." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "Nazwa klasy ImageFilter została zmieniona na BitmapFilter." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "Nazwa klasy ImageSprite została zmieniona na Bitmap." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "Nazwa klasy ImageLoaderInfo została zmieniona na BitmapLoaderInfo." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "Nazwa klasy ImeEvent została zmieniona na IMEEvent." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Key, "Nazwa klasy Key została zmieniona na Keyboard." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "Nazwa klasy LineMetrics została zmieniona na TextLineMetrics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Więcej informacji znajduje się w klasie URLVariables, a także we właściwościach URLRequest.urlVariables, URLRequest.postData i URLLoader.dataFormat." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "Nazwa klasy MenuEvent została zmieniona na ContextMenuEvent." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "Nazwa klasy SystemCapabilities została zmieniona na Capabilities." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Zamiast tego należy użyć właściwości TextField.getLineMetrics." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Więcej informacji znajduje się w pomocy dotyczącej klasy Proxy, w której dostępne są podobne funkcje." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Zamiast tego należy użyć metody XMLUI.getProperty." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Zamiast tego należy użyć metody XMLUI.setProperty." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Zamiast tego należy użyć właściwości DisplayObject.accessibilityProperties." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Zamiast tego należy użyć właściwości DisplayObject.scale9Grid." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Zamiast tego należy użyć metody Graphics.drawOval." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Zamiast tego należy użyć właściwości NetConnection.connected." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Zamiast tego należy użyć właściwości Socket.connected." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Zamiast tego należy użyć właściwości URLStream.connected." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Zamiast tego należy użyć właściwości SyncEvent.changeList." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Zamiast tego należy użyć właściwości TextField.scrollV." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Zamiast tego należy użyć właściwości TextField.bottomScrollV." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Zamiast tego należy użyć stałej BitmapDataChannel.RED." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Zamiast tego należy użyć stałej BitmapDataChannel.GREEN." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Zamiast tego należy użyć stałej BitmapDataChannel.BLUE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Zamiast tego należy użyć stałej BitmapDataChannel.ALPHA." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Zamiast tego należy użyć operatora is." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Zamiast tego należy użyć metody flash.system.Security.showSettings." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Zamiast tego należy użyć właściwości System.useCodePage." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Zamiast tego należy użyć klasy flash.events.EventDispatcher." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Zamiast tego należy użyć statycznej właściwości flash.media.SoundMixer.bufferTime." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Zamiast tego należy utworzyć nową instancję klasy symbolu biblioteki bitmap, np. nowy obiekt myBitmapName()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Więcej informacji znajduje się w pakiecie Loader.load()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "Klasa MovieClipLoader została zastąpiona klasą flash.display.Loader." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "Klasa MovieClipLoader została zastąpiona klasą flash.display.Loader." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Więcej informacji znajduje się w metodzie addEventListener(nazwa zdarzenia, detektor, użyj przechwytu, priorytet)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Więcej informacji znajduje się w metodzie removeEventListener(nazwa zdarzenia, detektor, użyj przechwytu)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Zamiast tego należy użyć stałej flash.system.IMEConversionMode.ALPHANUMERIC_FULL." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Zamiast tego należy użyć stałej flash.system.IMEConversionMode.ALPHANUMERIC_HALF." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Zamiast tego należy użyć stałej flash.system.IMEConversionMode.CHINESE." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Zamiast tego należy użyć stałej flash.system.IMEConversionMode.JAPANESE_HIRAGANA." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Zamiast tego należy użyć stałej flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Zamiast tego należy użyć stałej flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF ." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Zamiast tego należy użyć stałej flash.system.IMEConversionMode.KOREAN." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Zamiast tego należy użyć stałej flash.system.IMEConversionMode.UNKNOWN." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Więcej informacji znajduje się w metodzie addEventListener(nazwa zdarzenia, detektor, użyj przechwytu, priorytet)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Więcej informacji znajduje się w metodzie removeEventListener(nazwa zdarzenia, detektor, użyj przechwytu)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onCancel, "Moduł obsługi zdarzeń onCancel nie jest wyzwalany automatycznie przez odtwarzacz Flash Player podczas działania programu ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener(anuluj, onCancel)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Bezpośredni zamiennik nie istnieje. Metody willTrigger() można użyć w celu określenia, czy zostały zarejestrowane jakiekolwiek detektory." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onIMEComposition, "Moduł obsługi zdarzeń onIMEComposition nie jest wyzwalany automatycznie przez odtwarzacz Flash Player podczas działania programu ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener(imeComposition, nazwa procedury obsługi)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Więcej informacji znajduje się we właściwości LoaderInfo.url i w klasie Loader." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Zamiast tego należy użyć metody getFullYear()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Zamiast tego należy użyć metody setFullYear()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Zamiast tego należy użyć metody getUTCFullYear()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Zamiast tego należy użyć właściwości rate." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Selection, "Klasa Selection została usunięta Więcej informacji znajduje się w metodzie addEventListener w klasie, której mają dotyczyć informacje o zaznaczeniu." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Selection, "Klasa Selection została usunięta Więcej informacji znajduje się w metodzie addEventListener w klasie, której mają dotyczyć informacje o zaznaczeniu." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Zamiast tego należy użyć właściwości gain." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Wartości kolorów można przypisać bezpośrednio za pomocą konstruktora lub właściwości klasy ColorTransform." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Wartości kolorów można przypisać bezpośrednio za pomocą konstruktora lub właściwości klasy ColorTransform." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Zobacz pomoc dla właściwości dotyczących zaznaczania w klasie flash.display.InteractiveObject." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Zobacz pomoc dla metody flash.display.Graphics.beginBitmapFill." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Zobacz pomoc dla metody flash.display.DisplayObject.hitTestObject()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Zobacz pomoc dla metody addChild()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Zamiast tego należy użyć metody load()." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Właściwości flash.media.SoundChannel.leftPeak i flash.media.SoundChannel.rightPeak służą do śledzenia i kontrolowania głośności kanałów dźwiękowych." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Zamiast tego należy użyć właściwości soundTransform." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Zamiast tego należy użyć właściwości SoundTransform.pan." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Zamiast tego należy użyć właściwości SoundTransform.pan." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Zamiast tego należy użyć właściwości bytesLoaded." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Zamiast tego należy użyć właściwości bytesTotal." );
        warningConstantsPL[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Nieefektywne użycie właściwości += w obiekcie TextField." );
        warningConstantsPL[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Dołączanie tekstu do obiektu TextField przy użyciu właściwości += jest znacznie wolniejsze od metody TextField.appendText()." );
        warningConstantsPL[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Możliwy brak nawiasów." );
        warningConstantsPL[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "W miejscu, w którym oczekiwano typu %s, została użyta wartość funkcji.  Możliwe, że po odniesieniu do tej funkcji brakuje nawiasów ()." );
        warningConstantsPL[index++] = new AscWarning(kWarning_InstanceOfChanges, "Należy użyć operatora instanceof." );
        warningConstantsPL[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "Operator instanceof jest nieużywany. Zamiast tego należy użyć operatora is." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "Moduł obsługi zdarzeń allowDomain() jest teraz standardową metodą, a nie wywołaniem zwrotnym zdarzenia. Więcej informacji znajduje się w nowej metodzie LocalConnection.allowDomain." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "Moduł obsługi zdarzeń allowInsecureDomain() jest teraz standardową metodą, a nie wywołaniem zwrotnym zdarzenia. Więcej informacji znajduje się w nowej metodzie LocalConnection.allowInsecureDomain." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_call, "Globalna metoda call() nie jest już obsługiwana." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_Color, "Klasa Color została usunięta Podobne funkcje można uzyskać, korzystając z klasy flash.geom.ColorTransform." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Color, "Klasa Color została usunięta Podobne funkcje można uzyskać, korzystając z klasy flash.geom.ColorTransform." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "Pliki SWF programu ActionScript 3.0 zawsze korzystają z reguł precyzyjnego dopasowywania domen." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp_capabilities, "Nazwa klasy capabilities została zmieniona na Capabilities." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_capabilities, "Nazwa klasy capabilities została zmieniona na Capabilities." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Więcej informacji znajduje się w metodzie addEventListener(nazwa zdarzenia, detektor, użyj przechwytu, priorytet)." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Więcej informacji znajduje się w metodzie removeEventListener(nazwa zdarzenia, detektor, użyj przechwytu)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onComplete, "Moduł obsługi zdarzeń onComplete nie jest wyzwalany automatycznie przez odtwarzacz Flash Player podczas działania programu ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener('complete', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onHTTPError, "Moduł obsługi zdarzeń onHTTPError nie jest wyzwalany automatycznie przez odtwarzacz Flash Player podczas działania programu ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener('httpError', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onIOError, "Moduł obsługi zdarzeń onIOError nie jest wyzwalany automatycznie przez odtwarzacz Flash Player podczas działania programu ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener('ioError', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onProgress, "Moduł obsługi zdarzeń onProgress nie jest wyzwalany automatycznie przez odtwarzacz Flash Player podczas działania programu ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener('progress', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onSecurityError, "Moduł obsługi zdarzeń onSecurityError nie jest wyzwalany automatycznie przez odtwarzacz Flash Player podczas działania programu ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener('securityError', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Event_onOpen, "Moduł obsługi zdarzeń onOpen nie jest wyzwalany automatycznie przez odtwarzacz Flash Player podczas działania programu ActionScript 3.0.  Należy najpierw zarejestrować ten moduł obsługi dla zdarzenia, używając instrukcji addEventListener('open', moduł obsługi wywołania zwrotnego)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Możliwe używanie klasy ActionScript 2.0 XML." );
        warningConstantsPL[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Problem z przenoszeniem: Nazwa klasy XML programu ActionScript 2.0 została zmieniona na XMLDocument." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadDateCast, "Nieprawidłowa operacja rzutowania instrukcji Date." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadDateCast_specific, "Instrukcja Date(x) zachowuje się tak samo jak nowa instrukcja Date().toString(). Aby rzutować wartość w celu wpisania instrukcji Date, należy użyć polecenia \"x as Date\", a nie Date(x)." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ImportHidesClass, "Importowanie pakietu o takiej samej nazwie jak bieżąca klasa spowoduje ukrycie identyfikatora tej klasy w określonym zakresie." );
        warningConstantsPL[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Importowanie pakietu o takiej samej nazwie jak bieżąca klasa spowoduje ukrycie identyfikatora tej klasy w określonym zakresie." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Więcej niż jeden argument posiada taką samą nazwę." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Określono więcej niż jeden argument o nazwie „%s”.  Odniesienia do tego argumentu będą zawsze wskazywały ostatni określony argument." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Zamiast tego należy użyć metody Rectangle.containsRect." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_eval, "Ta funkcja została usunięta." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Ta funkcja została zastąpiona właściwością flash.system.Capabilities.version." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Ta funkcja została zastąpiona właściwością flash.display.MovieClip.framesLoaded." );
        warningConstantsPL[index++] = new AscWarning(kUnsupportedProp__global, "Właściwość _global została usunięta.  Aby uzyskać jej odpowiednik, należy użyć statycznego elementu klasy." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadBoolAssignment, "W miejscu gdzie oczekiwano wartości Boolean, użyto wartości Non-Boolean." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "Została używa wartość %s, podczas gdy oczekiwano wartości typu Boolean.  Typ wyrażenia zostanie przymusowo zmieniony na Boolean." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadES3TypeProp, "Nieznana właściwość." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "Właściwość %s nie jest rozpoznawana w klasie dynamicznej %s." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Nieznana metoda." );
        warningConstantsPL[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "Metoda %s nie jest rozpoznawana w klasie dynamicznej %s." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Powielona definicja zmiennej." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Powielona definicja zmiennej." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Nazwa definicji jest taka sama jak nazwa importowanego pakietu.  Niekwalifikowane odniesienia do tej nazwy będą wskazywały pakiet, a nie definicję." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Nazwa definicji jest taka sama jak nazwa importowanego pakietu.  Niekwalifikowane odniesienia do tej nazwy będą wskazywały na pakiet, a nie definicję." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Możliwa próba usunięcia stałej właściwości." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "Nie można usunąć zadeklarowanej właściwości %s. Aby zwolnić skojarzoną pamięć, należy ustawić w tej właściwości wartość null." );
        warningConstantsPL[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Empty statement." );
        warningConstantsPL[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Empty statement found where block of code expected. Did you type ';' accidentally?" );
        warningConstantsPL[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsPL[index++] = new AscWarning(kWarning_Deprecated_specific, "'%s' has been deprecated." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsPL[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "'%s' has been deprecated.  Please use '%s'." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "'%s' has been deprecated since %s.  Please use '%s'." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsPL[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "'%s' has been deprecated since %s." );
   }

   static final AscWarning[] warningConstantsPT= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsPT() 
   {
      int index=0;
        warningConstantsPT[index++] = new AscWarning(kWarning_NoTypeDecl, "Declaração de tipo ausente." );
        warningConstantsPT[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' não tem declaração de tipo." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Comparação ilógica com indefinido. Apenas variáveis não digitadas (ou variáveis de tipo *) podem ser indefinidas." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Variáveis de tipo %s não podem ser indefinidas. O valor indefinido será forçado para %s antes da comparação." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "A função usada na nova expressão retorna um valor. O resultado será o que a função retornar, em vez de uma nova instância desta função." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Problema de migração: o resultado da nova %s será o valor de retorno de %s, em vez de uma nova instância dessa função." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() sem argumento retorna falso no ActionScript 3.0 e indefinido no ActionScript 2.0." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Uso de Boolean() sem argumentos." );
        warningConstantsPT[index++] = new AscWarning(kWarning_NumberFromStringChanges, "No ActionScript 3.0, o espaço em branco é ignorado e '' retorna 0. No ActionScript 2.0, Number() retorna NaN quando o parâmetro é '' ou contém espaço em branco." );
        warningConstantsPT[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Problema de migração: quando a função Number('') é chamada com um argumento de string vazia, ela retorna 0 em ActionScript 3.0 e NaN em ActionScript 2.0." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ArrayToStringChanges, "O formato de Array.toString() foi alterado." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Problema de migração: a manipulação de Array.toString() de elementos nulos e indefinidos foi alterada." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Propriedade do ActionScript 2.0 não suportada." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Problema de migração: a propriedade %s não é mais suportada. %s." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Função do ActionScript 2.0 não suportada." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Problema de migração: o método %s não é mais suportado. %s." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve não é mais suportado." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Problema de migração: __resolve não é mais suportado. Use a nova classe Proxy para obter uma funcionalidade semelhante." );
        warningConstantsPT[index++] = new AscWarning(kWarning_LevelNotSupported, "_level não é mais suportado. Para obter mais informações, consulte o pacote flash.display." );
        warningConstantsPT[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Problema de migração: _level não é mais suportado. Para obter mais informações, consulte o pacote flash.display." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ClassIsSealed, "Classe selada. Não é possível adicionar membros à classe dinamicamente." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Problema de migração: %s não é uma classe dinâmica. Não é possível adicionar membros a instâncias dinamicamente." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Alteração no escopo desta palavra-chave. Métodos de classe extraídos de uma instância de classe sempre resolverão isso de volta para a instância. No ActionScript 2.0, isso é pesquisado dinamicamente, com base no local do qual o método é chamado." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Problema de migração: o método %s terá um comportamento diferente no ActionScript 3.0 devido à alteração no escopo desta palavra-chave. Consulte a entrada referente ao aviso 1083 para obter informações adicionais." );
        warningConstantsPT[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Declaração de namespace ausente (por exemplo, a variável não é definida como pública, privada etc.)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s terá o escopo do namespace padrão: %s interno. Não será visível fora deste pacote." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ForVarInChanges, "O ActionScript 3.0 percorre as propriedades de um objeto na instrução \"for x in target\" em ordem aleatória." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Problema de migração: o ActionScript 3.0 percorre as propriedades de um objeto na instrução \"for x in target\" em ordem aleatória." );
        warningConstantsPT[index++] = new AscWarning(kWarning_InternalError, "Erro interno do compilador." );
        warningConstantsPT[index++] = new AscWarning(kWarning_InternalError_specific, "Código de erro: %s." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "O EventHandler não foi adicionado como um listener." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Problema de migração: %s" );
        warningConstantsPT[index++] = new AscWarning(kWarning_NegativeUintLiteral, "O valor negativo se torna um valor alto positivo quando atribuído a um tipo de dados uint." );
        warningConstantsPT[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Valor negativo usado onde um valor uint (não negativo) é esperado." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadNullComparision, "Comparação ilógica com nulo." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Comparação ilógica com nulo. Variáveis de tipo %s não podem ser nulas." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadNaNComparision, "Comparação ilógica com NaN. Qualquer comparação envolvendo NaN será avaliada como falsa porque NaN != NaN." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Comparação ilógica com NaN. Esta instrução sempre é avaliada como falsa." );
        warningConstantsPT[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Atribuição dentro de condicional." );
        warningConstantsPT[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Atribuição dentro de condicional.  Você quis dizer == em vez de =?" );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadNullAssignment, "Atribuição nula impossível." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "nulo usado onde um valor %s era esperado." );
        warningConstantsPT[index++] = new AscWarning(kWarning_NoConstructor, "Construtor ausente." );
        warningConstantsPT[index++] = new AscWarning(kWarning_NoConstructor_specific, "Não foi especificada uma função de construtor para a classe %s." );
        warningConstantsPT[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Instrução vazia" );
        warningConstantsPT[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Instrução vazia encontrada onde bloco de código era esperado. Você digitou ';' acidentalmente?" );
        warningConstantsPT[index++] = new AscWarning(kWarning_ConstNotInitialized, "Constante não inicializada." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "A constante não foi inicializada." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadArrayCast, "Possivelmente uma operação de projeção de Matriz inválida." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) comporta-se como a nova Array(x). Para projetar um valor para o tipo Array, use a expressão x como Array, em vez de Array(x)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "A instrução super() não foi chamada dentro do construtor." );
        warningConstantsPT[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "A instrução super() será executada antes de inserir este construtor. Adicione uma chamada ao super() no construtor se desejar controlar explicitamente quando for executado." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_version, "Em vez disso, use Capabilities.version." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Para obter mais informações, consulte InteractiveObject.focusRect." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Highquality, "Para obter mais informações, consulte Stage.quality." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Para obter mais informações, consulte Stage.quality." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Para obter mais informações, consulte Stage.quality." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Quality, "Para obter mais informações, consulte Stage.quality." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Em vez disso, use a propriedade estática flash.media.SoundMixer.bufferTime." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Esta funcionalidade não é mais suportada." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Para obter mais informações, consulte LoaderInfo.url." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Esta funcionalidade não é mais suportada." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_NewLine, "Use '\n' para nova linha." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Para obter mais informações, consulte textField.maxScroll." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Level, "O conceito de níveis não existe no ActionScript 3.0, que, no lugar disso, oferece acesso direto à lista de exibição. Consulte o pacote flash.display para obter detalhes." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Parent, "Em vez disso, use a propriedade pai." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Root, "Esta propriedade foi removida. O equivalente mais próximo é o Stage, que funciona como a raiz da lista de exibição do ActionScript 3.0." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Em vez disso, tente declarar o chamador como um argumento da função." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Esta funcionalidade não é mais suportada." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Em vez disso, use a propriedade pai." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Esta funcionalidade não é mais suportada." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Para obter mais informações, consulte Sprite.hitArea." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Scroll, "Para obter mais informações, consulte as propriedades scrollH e scrollV da classe flash.text.TextField." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Use objetos MovieClip diretamente como argumentos, no lugar de demarcadores." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Para obter mais informações, consulte Video.videoHeight." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Para obter mais informações, consulte Video.videoWidth." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp__Proto__, "Para obter mais informações, consulte obsolete  __proto__." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Stage, "Para obter mais informações, consulte DisplayObject.stage." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Em vez disso, use o método registerClass() no pacote flash.net." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_random, "Use Math.random()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_chr, "Use String.fromCharCode()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Use String.fromCharCode()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ord, "Use String.charCodeAt()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_mbord, "Use String.charCodeAt()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_substring, "Em vez disso, use o método String.substr." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Em vez disso, use o método String.substr." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_length, "Em vez disso, use a propriedade de comprimento do argumento." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_mblength, "Em vez disso, use a propriedade de comprimento do argumento." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Para obter mais informações, consulte alterações no ASnative." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Em vez disso, defina propriedades diretamente na instância, usando a notação de ponto (.)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Em vez disso, acesse propriedades diretamente, usando a notação de ponto (.)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Em vez disso, defina propriedades diretamente na instância, usando a notação de ponto (.)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Para obter mais informações, consulte TextEvent.LINK e addEventListener()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Este método foi movido para o pacote flash.utils." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Substituído pela nova função de classe de construtor MovieClip." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Movido para o pacote flash.system. Além disso, consulte a classe flash.external.ExternalInterface para comunicação Javascript/ActionScript." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_getURL, "Para funcionalidade equivalente, consulte flash.net.URLLoader. O pacote flash.net também contém funções no nível de pacote navigateToURL() e sendToURL()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Para obter mais informações, consulte MovieClip.gotoAndPlay()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Para obter mais informações, consulte MovieClip.gotoAndStop()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_play, "Para obter mais informações, consulte MovieClip.play()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_print, "Para obter mais informações, consulte PrintJob.start()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Para obter mais informações, consulte PrintJob." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Para obter mais informações, consulte PrintJob." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_printNum, "Para obter mais informações, consulte PrintJob." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Use o Container.removeChild(childName). Para obter mais informações, consulte a classe DisplayObjectContainer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Movido para o pacote flash.utils. Considere o uso da classe Timer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Para obter mais informações, consulte MovieClip.nextFrame()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Para obter mais informações, consulte MovieClip.startDrag()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_stop, "Para obter mais informações, consulte MovieClip.stop()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Para obter mais informações, consulte Sound.stopAllSounds()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Para obter mais informações, consulte MovieClip.stopDrag()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Em vez disso, use o operador ponto (.) ou a instrução with." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Para obter mais informações, consulte DisplayObject.stage e Stage.quality." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Em vez disso, use DisplayObjectContainer.removeChild(childName). Para obter mais informações, consulte a classe DisplayObjectContainer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Em vez disso, use DisplayObjectContainer.removeChild(childName). Para obter mais informações, consulte a classe DisplayObjectContainer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Esta não é mais uma função global, mas ainda está disponível como um método das classes TimerEvent, MouseEvent e KeyboardEvent." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Para obter mais informações, consulte Video.attachNetStream, Video.attachCamera." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Use a classe URLLoader para realizar o carregamento e aprovar o resultado em StyleSheet.parseCSS()" );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "No ActionScript 3.0 todas as classes são registradas, por padrão. Se você estiver usando o AMF, consulte o flash.utils.registerClassAlias() para obter mais informações." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Use as propriedades de acessador (funções get/set) ou a classe flash.utils.Proxy para funcionalidade semelhante." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Use as propriedades de acessador (funções get/set) ou a classe flash.utils.Proxy para funcionalidade semelhante." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Para obter mais informações, consulte MovieClip.loadMovie()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Para obter mais informações, consulte MovieClip.loadMovieNum()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Para obter mais informações, consulte Loader.load()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Para obter mais informações, consulte Loader.load()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Para obter mais informações, consulte addEventListener (eventName, listener, useCapture, prioridade)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Para obter mais informações, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Para obter mais informações, consulte addEventListener (eventName, listener, useCapture, prioridade)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Para obter mais informações, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Para obter mais informações, consulte addEventListener (eventName, listener, useCapture, prioridade)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Para obter mais informações, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Para obter mais informações, consulte addEventListener (eventName, listener, useCapture, prioridade)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Para obter mais informações, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Use a classe SWF para criar sons da biblioteca." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onStatus, "O manipulador de eventos onStatus não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('status', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onID3, "O manipulador de eventos onID3 não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('id3', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onLoad, "O manipulador de eventos onLoad não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('load', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onSoundComplete, "O manipulador de eventos onSoundComplete não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('soundComplete', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onSetFocus, "O manipulador de eventos onSetFocus não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('focusin', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onResize, "O manipulador de eventos onResize não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('resize', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onChanged, "O manipulador de eventos onChanged não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('change', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onKillFocus, "O manipulador de eventos onKillFocus não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('focusOut', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onScroller, "O manipulador de eventos onScroller não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('scroll', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onMouseDown, "O manipulador de eventos onMouseDown não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('mouseDown', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onMouseUp, "O manipulador de eventos onMouseUp não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('mouseUp', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onMouseMove, "O manipulador de eventos onMouseMove não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('mouseMove', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onMouseWheel, "O manipulador de eventos onMouseWheel não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('mouseWheel', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onKeyDown, "O manipulador de eventos onKeyDown não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('keyDown', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onKeyUp, "O manipulador de eventos onKeyUp não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('keyUp', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onData, "O manipulador de eventos onData não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('data', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "O manipulador de eventos onHTTPStatus não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('httpStatus', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onDragOut, "O manipulador de eventos onDragOut não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('mouseOut', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onDragOver, "O manipulador de eventos onDragOver não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('mouseOver', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onPress, "O manipulador de eventos onPress não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('mouseDown', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onRelease, "O manipulador de eventos onRelease não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('click', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "O manipulador de eventos onReleaseOutside não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('mouseUp', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onRollOut, "O manipulador de eventos onRollOut não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('mouseOut', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onRollOver, "O manipulador de eventos onResize não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('mouseOver', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onActivity, "O manipulador de eventos onActivity não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('activity', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onSelect, "O manipulador de eventos onSelect não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('menuSelect', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onEnterFrame, "O onEnterFrame não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('enterFrame', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onUnload, "O manipulador de eventos onUnload não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('unload', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onLoadComplete, "O onLoadComplete não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('load', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onLoadError, "O manipulador de eventos onLoadError não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('error', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onLoadInit, "O manipulador de eventos onLoadInit não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('init', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onLoadProgress, "O manipulador de eventos onLoadProgress não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('progress', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onLoadStart, "O onLoadStart não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('start', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onClose, "O manipulador de eventos onClose não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('close', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onConnect, "O manipulador de eventos onConnect não é disparado automaticamente pelo Flash Player no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('connect', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onXML, "O onXML não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento usando addEventListener ('xml', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Em vez disso, use a propriedade hasChildNodes." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "A classe XMLEvent está obsoleta e o evento xml não é mais enviado. Apenas os eventos de dados são enviados durante o carregamento de arquivo." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "A classe XMLDoc foi renomeada como XMLDocument." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Em vez disso, use a propriedade Accessibility.active." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Em vez disso, use a constante ActivityEvent.ACTIVITY." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Em vez disso, use DisplayObjectContainer.parent.getChildIndex. Consulte a ajuda da classe DisplayObjectContainer, estendida pelo MovieClip." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Em vez disso, use DisplayObjectContainer.parent.setChildIndex. Consulte a ajuda da classe DisplayObjectContainer, estendida pelo MovieClip." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Em vez disso, use DisplayObjectContainer.getChildAt. Consulte a ajuda da classe DisplayObjectContainer, estendida pelo MovieClip." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Em vez disso, use DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild sempre adiciona o novo filho ao índice DisplayObjectContainer.numChildren." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Em vez disso, use a propriedade ByteArray.bytesAvailable." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Em vez disso, use a propriedade ByteArray.position." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Em vez disso, use a propriedade ByteArray.position." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Em vez disso, use o método Camera.getCamera()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Em vez disso, use a propriedade Camera.currentFPS." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Em vez disso, use a propriedade Camera.keyFrameInterval." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Em vez disso, use a propriedade Camera.loopback." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Em vez disso, use a propriedade ColorTransform.color." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Em vez disso, use a propriedade ColorTransform.color." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Em vez disso, use a propriedade Container.textSnapshot." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Em vez disso, use o método ContextMenu.clone()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Em vez disso, use a propriedade ContextMenu.forwardAndBack." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Em vez disso, use o método ContextMenuItem.clone()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Em vez disso, use a propriedade CustomActions.actionsList." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Em vez disso, use a constante DataEvent.DATA." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Em vez disso, use a propriedade DisplayObject.scaleX." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Em vez disso, use a propriedade DisplayObject.scaleX." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Em vez disso, use a propriedade DisplayObject.scaleY." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Em vez disso, use a propriedade DisplayObject.scaleY." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Em vez disso, use a propriedade DisplayObject.mouseX." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Em vez disso, use a propriedade DisplayObject.mouseX." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Em vez disso, use a propriedade DisplayObject.mouseY." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Em vez disso, use a propriedade DisplayObject.mouseY." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Este recurso não é mais suportado." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Este recurso não é mais suportado." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Em vez disso, use a propriedade DisplayObject.name." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Em vez disso, use a propriedade DisplayObject.parent." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Em vez disso, use a propriedade DisplayObject.mask." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Em vez disso, use a propriedade DisplayObject.visible." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Em vez disso, use a propriedade DisplayObject.x." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Em vez disso, use a propriedade DisplayObject.y." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Em vez disso, use a propriedade DisplayObject.rotation." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Em vez disso, use a propriedade DisplayObject.alpha." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Em vez disso, use a propriedade DisplayObject.width." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Em vez disso, use a propriedade DisplayObject.height." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Em vez disso, use a propriedade ExternalInterface.available." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Em vez disso, use a constante ErrorEvent.ERROR." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Em vez disso, use a propriedade Event.isDefaultPrevented." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Em vez disso, use a constante Event.ACTIVATE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Em vez disso, use a constante Event.ADDED." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Em vez disso, use a constante Event.CANCEL." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Em vez disso, use a constante Event.CHANGE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Em vez disso, use a constante Event.CLOSE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Em vez disso, use a constante Event.COMPLETE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Em vez disso, use a constante Event.CONNECT." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Em vez disso, use a constante Event.DEACTIVATE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Em vez disso, use a constante Event_FRAME." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Em vez disso, use a constante Event.ID3." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Em vez disso, use a constante Event.INIT." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Em vez disso, use a constante Event.MOUSE_LEAVE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Em vez disso, use a constante Event.OPEN." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Em vez disso, use a constante Event.REMOVED." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Em vez disso, use a constante Event.RENDER." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Em vez disso, use a constante Event.RESIZE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Em vez disso, use a constante Event.SCROLL." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Em vez disso, use a constante Event.SELECT." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Em vez disso, use a constante Event.SOUND_COMPLETE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Em vez disso, use a constante Event.TAB_CHILDREN_CHANGE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Em vez disso, use a constante Event.TAB_ENABLED_CHANGE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Em vez disso, use a constante Event.TAB_INDEX_CHANGE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Em vez disso, use a constante Event.UNLOAD." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Em vez disso, use a constante FocusEvent.FOCUS_IN." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Em vez disso, use a constante FocusEvent.FOCUS_OUT." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Em vez disso, use a constante FocusEvent.KEY_FOCUS_CHANGE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Em vez disso, use a constante FocusEvent.MOUSE_FOCUS_CHANGE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Em vez disso, use o método Graphics.beginBitmapFill()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Em vez disso, use a propriedade BitmapFilter.quality." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Em vez disso, use o KeyboardEvent.charCode." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Em vez disso, use o KeyboardEvent.keyCode." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Para obter mais informações, consulte a classe KeyboardEvent." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Para obter mais informações, consulte KeyboardEvent.ctrlKey, KeyboardEvent.altKey e KeyboardEvent.shiftKey." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Em vez disso, use a constante PAGE_DOWN." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Em vez disso, use a constante PAGE_UP." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Em vez disso, use a constante DELETE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Em vez disso, use a constante CAPS_LOCK." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Em vez disso, use uma das constantes NUMPAD_0 -> NUMPAD_9." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Em vez disso, use a propriedade InteractiveObject.focusRect." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Em vez disso, use a propriedade InteractiveObject.contextMenu." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Em vez disso, use a propriedade KeyboardEvent.charCode." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Em vez disso, use a propriedade KeyboardEvent.keyCode." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Em vez disso, use a propriedade Loader.contentLoaderInfo." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Este recurso não é mais suportado." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Este recurso não é mais suportado." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Em vez disso, use a propriedade LoaderInfo.loaderURL." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Em vez disso, use a propriedade LocalConnection.domain." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Em vez disso, use a propriedade MenuEvent.contextMenuOwner." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Em vez disso, use o método Microphone.getMicrophone()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Se o nome da subclasse MovieClip for A, use var mc= new A(); addChild(mc). Para obter mais informações, consulte a classe DisplayObjectContainer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Use var mc= new MovieClip(); addChild(mc). Para obter mais informações, consulte a classe DisplayObjectContainer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Use var tf= new TextField(); addChild(mc). Para obter mais informações, consulte a classe DisplayObjectContainer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Use o Container.removeChild(childName). Para obter mais informações, consulte a classe DisplayObjectContainer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Use var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));. Para obter mais informações, consulte as classes Loader e DisplayObjectContainer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Em vez disso, use DisplayObjectContainer.removeChild(childName). Para obter mais informações, consulte a classe DisplayObjectContainer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Em vez disso, use DisplayObjectContainer.removeChild(childName). Para obter mais informações, consulte a classe DisplayObjectContainer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Em vez disso, use DisplayObjectContainer.parent.getChildIndex. Para obter mais informações, consulte a classe DisplayObjectContainer, estendida pelo MovieClip." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Em vez disso, use DisplayObjectContainer.parent.setChildIndex. Para obter mais informações, consulte a classe DisplayObjectContainer, estendida pelo MovieClip." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Em vez disso, use DisplayObjectContainer.getChildAt. Para obter mais informações, consulte a classe DisplayObjectContainer, estendida pelo MovieClip." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Em vez disso, use DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild sempre adiciona o novo filho ao índice DisplayObjectContainer.numChildren." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Para obter mais informações, consulte DisplayObject.addChild." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Para obter mais informações, consulte LoaderInfo.bytesLoaded e a classe Loader." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Para obter mais informações, consulte LoaderInfo.bytesTotal e a classe Loader." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Para funcionalidade equivalente, consulte flash.net.URLLoader. O pacote flash.net também contém funções no nível de pacote navigateToURL() e sendToURL()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Para obter mais informações, consulte LoaderInfo.url e a classe Loader." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Para obter mais informações, consulte LoaderInfo.url e a classe Loader." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Em vez disso, use a propriedade MovieClip.mask." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Para obter mais informações, consulte LoaderInfo.swfVersion e a classe Loader." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Em vez disso, use a propriedade MovieClip.currentFrame." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Em vez disso, use a propriedade MovieClip.framesLoaded." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Em vez disso, use a propriedade MovieClip.totalFrames." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Para obter mais informações, consulte displayObjectInstance.root." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Para obter mais informações, consulte displayObjectInstance.root." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Em vez disso, use a propriedade estática flash.media.SoundMixer.bufferTime." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Para obter mais informações, consulte a classe Graphics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Em vez disso, use a propriedade NetStream.bufferTime." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Em vez disso, use a propriedade NetStream.currentFPS." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Em vez disso, use a propriedade NetStream.videoCodec." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Em vez disso, use a propriedade NetStream.audioCodec." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Em vez disso, use a propriedade ProductManager.isInstalled." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Em vez disso, use a propriedade ProductManager.installedVersion." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Em vez disso, use a propriedade ProductManager.isRunning." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Em vez disso, use o método Point.add()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Em vez disso, use a propriedade Proxy.deleteDescendants." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Em vez disso, use o método heapDump()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Em vez disso, use a propriedade ProgressEvent.bytesLoaded." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Em vez disso, use a propriedade ProgressEvent.bytesTotal." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Em vez disso, use a propriedade Rectangle.isEmpty." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Em vez disso, use a propriedade SoundTransform.pan." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Em vez disso, use a propriedade Sockect.bytesAvailable." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Em vez disso, use a propriedade SharedObject.size." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Em vez disso, use a propriedade SharedObject.fps." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Isto não é mais suportado." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Em vez disso, use o método Sprite.constructChildren()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Em vez disso, use a propriedade Sprite.dropTarget." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Em vez disso, use a propriedade Stage.focus." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Em vez disso, use a propriedade Stage.focus." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Em vez disso, use a propriedade Stage.showDefaultContextMenu." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Em vez disso, use a propriedade StyleSheet.styleNames." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Use uma instância de URLLoader para carregar os dados StyleSheet e, em seguida, aprove os dados de carregadores no método StyleSheet.parseCSS. Para obter mais informações, consulte as classes URLLoader e EventDispatcher." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Use uma instância de URLLoader para carregar os dados StyleSheet e, em seguida, aprove os dados de carregadores no método StyleSheet.parseCSS. Para obter mais informações, consulte as classes URLLoader e EventDispatcher." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Use uma instância de URLLoader para carregar os dados StyleSheet e, em seguida, aprove os dados de carregadores no método StyleSheet.parseCSS. Para obter mais informações, consulte as classes URLLoader e EventDispatcher." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Use uma instância de URLLoader para carregar os dados StyleSheet e, em seguida, aprove os dados de carregadores no método StyleSheet.parseCSS. Para obter mais informações, consulte as classes URLLoader e EventDispatcher." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Use uma instância de URLLoader para carregar os dados StyleSheet e, em seguida, aprove os dados de carregadores no método StyleSheet.parseCSS. Para obter mais informações, consulte as classes URLLoader e EventDispatcher." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Em vez disso, use a propriedade IME.enabled." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Em vez disso, use a propriedade IME.enabled." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Em vez disso, use a propriedade IME.instance." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Em vez disso, use a propriedade IME.conversionMode." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Em vez disso, use a propriedade IME.conversionMode." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Em vez disso, use a propriedade System.vmVersion." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Em vez disso, use a propriedade SWFLoaderInfo.swfVersion." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Em vez disso, use a propriedade SWFLoaderInfo.actionScriptVersion." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Em vez disso, use a propriedade TextField.defaultTextFormat." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Em vez disso, use a propriedade TextField.defaultTextFormat." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Em vez disso, use DisplayObjectContainer.parent.getChildIndex. Para obter mais informações, consulte a classe DisplayObjectContainer, estendida pelo MovieClip." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Em vez disso, use DisplayObjectContainer.parent.setChildIndex. Para obter mais informações, consulte a classe DisplayObjectContainer, estendida pelo MovieClip." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Em vez disso, use DisplayObjectContainer.getChildAt. Para obter mais informações, consulte a classe DisplayObjectContainer, estendida pelo MovieClip." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Em vez disso, use DisplayObjectContainer.numChildren.  O DisplayObjectContainer.addChild sempre adiciona o novo filho ao índice DisplayObjectContainer.numChildren." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Em vez disso, use o método TextField.replaceSelectedText()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Em vez disso, use o método TextField.getLineIndexOfChar()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Em vez disso, use a propriedade TextField.selectionBeginIndex." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Em vez disso, use a propriedade TextField.selectionEndIndex." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Em vez disso, use a propriedade TextField.caretIndex." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Em vez disso, use o método Font.enumerateFonts()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Em vez disso, use a propriedade TextField.maxScrollV." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Em vez disso, use a propriedade TextField.scrollH." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Em vez disso, use a propriedade TextField.maxScrollH." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Em vez disso, use a propriedade TextField.defaultTextFormat." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Crie um TextField temporário e use TextField.getLineMetrics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Em vez disso, use a propriedade TextSnapshot.charCount." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Em vez disso, use o método navigateToURL() no pacote flash.net." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Em vez disso, use o método sendToURL() no pacote flash.net." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Em vez disso, use a propriedade URLLoader.dataFormat." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Em vez disso, use a propriedade URLStream.bytesAvailable." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Esta propriedade não é mais suportada." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Em vez disso, use a propriedade URLRequest.applicationDomain." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Para adicionar cabeçalhos de solicitação, defina a propriedade URLRequest.requestHeaders como uma matriz de objetos URLRequestHeader." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Use uma instância de URLLoader para carregar o arquivo XML; em seguida, aprove os dados URLLoaders no construtor XMLDocuments. Para obter mais informações, consulte as classes URLLoader e EventDispatcher." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Em vez disso, use o método sendToURL() no pacote flash.net." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Defina uma propriedade postData de objeto URLRequest e use-a com um objeto URLLoader para carregar o arquivo XML. Aprove os dados URLLoaders no construtor XMLDocuments. Para obter mais informações, consulte as classes URLLoader, URLRequest e EventDispatcher." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Use uma instância de URLLoader para carregar o arquivo XML; em seguida, aprove os dados URLLoaders no construtor XMLDocuments. Para obter mais informações, consulte as classes URLLoader e EventDispatcher." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Para adicionar cabeçalhos de solicitação, defina a propriedade URLRequest.requestHeaders como uma matriz de objetos URLRequestHeader." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Para obter mais informações, consulte URLLoader.bytesLoaded e a classe URLLoader." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Para obter mais informações, consulte URLLoader.bytesTotal e a classe URLLoader." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Use uma instância de URLLoader para carregar o arquivo XML; em seguida, aprove os dados de carregadores no método StyleSheet.parseCSS. Para obter mais informações, consulte as classes URLLoader e EventDispatcher." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Em vez disso, use a propriedade URLRequest.contentType." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Verifique as possíveis exceções lançadas pelo construtor XMLDocument ou, em vez disso, o método XMLDocument.parseXML. Para obter mais informações, consulte XMLDocument." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Button, "A classe Button foi renomeada como SimpleButton." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Container, "A classe Container foi renomeada como DisplayObjectContainer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Image, "A classe Image foi renomeada como BitmapData." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "A classe ImageFilter foi renomeada como BitmapFilter." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "A classe ImageSprite foi renomeada como Bitmap." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "A classe ImageLoaderInfo foi renomeada como BitmapLoaderInfo." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "A classe ImeEvent foi renomeada como IMEEvent." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Key, "A classe Key foi renomeada como Keyboard." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "A classe LineMetrics foi renomeada como TextLineMetrics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Para obter mais informações, consulte a classe URLVariables, as propriedades URLRequest.urlVariables e URLRequest.postData e a propriedade URLLoader.dataFormat." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "A classe MenuEvent foi renomeada como ContextMenuEvent." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "A classe SystemCapabilities foi renomeada como Capabilities." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Em vez disso, use a propriedade TextField.getLineMetrics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Button, "A classe Button foi renomeada como SimpleButton." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Container, "A classe Container foi renomeada como DisplayObjectContainer." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Image, "A classe Image foi renomeada como BitmapData." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "A classe ImageFilter foi renomeada como BitmapFilter." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "A classe ImageSprite foi renomeada como Bitmap." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "A classe ImageLoaderInfo foi renomeada como BitmapLoaderInfo." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "A classe ImeEvent foi renomeada como IMEEvent." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Key, "A classe Key foi renomeada como Keyboard." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "A classe LineMetrics foi renomeada como TextLineMetrics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Para obter mais informações, consulte a classe URLVariables, as propriedades URLRequest.urlVariables e URLRequest.postData e a propriedade URLLoader.dataFormat." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "A classe MenuEvent foi renomeada como ContextMenuEvent." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "A classe SystemCapabilities foi renomeada como Capabilities." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Em vez disso, use a propriedade TextField.getLineMetrics." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Para obter mais informações, consulte a ajuda da classe Proxy, que oferece funcionalidade semelhante." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Em vez disso, use o método XMLUI.getProperty." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Em vez disso, use o método XMLUI.setProperty." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Em vez disso, use a propriedade DisplayObject.accessibilityProperties." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Em vez disso, use a propriedade DisplayObject.scale9Grid." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Em vez disso, use o método Graphics.drawOval." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Em vez disso, use a propriedade NetConnection.connected." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Em vez disso, use a propriedade Socket.connected." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Em vez disso, use a propriedade URLStream.connected" );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Em vez disso, use a propriedade SyncEvent.changeList." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Em vez disso, use a propriedade TextField.scrollV." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Em vez disso, use a propriedade TextField.bottomScrollV." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Em vez disso, use a constante BitmapDataChannel.RED." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Em vez disso, use a constante BitmapDataChannel.GREEN." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Em vez disso, use a constante BitmapDataChannel.BLUE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Em vez disso, use a constante BitmapDataChannel.ALPHA." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Em vez disso, use o operador is." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Em vez disso, use o método flash.system.Security.showSettings." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Em vez disso, use a propriedade System.useCodePage." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Em vez disso, use a classe flash.events.EventDispatcher." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Em vez disso, use a propriedade estática flash.media.SoundMixer.bufferTime." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Em vez disso, crie uma nova instância da classe symbol de biblioteca de bitmap, ou seja, um novo myBitmapName()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Para obter mais informações, consulte Loader.load()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "A classe MovieClipLoader foi substituída pela classe flash.display.Loader." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "A classe MovieClipLoader foi substituída pela classe flash.display.Loader." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Para obter mais informações, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Para obter mais informações, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Em vez disso, use a constante flash.system.IMEConversionMode.ALPHANUMERIC_FULL." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Em vez disso, use a constante flash.system.IMEConversionMode.ALPHANUMERIC_HALF." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Em vez disso, use a constante flash.system.IMEConversionMode.CHINESE." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Em vez disso, use a constante flash.system.IMEConversionMode.JAPANESE_HIRAGANA." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Em vez disso, use a constante flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Em vez disso, use a constante flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Em vez disso, use a constante flash.system.IMEConversionMode.KOREAN." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Em vez disso, use a constante flash.system.IMEConversionMode.UNKNOWN." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Para obter mais informações, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Para obter mais informações, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onCancel, "O manipulador de eventos onCancel não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0.  Primeiro, você deve registrar o manipulador do evento, usando addEventListener (cancel, onCancel)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Não há substituição direta. O método willTrigger() pode ser usado para informar se algum listener foi registrado." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onIMEComposition, "O manipulador de eventos onIMEComposition não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento, usando addEventListener (imeComposition, handlerName)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Para obter mais informações, consulte LoaderInfo.url e a classe Loader." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Em vez disso, use o método getFullYear()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Em vez disso, use o método setFullYear()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Em vez disso, use o método getUTCFullYear()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Em vez disso, use a propriedade rate." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Selection, "A classe Selection foi removida. Para obter mais informações, consulte o método addEventListener da classe sobre a qual você deseja informações de seleção." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Selection, "A classe Selection foi removida. Para obter mais informações, consulte o método addEventListener da classe sobre a qual você deseja informações de seleção." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Em vez disso, use a propriedade gain." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Valores de cores podem ser atribuídos diretamente, usando o construtor da classe ou as propriedades ColorTransform." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Valores de cores podem ser atribuídos diretamente, usando o construtor da classe ou as propriedades ColorTransform." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Consulte a ajuda das propriedades relacionadas ao foco da classe flash.display.InteractiveObject." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Consulte a ajuda do método flash.display.Graphics.beginBitmapFill." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Consulte a ajuda do método flash.display.DisplayObject.hitTestObject()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Consulte a ajuda do método addChild()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Em vez disso, use o método load()." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Use flash.media.SoundChannel.leftPeak e flash.media.SoundChannel.rightPeak para monitorar e controlar a amplitude de um canal de som." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Em vez disso, use a propriedade soundTransform." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Em vez disso, use a propriedade SoundTransform.pan." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Em vez disso, use a propriedade SoundTransform.pan." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Em vez disso, use a propriedade bytesLoaded." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Em vez disso, use a propriedade bytesTotal." );
        warningConstantsPT[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Uso ineficiente de += em um TextField." );
        warningConstantsPT[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Anexar texto a um TextField usando += é muitas vezes mais lento do que usar o método TextField.appendText()." );
        warningConstantsPT[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Parênteses possivelmente ausentes." );
        warningConstantsPT[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Valor de função usado onde um valor %s era esperado. Possivelmente faltam os parênteses () após esta referência de função." );
        warningConstantsPT[index++] = new AscWarning(kWarning_InstanceOfChanges, "Uso do operador instanceof." );
        warningConstantsPT[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "O operador instanceof foi preterido. Em vez disso, use o operador is." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "O manipulador de eventos allowDomain() agora é um método padrão, em vez de um retorno de chamada de evento. Para obter mais informações, consulte o novo método LocalConnection.allowDomain." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "O manipulador de eventos allowInsecureDomain() agora é um método padrão, em vez de um retorno de chamada de evento. Para obter mais informações, consulte o novo método LocalConnection.allowInsecureDomain." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_call, "O método global call() não é mais suportado." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_Color, "A classe Color foi removida. Use a classe flash.geom.ColorTransform para obter funcionalidade equivalente." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Color, "A classe Color foi removida. Use a classe flash.geom.ColorTransform para obter funcionalidade equivalente." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "Os arquivos do ActionScript 3.0 SWF sempre usam regras exatas de correspondência de domínio." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp_capabilities, "A classe capabilities foi renomeada como Capabilities." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_capabilities, "A classe capabilities foi renomeada como Capabilities." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Para obter mais informações, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Para obter mais informações, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onComplete, "O manipulador de eventos onComplete não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento, usando addEventListener ('complete', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onHTTPError, "O manipulador de eventos onHTTPError não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento, usando addEventListener ('httpError', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onIOError, "O manipulador de eventos onIOError não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento, usando addEventListener ('ioError', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onProgress, "O manipulador de eventos onProgress não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento, usando addEventListener ('progress', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onSecurityError, "O manipulador de eventos onSecurityError não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0.Primeiro, você deve registrar o manipulador do evento, usando addEventListener ('securityError', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Event_onOpen, "O manipulador de eventos onOpen não é disparado automaticamente pelo Flash Player no tempo de execução no ActionScript 3.0. Primeiro, você deve registrar o manipulador do evento, usando addEventListener ('open', callback_handler)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Possível uso da classe XML do ActionScript 2.0." );
        warningConstantsPT[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Problema de migração: a classe XML do ActionScript 2.0 foi renomeada como XMLDocument." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadDateCast, "Operação de projeção de data inválida." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) comporta-se como a nova Date().toString(). Para projetar um valor para o tipo Date, use \"x as Date\" em vez de Date(x)." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ImportHidesClass, "A importação de um pacote com o mesmo nome da classe atual ocultará esse identificador de classe neste escopo." );
        warningConstantsPT[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "A importação de um pacote com o mesmo nome da classe atual ocultará esse identificador de classe neste escopo." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Mais de um argumento tem o mesmo nome." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Mais de um argumento com o nome '%s' especificado. Referências a este argumento sempre serão resolvidas para o último argumento." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Em vez disso, use o método Rectangle.containsRect." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_eval, "Esta funcionalidade foi removida." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Esta funcionalidade foi substituída pela propriedade flash.system.Capabilities.version." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Esta funcionalidade foi substituída pela propriedade flash.display.MovieClip.framesLoaded." );
        warningConstantsPT[index++] = new AscWarning(kUnsupportedProp__global, "A propriedade _global foi removida. Para obter funcionalidade equivalente, use um membro estático de uma classe." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadBoolAssignment, "Valor diferente de Boolean usado onde um valor Boolean era esperado." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "%s usado onde um valor Boolean era esperado. A expressão será forçada para Boolean." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadES3TypeProp, "Propriedade desconhecida." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s não é uma propriedade reconhecida da classe dinâmica %s." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Método desconhecido." );
        warningConstantsPT[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s não é um método reconhecido da classe dinâmica %s." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Definição de variável duplicada." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Definição de variável duplicada." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "O nome de definição é o mesmo nome de um pacote importado. As referências não qualificadas a esse nome serão resolvidas para o pacote e não para a definição." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "O nome de definição é o mesmo nome de um pacote importado.As referências não qualificadas a esse nome serão resolvidas para o pacote e não para a definição." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Possível tentativa de excluir uma propriedade fixa." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "A propriedade %s declarada não pode ser excluída. Para liberar memória associada, defina o valor correspondente como nulo." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Deprecated, "Uso de definição obsoleta." );
        warningConstantsPT[index++] = new AscWarning(kWarning_Deprecated_specific, "%s' está obsoleto." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DeprecatedMessage, "Uso de definição obsoleta." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsPT[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Uso de definição obsoleta." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "%s' está obsoleto.  Use '%s'." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DeprecatedSince, "Uso de definição obsoleta." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "%s' está obsoleto desde %s. Use '%s'." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Uso de definição obsoleta." );
        warningConstantsPT[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "%s' está obsoleto desde %s." );
   }

   static final AscWarning[] warningConstantsRU= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsRU() 
   {
      int index=0;
        warningConstantsRU[index++] = new AscWarning(kWarning_NoTypeDecl, "Отсутствует объявление типа." );
        warningConstantsRU[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s \"%s\" не имеет определения типа." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Логически некорректное сравнение с неопределенным значением. Неопределенными могут быть только нетипизированные переменные (или переменные типа *)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Переменные типа %s не могут быть неопределенными. Значение \"undefined\" будет типом, приведенным к %s до сравнения." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "Функция, используемая в новом выражении, возвращает значение. Результатом будет возвращаемое значение функции, а не новый экземпляр этой функции." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Ошибка миграции: Результатом нового выражения %s будет возвращаемое значение функции %s, а не новый экземпляр этой функции." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "В ActionScript 3.0 вызов Boolean() без аргументов возвращает значение \"false\". В ActionScript 2.0 в этом случае Boolean() возвращал неопределенное значение." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Использование вызова Boolean() без аргументов." );
        warningConstantsRU[index++] = new AscWarning(kWarning_NumberFromStringChanges, "В ActionScript 3.0 пробелы игнорируются, и при использовании аргумента '' возвращается 0. В ActionScript 2.0 вызов Number() с аргументом '' или аргументом, содержащим пробелы, возвращает NaN." );
        warningConstantsRU[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Ошибка миграции: в ActionScript 3.0 вызов функции Number('') с пустым аргументом возвращает 0, а в ActionScript 2.0 - NaN." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Формат Array.toString() изменился." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Проблемы миграции: в Array.toString() изменился способ обработки нулевых значений и неопределенных элементов." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Неподдерживаемое свойство ActionScript 2.0." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Ошибка миграции: свойство %s больше не поддерживается. %s." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Неподдерживаемая функция ActionScript 2.0." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Ошибка миграции: метод %s больше не поддерживается. %s." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ChangesInResolve, "\"__resolve\" больше не поддерживается." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Ошибка миграции: \"__resolve\" больше не поддерживается. Для достижения схожей функциональности используйте новый класс \"Proxy\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_LevelNotSupported, "\"_level\" больше не поддерживается. Дополнительные сведения см. в пакете flash.display." );
        warningConstantsRU[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Ошибка миграции: \"_level\" больше не поддерживается. Дополнительные сведения см. в пакете flash.display." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ClassIsSealed, "Класс является защищенным. Члены этого класса не могут добавляться динамически." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Ошибка миграции: %s не является динамическим классом. Экземпляры не могут содержать членов, которые добавляются к ним динамически." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Изменение области видимости для ключевого слова \"this\". Методы класса, извлеченные из экземпляра класса, всегда разрешают указатель \"this\" к этому экземпляру. В ActionScript 2.0 цель указателя \"this\" определяется динамически в зависимости от объекта, из которого вызывается метод." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Ошибка миграции: из-за изменений области видимости для ключевого слова \"this\" поведение метода %s будет отличаться в ActionScript 3.0. Дополнительную информацию см. в описании предупреждения 1083." );
        warningConstantsRU[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Отсутствует объявление пространства имен (например, переменная не объявлена как \"public\", \"private\" и т.п.)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "Объект %s добавится в область внутреннего пространства имен по умолчанию: %s. Он не будет виден за пределами этого пакета." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ForVarInChanges, "В ActionScript 3.0 свойства объекта перечисляются в случайном порядке внутри оператора \"for x in target\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Ошибка миграции: В ActionScript 3.0 свойства объекта перечисляются в случайном порядке внутри оператора \"for x in target\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_InternalError, "Внутренняя ошибка компилятора." );
        warningConstantsRU[index++] = new AscWarning(kWarning_InternalError_specific, "Код ошибки: %s." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "Обработчик EventHandler не был добавлен в качестве прослушивателя." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Ошибка миграции: %s" );
        warningConstantsRU[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Отрицательное значение, присвоенное переменной типа \"uint\", станет большим положительным значением." );
        warningConstantsRU[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Вместо ожидавшегося значения единицы измерения (неотрицательного) использовано отрицательное значение." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadNullComparision, "Логически некорректное сравнение со значением \"null\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Логически некорректное сравнение со значением \"null\". Переменные типа %s не могут быть значением \"null\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadNaNComparision, "Логически некорректное сравнение с элементом NaN. Любая операция сравнения, в которой участвует элемент NaN, даст в результате значение \"false\", поскольку NaN != NaN." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Логически некорректное сравнение с элементом NaN. Этот оператор всегда дает в результате значение \"false\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Присвоение внутри условного выражения." );
        warningConstantsRU[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Присвоение внутри условного выражения. Вы имели в виду ==, а не =?" );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadNullAssignment, "Недопустимое присваивание значения \"null\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "Вместо ожидавшегося значения %s использовалось значение \"null\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_NoConstructor, "Отсутствует конструктор." );
        warningConstantsRU[index++] = new AscWarning(kWarning_NoConstructor_specific, "Функция-конструктор не была определена для класса %s." );
        warningConstantsRU[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Пустой оператор." );
        warningConstantsRU[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Обнаружен пустой оператор вместо ожидаемого блока кода. \";\" введено непреднамеренно?" );
        warningConstantsRU[index++] = new AscWarning(kWarning_ConstNotInitialized, "Константа не инициализирована." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "Эта константа не была инициализирована." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadArrayCast, "Возможно, недопустимое приведение к типу Array." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Тип Array(x) наследует поведение типа Array(x). Чтобы привести значение к типу Array, используйте выражение \"x as Array\" вместо Array(x)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "Внутри конструктора отсутствует вызов оператора super()." );
        warningConstantsRU[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "Оператор super() будет выполнен до ввода этого конструктора. Добавьте вызов super() внутри конструктора, если нужно контролировать его выполнение." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_version, "Вместо этого используйте Capabilities.version." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Для получения дополнительной информации см. InteractiveObject.focusRect." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Highquality, "Для получения дополнительной информации см. Stage.quality." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Для получения дополнительной информации см. Stage.quality." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Для получения дополнительной информации см. Stage.quality." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Quality, "Для получения дополнительной информации см. Stage.quality." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Вместо этого используйте статическое свойство flash.media.SoundMixer.bufferTime." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Эта функция больше не поддерживается." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Для получения дополнительной информации см. LoaderInfo.url." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Эта функция больше не поддерживается." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_NewLine, "Для перехода к новой строке используйте \"\n\"." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Для получения дополнительной информации см. textField.maxScroll." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Level, "В ActionScript 3.0 не существует концепции уровней, но вместо этого предоставляется прямой доступ к списку отображения. Дополнительную информацию см. в пакете flash.display." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Parent, "Вместо этого используйте родительское свойство." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Root, "Это свойство удалено. Наиболее близким эквивалентом является рабочая область, которая служит корневым элементом списка отображения ActionScript 3.0." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Вместо этого попробуйте объявить источник вызова как аргумент функции." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Эта функция больше не поддерживается." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Вместо этого используйте родительское свойство." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Эта функция больше не поддерживается." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Для получения дополнительной информации см. Sprite.hitArea." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Scroll, "Для получения дополнительной информации см. свойства scrollH и scrollV класса flash.text.TextField." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Вместо путей используйте объекты MovieClip непосредственно в качестве аргументов." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Для получения дополнительной информации см. Video.videoHeight." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Для получения дополнительной информации см. Video.videoWidth." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp__Proto__, "Для получения дополнительной информации см. obsolete __proto__." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Stage, "Для получения дополнительной информации см. DisplayObject.stage." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Вместо этого используйте метод registerClass() в пакете flash.net." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_random, "Вместо этого используйте Math.random()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_chr, "Вместо этого используйте String.fromCharCode()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Вместо этого используйте String.fromCharCode()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ord, "Вместо этого используйте String.charCodeAt()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_mbord, "Вместо этого используйте String.charCodeAt()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_substring, "Вместо этого используйте метод String.substr." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Вместо этого используйте метод String.substr." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_length, "Вместо этого используйте свойство длины аргумента." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_mblength, "Вместо этого используйте свойство длины аргумента." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Для получения дополнительной информации см. изменения в ASnative." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Вместо этого установите свойства непосредственно в экземпляре, используя нотацию с точкой (.)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Вместо этого напрямую перейдите к свойствам, используя нотацию с точкой (.)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Вместо этого установите свойства непосредственно в экземпляре, используя нотацию с точкой (.)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Для получения дополнительной информации см. TextEvent.LINK и addEventListener()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Этот метод перемещен в пакет flash.utils." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Заменено новой функцией-конструктором класса MovieClip." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Перемещено в пакет flash.system. Также см. класс flash.external.ExternalInterface для связи с Javascript/ActionScript." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_getURL, "Для получения информации по аналогичным функциям см. flash.net.URLLoader. Пакет flash.net также содержит функции на уровне пакетов navigateToURL() и sendToURL()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Для получения дополнительной информации см. MovieClip.gotoAndPlay()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Для получения дополнительной информации см. MovieClip.gotoAndStop()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_play, "Для получения дополнительной информации см. MovieClip.play()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_print, "Для получения дополнительной информации см. PrintJob.start()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Для получения дополнительной информации см. PrintJob." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Для получения дополнительной информации см. PrintJob." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_printNum, "Для получения дополнительной информации см. PrintJob." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Используйте Container.removeChild(childName). Для получения дополнительной информации см. класс DisplayObjectContainer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Перемещено в пакет flash.utils. Вместо этого используйте класс Timer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Для получения дополнительной информации см. MovieClip.nextFrame()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Для получения дополнительной информации см. MovieClip.startDrag()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_stop, "Для получения дополнительной информации см. MovieClip.stop()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Для получения дополнительной информации см. Sound.stopAllSounds()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Для получения дополнительной информации см. MovieClip.stopDrag()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Вместо этого используйте оператор точка (.) или оператор \"with\"." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Для получения дополнительной информации см. DisplayObject.stage и Stage.quality." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Вместо этого используйте DisplayObjectContainer.removeChild(childName). Для получения дополнительной информации см. класс DisplayObjectContainer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Вместо этого используйте DisplayObjectContainer.removeChild(childName). Для получения дополнительной информации см. класс DisplayObjectContainer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Эта функция больше не является глобальной, но по-прежнему доступна в качестве метода классов TimerEvent, MouseEvent и KeyboardEvent." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Для получения дополнительной информации см. Video.attachNetStream и Video.attachCamera." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Используйте класс URLLoader для выполнения загрузки и передачи результатов в StyleSheet.parseCSS()" );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "В ActionScript 3.0 все классы зарегистрированы по умолчанию. Если используется формат AMF, дополнительную информацию см. в flash.utils.registerClassAlias()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Для достижения схожей функциональности используйте свойства средства доступа (функции get/set) или класс flash.utils.Proxy." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Для достижения схожей функциональности используйте свойства средства доступа (функции get/set) или класс flash.utils.Proxy." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Для получения дополнительной информации см. MovieClip.loadMovie()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Для получения дополнительной информации см. MovieClip.loadMovieNum()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Для получения дополнительной информации см. Loader.load()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Для получения дополнительной информации см. Loader.load()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Для получения дополнительной информации см. addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Для получения дополнительной информации см. removeEventListener (eventName, listener, useCapture)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Для получения дополнительной информации см. addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Для получения дополнительной информации см. removeEventListener (eventName, listener, useCapture)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Для получения дополнительной информации см. addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Для получения дополнительной информации см. removeEventListener (eventName, listener, useCapture)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Для получения дополнительной информации см. addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Для получения дополнительной информации см. removeEventListener (eventName, listener, useCapture)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Для создания звуков из библиотеки используйте класс SWF." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onStatus, "Flash Player не запускает обработчик событий onStatus автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"status\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onID3, "Flash Player не запускает обработчик событий onID3 автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"id3\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onLoad, "Flash Player не запускает обработчик событий onLoad автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"load\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onSoundComplete, "Flash Player не запускает обработчик событий onSoundComplete автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"soundComplete\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onSetFocus, "Flash Player не запускает обработчик событий onSetFocus автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"focusIn\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onResize, "Flash Player не запускает обработчик событий onResize автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"resize\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onChanged, "Flash Player не запускает обработчик событий onChanged автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"change\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onKillFocus, "Flash Player не запускает обработчик событий onKillFocus автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"focusOut\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onScroller, "Flash Player не запускает обработчик событий onScroller автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"scroll\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onMouseDown, "Flash Player не запускает обработчик событий onMouseDown автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"mouseDown\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onMouseUp, "Flash Player не запускает обработчик событий onMouseUp автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"mouseUp\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onMouseMove, "Flash Player не запускает обработчик событий onMouseMove автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"mouseMove\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onMouseWheel, "Flash Player не запускает обработчик событий onMouseWheel автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"mouseWheel\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onKeyDown, "Flash Player не запускает обработчик событий onKeyDown автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"keyDown\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onKeyUp, "Flash Player не запускает обработчик событий onKeyUp автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"keyUp\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onData, "Flash Player не запускает обработчик событий onData автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"data\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "Flash Player не запускает обработчик событий onHTTPStatus автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"httpStatus\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onDragOut, "Flash Player не запускает обработчик событий onDragOut автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"mouseOut\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onDragOver, "Flash Player не запускает обработчик событий onDragOver автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"mouseOver\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onPress, "Flash Player не запускает обработчик событий onPress автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"mouseDown\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onRelease, "Flash Player не запускает обработчик событий onRelease автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"click\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "Flash Player не запускает обработчик событий onReleaseOutside автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"mouseUp\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onRollOut, "Flash Player не запускает обработчик событий onRollOut автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"mouseOut\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onRollOver, "Flash Player не запускает обработчик событий onRollOver автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"mouseOver\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onActivity, "Flash Player не запускает обработчик событий onActivity автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"activity\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onSelect, "Flash Player не запускает обработчик событий onSelect автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"menuSelect\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onEnterFrame, "Flash Player не запускает обработчик событий onEnterFrame автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"enterFrame\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onUnload, "Flash Player не запускает обработчик событий onUnload автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"unload\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onLoadComplete, "Flash Player не запускает обработчик событий onLoadComplete автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"load\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onLoadError, "Flash Player не запускает обработчик событий onLoadError автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"error\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onLoadInit, "Flash Player не запускает обработчик событий onLoadInit автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"init\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onLoadProgress, "Flash Player не запускает обработчик событий onLoadProgress автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"progress\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onLoadStart, "Flash Player не запускает обработчик событий onLoadStart автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"start\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onClose, "Flash Player не запускает обработчик событий onClose автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"close\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onConnect, "Flash Player не запускает обработчик событий onConnect автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"connect\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onXML, "В ActionScript 3.0 Flash Player не запускает обработчик событий onXMLt автоматически. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"xml\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Вместо этого используйте свойство hasChildNodes." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "Класс XMLEvent устарел, и событие XML больше не передается. Передается только событие данных во время загрузки файла." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "Класс XMLDoc переименован в XMLDocument." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Вместо этого используйте свойство Accessibility.active." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Вместо этого используйте константу ActivityEvent.ACTIVITY." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Вместо этого используйте DisplayObjectContainer.parent.getChildIndex. В справке см. информацию по классу DisplayObjectContainer, который расширен с помощью MovieClip." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Вместо этого используйте DisplayObjectContainer.parent.setChildIndex. В справке см. информацию по классу DisplayObjectContainer, который расширен с помощью MovieClip." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Вместо этого используйте DisplayObjectContainer.getChildAt. В справке см. информацию по классу DisplayObjectContainer, который расширен с помощью MovieClip." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Вместо этого используйте DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild всегда добавляет новый дочерний элемент в индекс DisplayObjectContainer.numChildren." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Вместо этого используйте свойство ByteArray.bytesAvailable." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Вместо этого используйте свойство ByteArray.position." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Вместо этого используйте свойство ByteArray.position." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Вместо этого используйте метод Camera.getCamera()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Вместо этого используйте свойство Camera.currentFPS." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Вместо этого используйте свойство Camera.keyFrameInterval." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Вместо этого используйте свойство Camera.loopback." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Вместо этого используйте свойство ColorTransform.color." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Вместо этого используйте свойство ColorTransform.color." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Вместо этого используйте свойство Container.textSnapshot." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Вместо этого используйте метод ContextMenu.clone()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Вместо этого используйте свойство ContextMenu.forwardAndBack." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Вместо этого используйте метод ContextMenuItem.clone()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Вместо этого используйте свойство CustomActions.actionsList." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Вместо этого используйте константу DataEvent.DATA." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Вместо этого используйте свойство DisplayObject.scaleX." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Вместо этого используйте свойство DisplayObject.scaleX." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Вместо этого используйте свойство DisplayObject.scaleY." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Вместо этого используйте свойство DisplayObject.scaleY." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Вместо этого используйте свойство DisplayObject.mouseX." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Вместо этого используйте свойство DisplayObject.mouseX." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Вместо этого используйте свойство DisplayObject.mouseY." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Вместо этого используйте свойство DisplayObject.mouseY." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Эта функция больше не поддерживается." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Эта функция больше не поддерживается." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Вместо этого используйте свойство DisplayObject.name." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Вместо этого используйте свойство DisplayObject.parent." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Вместо этого используйте свойство DisplayObject.mask." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Вместо этого используйте свойство DisplayObject.visible." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Вместо этого используйте свойство DisplayObject.x." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Вместо этого используйте свойство DisplayObject.y." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Вместо этого используйте свойство DisplayObject.rotation." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Вместо этого используйте свойство DisplayObject.alpha." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Вместо этого используйте свойство DisplayObject.width." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Вместо этого используйте свойство DisplayObject.height." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Вместо этого используйте свойство ExternalInterface.available." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Вместо этого используйте константу ErrorEvent.ERROR." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Вместо этого используйте свойство Event.isDefaultPrevented." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Вместо этого используйте константу Event.ACTIVATE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Вместо этого используйте константу Event.ADDED." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Вместо этого используйте константу Event.CANCEL." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Вместо этого используйте константу Event.CHANGE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Вместо этого используйте константу Event.CLOSE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Вместо этого используйте константу Event.COMPLETE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Вместо этого используйте константу Event.CONNECT." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Вместо этого используйте константу Event.DEACTIVATE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Вместо этого используйте константу Event.ENTER_FRAME." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Вместо этого используйте константу Event.ID3." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Вместо этого используйте константу Event.INIT." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Вместо этого используйте константу Event.MOUSE_LEAVE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Вместо этого используйте константу Event.OPEN." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Вместо этого используйте константу Event.REMOVED." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Вместо этого используйте константу Event.RENDER." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Вместо этого используйте константу Event.RESIZE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Вместо этого используйте константу Event.SCROLL." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Вместо этого используйте константу Event.SELECT." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Вместо этого используйте константу Event.SOUND_COMPLETE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Вместо этого используйте константу Event.TAB_CHILDREN_CHANGE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Вместо этого используйте константу Event.TAB_ENABLED_CHANGE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Вместо этого используйте константу Event.TAB_INDEX_CHANGE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Вместо этого используйте константу Event.UNLOAD." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Вместо этого используйте константу FocusEvent.FOCUS_IN." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Вместо этого используйте константу FocusEvent.FOCUS_OUT." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Вместо этого используйте константу FocusEvent.KEY_FOCUS_CHANGE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Вместо этого используйте константу FocusEvent.MOUSE _FOCUS_CHANGE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Вместо этого используйте метод Graphics.beginBitmapFill()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Вместо этого используйте свойство BitmapFilter.quality." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Вместо этого используйте KeyboardEvent.charCode." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Вместо этого используйте KeyboardEvent.keyCode." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Для получения дополнительной информации см. класс KeyboardEvent." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Для получения дополнительной информации см. KeyboardEvent.ctrlKey, KeyboardEvent.altKey и KeyboardEvent.shiftKey." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Вместо этого используйте константу PAGE_DOWN." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Вместо этого используйте константу PAGE_UP." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Вместо этого используйте константу DELETE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Вместо этого используйте константу CAPS_LOCK." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Вместо этого используйте одну из констант NUMPAD_0 -> NUMPAD_9." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Вместо этого используйте свойство InteractiveObject.focusRect." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Вместо этого используйте свойство InteractiveObject.contextMenu." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Вместо этого используйте свойство KeyboardEvent.charCode." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Вместо этого используйте свойство KeyboardEvent.keyCode." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Вместо этого используйте свойство Loader.contentLoaderInfo." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Эта функция больше не поддерживается." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Эта функция больше не поддерживается." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Вместо этого используйте свойство LoaderInfo.loaderURL." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Вместо этого используйте свойство LocalConnection.domain." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Вместо этого используйте свойство MenuEvent.contextMenuOwner." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Вместо этого используйте метод Microphone.getMicrophone()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Если именем подкласса MovieClip является А, используйте var mc= new A(); addChild(mc). Для получения дополнительной информации см. класс DisplayObjectContainer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Используйте var mc= new MovieClip(); addChild(mc). Для получения дополнительной информации см. класс DisplayObjectContainer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Используйте var tf= new TextField(); addChild(mc). Для получения дополнительной информации см. класс DisplayObjectContainer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Используйте Container.removeChild(childName). Для получения дополнительной информации см. DisplayObjectContainer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Используйте var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));. Для получения дополнительной информации см. классы Loader и DisplayObjectContainer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Вместо этого используйте DisplayObjectContainer.removeChild(childName). Для получения дополнительной информации см. класс DisplayObjectContainer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Вместо этого используйте DisplayObjectContainer.removeChild(childName). Для получения дополнительной информации см. класс DisplayObjectContainer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Вместо этого используйте DisplayObjectContainer.parent.getChildIndex. Для получения дополнительной информации см. класс DisplayObjectContainer, который расширен с помощью MovieClip." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Вместо этого используйте DisplayObjectContainer.parent.setChildIndex. Для получения дополнительной информации см. класс DisplayObjectContainer, который расширен с помощью MovieClip." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Вместо этого используйте DisplayObjectContainer.getChildAt. Для получения дополнительной информации см. класс DisplayObjectContainer, который расширен с помощью MovieClip." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Вместо этого используйте DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild всегда добавляет новый дочерний элемент в индекс DisplayObjectContainer.numChildren." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Для получения дополнительной информации см. DisplayObject.addChild." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Для получения дополнительной информации см. LoaderInfo.bytesLoaded класс Loader." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Для получения дополнительной информации см. LoaderInfo.bytesTotal и класс Loader." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Для получения информации по аналогичным функциям см. flash.net.URLLoader. Пакет flash.net также содержит функции на уровне пакетов navigateToURL() и sendToURL()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Для получения дополнительной информации см. LoaderInfo.url и класс Loader." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Для получения дополнительной информации см. LoaderInfo.url и класс Loader." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Вместо этого используйте свойство MovieClip.mask." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Для получения дополнительной информации см. LoaderInfo.swfVersion и класс Loader." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Вместо этого используйте свойство MovieClip.currentFrame." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Вместо этого используйте свойство MovieClip.framesLoaded." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Вместо этого используйте свойство MovieClip.totalFrames." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Для получения дополнительной информации см. displayObjectInstance.root." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Для получения дополнительной информации см. displayObjectInstance.root." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Вместо этого используйте статическое свойство flash.media.SoundMixer.bufferTime." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Для получения дополнительной информации см. класс Graphics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Вместо этого используйте свойство NetStream.bufferTime." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Вместо этого используйте свойство NetStream.currentFPS." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Вместо этого используйте свойство NetStream.videoCodec." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Вместо этого используйте свойство NetStream.audioCodec." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Вместо этого используйте свойство ProductManager.isInstalled." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Вместо этого используйте свойство ProductManager.installedVersion." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Вместо этого используйте свойство ProductManager.isRunning." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Вместо этого используйте метод Point.add()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Вместо этого используйте свойство Proxy.deleteDescendants." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Вместо этого используйте метод heapDump()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Вместо этого используйте свойство ProgressEvent.bytesLoaded." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Вместо этого используйте свойство ProgressEvent.bytesTotal." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Вместо этого используйте свойство Rectangle.isEmpty." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Вместо этого используйте свойство SoundTransform.pan." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Вместо этого используйте свойство Sockect.bytesAvailable." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Вместо этого используйте свойство SharedObject.size." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Вместо этого используйте свойство SharedObject.fps." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Больше не поддерживается." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Вместо этого используйте метод Sprite.constructChildren()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Вместо этого используйте свойство Sprite.dropTarget." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Вместо этого используйте свойство Stage.focus." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Вместо этого используйте свойство Stage.focus." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Вместо этого используйте свойство Stage.showDefaultContextMenu." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Вместо этого используйте свойство StyleSheet.styleNames." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Используя экземпляр URLLoader, загрузите данные StyleSheet, а затем передайте данные средства загрузки в метод StyleSheet.parseCSS. Для получения дополнительной информации см. классы URLLoader и EventDispatcher." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Используя экземпляр URLLoader, загрузите данные StyleSheet, а затем передайте данные средства загрузки в метод StyleSheet.parseCSS. Для получения дополнительной информации см. классы URLLoader и EventDispatcher." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Используя экземпляр URLLoader, загрузите данные StyleSheet, а затем передайте данные средства загрузки в метод StyleSheet.parseCSS. Для получения дополнительной информации см. классы URLLoader и EventDispatcher." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Используя экземпляр URLLoader, загрузите данные StyleSheet, а затем передайте данные средства загрузки в метод StyleSheet.parseCSS. Для получения дополнительной информации см. классы URLLoader и EventDispatcher." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Используя экземпляр URLLoader, загрузите данные StyleSheet, а затем передайте данные средства загрузки в метод StyleSheet.parseCSS. Для получения дополнительной информации см. классы URLLoader и EventDispatcher." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Вместо этого используйте свойство IME.enabled." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Вместо этого используйте свойство IME.enabled." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Вместо этого используйте свойство IME.instance." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Вместо этого используйте свойство IME.conversionMode." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Вместо этого используйте свойство IME.conversionMode." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Вместо этого используйте свойство System.vmVersion." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Вместо этого используйте свойство SWFLoaderInfo.swfVersion." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Вместо этого используйте свойство SWFLoaderInfo.actionScriptVersion." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Вместо этого используйте свойство TextField.defaultTextFormat." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Вместо этого используйте свойство TextField.defaultTextFormat." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Вместо этого используйте DisplayObjectContainer.parent.getChildIndex. Для получения дополнительной информации см. класс DisplayObjectContainer, расширяемый с помощью MovieClip." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Вместо этого используйте DisplayObjectContainer.parent.setChildIndex. Для получения дополнительной информации см. класс DisplayObjectContainer, расширяемый с помощью MovieClip." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Вместо этого используйте DisplayObjectContainer.parent.getChildAt. Для получения дополнительной информации см. класс DisplayObjectContainer, расширяемый с помощью MovieClip." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Вместо этого используйте DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild всегда добавляет новый дочерний элемент в индекс DisplayObjectContainer.numChildren." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Вместо этого используйте метод TextField.replaceSelectedText()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Вместо этого используйте метод TextField.getLineIndexOfChar()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Вместо этого используйте свойство TextField.selectionBeginIndex." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Вместо этого используйте свойство TextField.selectionEndIndex." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Вместо этого используйте свойство TextField.caretIndex." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Вместо этого используйте метод Font.enumerateFonts()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Вместо этого используйте свойство TextField.maxScrollV." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Вместо этого используйте свойство TextField.scrollH." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Вместо этого используйте свойство TextField.maxScrollH." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Вместо этого используйте свойство TextField.defaultTextFormat." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Вместо этого создайте временный TextField и используйте TextField.getLineMetrics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Вместо этого используйте свойство TextSnapshot.charCount." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Вместо этого используйте метод navigateToURL() в пакете flash.net." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Вместо этого используйте метод sendToURL() в пакете flash.net." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Вместо этого используйте свойство URLLoader.dataFormat." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Вместо этого используйте свойство URLStream.bytesAvailable." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Это свойство больше не поддерживается." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Вместо этого используйте свойство URLRequest.applicationDomain." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Чтобы добавить заголовки запроса, задайте свойство URLRequest.requestHeaders для массива объектов URLRequestHeader." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Используя экземпляр URLLoader, загрузите XML-файл, а затем передайте данные URLLoader в конструктор XMLDocument. Для получения дополнительной информации см. классы URLLoader и EventDispatcher." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Вместо этого используйте метод sendToURL() в пакете flash.net." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Для загрузки XML-файла установите свойство postData для объекта URLRequest и используйте его вместе с объектом URLLoader. Передайте данные URLLoader в конструктор XMLDocument. Для получения дополнительной информации см. классы URLLoader и EventDispatcher." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Используя экземпляр URLLoader, загрузите XML-файл, а затем передайте данные URLLoader в конструктор XMLDocument. Для получения дополнительной информации см. классы URLLoader и EventDispatcher." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Чтобы добавить заголовки запроса, задайте свойство URLRequest.requestHeaders для массива объектов URLRequestHeader." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Для получения дополнительной информации см. URLLoader.bytesLoaded и класс URLLoader." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Для получения дополнительной информации см. URLLoader.bytesTotal и класс URLLoader." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Используя экземпляр URLLoader, загрузите XML-файл, а затем передайте данные средства загрузки в метод StyleSheet/parseCSS. Для получения дополнительной информации см. классы URLLoader и EventDispatcher." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Вместо этого используйте свойство URLRequest.contentType." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Вместо этого проверьте наличие возможных исключений, выбрасываемых конструктором XMLDocument или методом XMLDocument.parseXML. Для получения дополнительной информации см. XMLDocument." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Button, "Класс Button переименован в SimpleButton." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Container, "Класс Container переименован в DisplayObjectContainer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Image, "Класс Image переименован в BitmapData." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "Класс ImageFilter переименован в BitmapFilter." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "Класс ImageSprite переименован в Bitmap." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "Класс ImageLoaderInfo переименован в BitmapLoaderInfo." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "Класс ImeEvent переименован в IMEEvent." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Key, "Класс Key переименован в Keyboard." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "Класс LineMetrics переименован в TextLineMetrics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Для получения дополнительной информации см. класс URLVariables, свойства URLRequest.urlVariables и URLRequest.postData, а также свойство URLLoader.dataFormat." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "Класс MenuEvent переименован в ContextMenuEvent." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "Класс SystemCapabilities переименован в Capabilities." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Вместо этого используйте свойство TextField.getLineMetrics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Button, "Класс Button переименован в SimpleButton." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Container, "Класс Container переименован в DisplayObjectContainer." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Image, "Класс Image переименован в BitmapData." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "Класс ImageFilter переименован в BitmapFilter." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "Класс ImageSprite переименован в Bitmap." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "Класс ImageLoaderInfo переименован в BitmapLoaderInfo." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "Класс ImeEvent переименован в IMEEvent." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Key, "Класс Key переименован в Keyboard." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "Класс LineMetrics переименован в TextLineMetrics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Для получения дополнительной информации см. класс URLVariables, свойства URLRequest.urlVariables и URLRequest.postData, а также свойства URLLoader.dataFormat." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "Класс MenuEvent переименован в ContextMenuEvent." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "Класс SystemCapabilities переименован в Capabilities." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Вместо этого используйте свойство TextField.getLineMetrics." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Дополнительную информацию см. в справке по классу Proxy, который обеспечивает схожую функциональность." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Вместо этого используйте метод XMLUI.getProperty." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Вместо этого используйте метод XMLUI.setProperty." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Вместо этого используйте свойство DisplayObject.accessibilityProperties." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Вместо этого используйте свойство DisplayObject.scale9Grid." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Вместо этого используйте метод Graphics.drawOval." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Вместо этого используйте свойство NetConnection.connected." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Вместо этого используйте свойство Socket.connected." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Вместо этого используйте свойство URLStream.connected." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Вместо этого используйте свойство SyncEvent.changeList." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Вместо этого используйте свойство TextField.scrollV." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Вместо этого используйте свойство TextField.bottomScrollV." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Вместо этого используйте константу BitmapDataChannel.RED." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Вместо этого используйте константу BitmapDataChannel.GREEN." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Вместо этого используйте константу BitmapDataChannel.BLUE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Вместо этого используйте константу BitmapDataChannel.ALPHA." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Вместо этого используйте оператор \"is\"." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Вместо этого используйте метод flash.system.Security.showSettings." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Вместо этого используйте свойство System.useCodePage." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Вместо этого используйте класс flash.events.EventDispatcher." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Вместо этого используйте статическое свойство flash.media.SoundMixer.bufferTime." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Вместо этого создайте новый экземпляр класса растровых символов библиотеки, т.е. новый myBitmapName()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Для получения дополнительной информации см. Loader.load()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "Класс MovieClipLoader заменен на класс flash.display.Loader." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "Класс MovieClipLoader заменен на класс flash.display.Loader." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Для получения дополнительной информации см. addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Для получения дополнительной информации см. removeEventListener (eventName, listener, useCapture)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Вместо этого используйте константу flash.system.IMEConversionMode.ALPHANUMERIC_FULL." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Вместо этого используйте константу flash.system.IMEConversionMode.ALPHANUMERIC_HALF." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Вместо этого используйте константу flash.system.IMEConversionMode.CHINESE." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Вместо этого используйте константу flash.system.IMEConversionMode.JAPANESE_HIRAGANA." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Вместо этого используйте константу flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Вместо этого используйте константу flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Вместо этого используйте константу flash.system.IMEConversionMode.KOREAN." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Вместо этого используйте константу flash.system.IMEConversionMode.UNKNOWN." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Для получения дополнительной информации см. addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Для получения дополнительной информации см. removeEventListener (eventName, listener, useCapture)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onCancel, "Flash Player не запускает обработчик событий onCancel автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (cancel, onCancel)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Прямая замена отсутствует. С помощью метода willTrigger() можно сообщать о регистрации прослушивателей." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onIMEComposition, "Flash Player не запускает обработчик событий onIMEComposition автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (imeComposition, handlerName)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Для получения дополнительной информации см. LoaderInfo.url и класс Loader." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Вместо этого используйте метод getFullYear()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Вместо этого используйте метод setFullYear()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Вместо этого используйте метод getUTCFullYear()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Вместо этого используйте свойство \"rate\"." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Selection, "Класс Selection удален. Для получения дополнительной информации см. метод addEventListener класса, содержащего необходимые сведения о выделенной области." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Selection, "Класс Selection удален. Для получения дополнительной информации см. метод addEventListener класса, содержащего необходимые сведения о выделенной области." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Вместо этого используйте свойство \"gain\"." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Значения цвета можно присвоить напрямую, используя свойства или конструктор класса ColorTransform." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Значения цвета можно присвоить напрямую, используя свойства или конструктор класса ColorTransform." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "В справке см. информацию об относящихся к фокусу свойствах класса flash.display.InteractiveObject." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "В справке см. информацию о методе flash.display.Graphics.beginBitmapFill." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "В справке см. информацию о методе flash.display.DisplayObject.hitTestObject()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "В справке см. информацию о методе addChild()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Вместо этого используйте метод load()." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Для контроля и управления амплитудой звукового канала используйте flash.media.SoundChannel.leftPeak и flash.media.SoundChannel.rightPeak." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Вместо этого используйте свойство soundTransform." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Вместо этого используйте свойство SoundTransform.pan." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Вместо этого используйте свойство SoundTransform.pan." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Вместо этого используйте свойство bytesLoaded." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Вместо этого используйте свойство bytesTotal." );
        warningConstantsRU[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Неэффективное использование операции += с полем TextField." );
        warningConstantsRU[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Добавление текста в TextField с помощью операции += выполняется во много раз медленнее, чем при использовании метода TextField.appendText()." );
        warningConstantsRU[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Возможно, отсутствуют скобки." );
        warningConstantsRU[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Вместо ожидавшегося значения типа %s использовалось значение функции. Возможно, отсутствуют скобки () после ссылки на эту функцию." );
        warningConstantsRU[index++] = new AscWarning(kWarning_InstanceOfChanges, "Использование оператора \"instanceof\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "Оператор \"instanceof\" устарел, вместо него используйте оператор \"is\"." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "Обработчик событий allowDomain() теперь является стандартным методом, а не обратным вызовом события. Для получения дополнительной информации см. новый метод LocalConnection.allowDomain." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "Обработчик событий allowInsecureDomain() теперь является стандартным методом, а не обратным вызовом события. Для получения дополнительной информации см. новый метод LocalConnection.allowInsecureDomain." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_call, "Глобальный метод call() больше не поддерживается." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_Color, "Класс Color удален. Для достижения эквивалентной функциональности используйте класс flash.geom.ColorTransform." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Color, "Класс Color удален. Для достижения эквивалентной функциональности используйте класс flash.geom.ColorTransform." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "В SWF-файлах в ActionScript 3.0 всегда используются правила точного сопоставления адресов доменов." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp_capabilities, "Класс \"capabilities\" переименован в \"Capabilities\"." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_capabilities, "Класс \"capabilities\" переименован в \"Capabilities\"." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Для получения дополнительной информации см. addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Для получения дополнительной информации см. removeEventListener (eventName, listener, useCapture)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onComplete, "Flash Player не запускает обработчик событий onComplete автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"complete\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onHTTPError, "Flash Player не запускает обработчик событий onHTTPError автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"httpError\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onIOError, "Flash Player не запускает обработчик событий onIOError автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"ioError\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onProgress, "Flash Player не запускает обработчик событий onProgress автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"progress\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onSecurityError, "Flash Player не запускает обработчик событий onSecurityError автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"securityError\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Event_onOpen, "Flash Player не запускает обработчик событий onOpen автоматически во время выполнения в ActionScript 3.0. Сначала нужно зарегистрировать этот обработчик для события, используя addEventListener (\"open\", callback_handler)." );
        warningConstantsRU[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Возможно, используется класс ActionScript 2.0 XML." );
        warningConstantsRU[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Ошибка миграции: класс ActionScript 2.0 XML переименован в XMLDocument." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadDateCast, "Недопустимая операция приведения к типу Date." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) наследует поведение нового Date().toString(). Для приведения значения к типу Date вместо Date(x) используйте \"x as Date\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ImportHidesClass, "При импорте пакета с таким же именем, как у текущего класса, этот идентификатор класса перестанет отображаться в этой области." );
        warningConstantsRU[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "При импорте пакета с таким же именем, как у текущего класса, этот идентификатор класса перестанет отображаться в этой области." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Имена нескольких аргументов совпадают." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Указано более одного аргумента с именем \"%s\". Ссылки на этот аргумент всегда будут вести к последнему." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Вместо этого используйте метод Rectangle.containsRect." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_eval, "Эта функция удалена." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Эта функция заменена свойством flash.system.Capabilities.version." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Эта функция заменена свойством flash.display.MovieClip.framesLoaded." );
        warningConstantsRU[index++] = new AscWarning(kUnsupportedProp__global, "Свойство \"_global\" удалено. Для достижения эквивалентной функциональности используйте статический член класса." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadBoolAssignment, "Вместо ожидавшегося значения типа Boolean использовано значение другого типа." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "Вместо ожидавшегося значения типа Boolean использовано значение %s. Выражение будет типом, приведенным к типу Boolean." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadES3TypeProp, "Неизвестное свойство." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s не является распознанным свойством динамического класса %s." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Неизвестный метод." );
        warningConstantsRU[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s не является распознанным методом динамического класса %s." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Повторное определение переменной." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Повторное определение переменной." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Имя определения совпадает с именем импортированного пакета. Неквалифицированные ссылки на это имя будут приводить к пакету, а не к определению." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Имя определения совпадает с именем импортированного пакета. Неквалифицированные ссылки на это имя будут приводить к пакету, а не к определению." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Возможно, попытка удалить фиксированное свойство." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "Нельзя удалить объявленное свойство %s. Для освобождения связанной памяти установите для нее значение \"null\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Deprecated, "Использование устаревшего определения." );
        warningConstantsRU[index++] = new AscWarning(kWarning_Deprecated_specific, "\"%s\" устарело." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DeprecatedMessage, "Использование устаревшего определения." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsRU[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Использование устаревшего определения." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "\"%s\" устарело.  Используйте \"%s\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DeprecatedSince, "Использование устаревшего определения." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "\"%s\" устарело с %s. Используйте \"%s\"." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Использование устаревшего определения." );
        warningConstantsRU[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "\"%s\" устарело с %s." );
   }

   static final AscWarning[] warningConstantsSV= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsSV() 
   {
      int index=0;
        warningConstantsSV[index++] = new AscWarning(kWarning_NoTypeDecl, "Typdeklaration saknas." );
        warningConstantsSV[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' har ingen typdeklaration." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Ologisk jämförelse med undefined.  Bara variabler utan typ (eller variabler med typen *) kan vara undefined." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Variabler av typen %s kan inte vara undefined. Värdet undefined kommer att typomvandlas till %s före jämförelse." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "Funktionen som används i uttrycket new returnerar ett värde.  Resultatet blir det som funktionen returnerar, och inte en ny förekomst av funktionen." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Migreringsproblem: Resultatet av ny %s blir returvärdet för %s och inte en ny förekomst av funktionen." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() utan argument returnerar false i ActionScript 3.0.  Boolean() returnerade undefined i ActionScript 2.0." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Användning av Boolean() utan argument." );
        warningConstantsSV[index++] = new AscWarning(kWarning_NumberFromStringChanges, "I ActionScript 3.0 ignoreras tomrum och '' returnerar 0. Number() returnerar NaN i ActionScript 2.0 när parametern är '' eller innehåller tomrum." );
        warningConstantsSV[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Migreringsproblem: När funktionen Number('') anropas med ett tomt strängargument returneras 0 i ActionScript 3.0 och NaN i ActionScript 2.0." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Formatet för Array.toString() har ändrats." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Migreringsproblem: Hur Array.toString() hanterar element som är null och undefined har ändrats." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DepricatedPropertyError, "ActionScript 2.0-egenskap som inte stöds." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Migreringsproblem: Egenskapen %s stöds inte längre.  %s." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DepricatedFunctionError, "ActionScript 2.0-funktion som inte stöds." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Migreringsproblem: Metoden %s stöds inte längre.  %s." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve stöds inte längre." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Migreringsproblem: __resolve stöds inte längre.  Använd den nya klassen Proxy om du vill ha liknande funktion." );
        warningConstantsSV[index++] = new AscWarning(kWarning_LevelNotSupported, "_level  stöds inte längre. Mer information finns i paketet flash.display." );
        warningConstantsSV[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Migreringsproblem: _level stöds inte längre. Mer information finns i paketet flash.display." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ClassIsSealed, "Klassen är stängd.  Det går inte att lägga till medlemmar till den dynamiskt." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Migreringsproblem: %s är inte en dynamisk klass.  Det går inte att lägga till medlemmar till förekomster dynamiskt." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Omfånget för nyckelordet har ändrats.  Klassmetoder som extraheras från en förekomst av en klass tolkas alltid tillbaka till den förekomsten.  I ActionScript 2.0 görs detta dynamiskt baserat på var metoden anropas ifrån." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Migreringsproblem: Metoden %s beter sig olika i ActionScript 3.0 på grund av förändringen i omfång för det här nyckelordet. Läs om varning 1083 om du vill ha mer information." );
        warningConstantsSV[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Namnutrymmesdeklarationen saknas (variabeln är inte definierad som public, private osv.)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s kommer att omfatta standardnamnutrymmet: %s internal.  Den syns inte utanför det här paketet." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 itererar över ett objekts egenskaper inom en \"for x in target\"-sats i slumpvis ordning." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Migreringsproblem: ActionScript 3.0 itererar över ett objekts egenskaper inom en \"for x in target\"-sats i slumpvis ordning." );
        warningConstantsSV[index++] = new AscWarning(kWarning_InternalError, "Internt fel i kompilatorn." );
        warningConstantsSV[index++] = new AscWarning(kWarning_InternalError_specific, "Felkod: %s." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler har inte lagts till som avlyssnare." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Migreringsproblem: %s" );
        warningConstantsSV[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Negativt värde blir ett stort positivt värde när det tilldelas till datatypen uint." );
        warningConstantsSV[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Negativa värden har angetts där ett uint-värde (icke-negativt) förväntades." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadNullComparision, "Ologisk jämförelse med null." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Ologisk jämförelse med null.  Variabler av typen %s kan inte vara null." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadNaNComparision, "Ologisk jämförelse med NaN. Alla jämförelseoperationer med NaN utvärderas till false eftersom NaN != NaN." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Ologisk jämförelse med NaN.  Den här programsatsen utvärderas alltid till false." );
        warningConstantsSV[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Tilldelning inom villkorlig." );
        warningConstantsSV[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Tilldelning inom villkorlig.  Menade du == i stället för =?" );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadNullAssignment, "Omöjlig tilldelning av null." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "null användes där ett %s-värde förväntades." );
        warningConstantsSV[index++] = new AscWarning(kWarning_NoConstructor, "Konstruktor saknas." );
        warningConstantsSV[index++] = new AscWarning(kWarning_NoConstructor_specific, "Ingen konstruktorfunktion har angetts för klassen %s." );
        warningConstantsSV[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Tomt uttryck." );
        warningConstantsSV[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Tomt uttryck hittades där kodblock förväntades. Skrev du in ”;” av misstag?" );
        warningConstantsSV[index++] = new AscWarning(kWarning_ConstNotInitialized, "Konstanten har inte initierats." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "Konstanten har inte initierats." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadArrayCast, "Array-typbestämningen kanske är ogiltig." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) beter sig på samma sätt som en ny Array(x).  Om du vill byta ett värde till typen Array använder du uttrycket x som Array i stället för Array(x)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "Programsatsen super() anropades inte i konstruktorn." );
        warningConstantsSV[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "Programsatsen super() körs innan konstruktorn startas.  Lägg till ett anrop till super() i konstruktorn om du vill styra när den körs explicit." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_version, "Använd Capabilities.version i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Mer information finns under InteractiveObject.focusRect." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Highquality, "Mer information finns under Stage.quality." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Mer information finns under Stage.quality." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Mer information finns under Stage.quality." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Quality, "Mer information finns under Stage.quality." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Använd den statiska egenskapen flash.media.SoundMixer.bufferTime i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Den här funktionaliteten stöds inte längre." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Mer information finns under LoaderInfo.url." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Den här funktionaliteten stöds inte längre." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_NewLine, "Använd '\n' för newline." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Mer information finns i textField.maxScroll." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Level, "Nivåkonceptet finns inte i ActionScript 3.0. I stället ges direktåtkomst till visningslistan. Mer information finns i paketet flash.display." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Parent, "Använd egenskapen parent i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Root, "Den här egenskapen har tagits bort. Den närmsta motsvarigheten är scenen, som fungerar som rot till visningslistan i ActionScript 3.0." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Försök med att deklarera anroparen som argument till funktionen i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Den här funktionaliteten stöds inte längre." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Använd egenskapen parent i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Den här funktionaliteten stöds inte längre." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Mer information finns under Sprite.hitArea." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Scroll, "Mer information finns under egenskaperna scrollH och scrollV i klassen flash.text.TextField." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Använd MovieClip-objekt direkt som argument i stället för sökvägar." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Mer information finns under Video.videoHeight." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Mer information finns under Video.videoWidth." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp__Proto__, "Mer information finns under den borttagna __proto__." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Stage, "Mer information finns i DisplayObject.stage." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Använd metoden registerClass() i paketet flash.net i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_random, "Använd Math.random() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_chr, "Använd String.fromCharCode() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Använd String.fromCharCode() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ord, "Använd String.charCodeAt() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_mbord, "Använd String.charCodeAt() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_substring, "Använd metoden String.substr i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Använd metoden String.substr i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_length, "Använd argumentets length-egenskap i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_mblength, "Använd argumentets length-egenskap i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Mer information finns under beskrivningen av ändringar i ASnative." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Ställ in egenskaperna direkt i förekomsten med dot (.)-notation i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Använd egenskaperna direkt med dot (.)-notation i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Ställ in egenskaperna direkt i förekomsten med dot (.)-notation i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Mer information finns i TextEvent.LINK och addEventListener()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Den här metoden har flyttats till paketet flash.utils." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Ersatt av den nya klasskonstruktorfunktionen MovieClip." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Flyttad till paketet flash.system. Mer information om kommunikation mellan JavaScript och ActionScript finns under klassen flash.external.ExternalInterface." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_getURL, "Motsvarande funktionalitet beskrivs under flash.net.URLLoader.  Paketet flash.net innehåller också paketnivåfunktionerna navigateToURL() och sendToURL()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Mer information finns under MovieClip.gotoAndPlay()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Mer information finns under MovieClip.gotoAndStop()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_play, "Mer information finns under MovieClip.play()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_print, "Mer information finns under PrintJob.start()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Mer information finns under PrintJob." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Mer information finns under PrintJob." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_printNum, "Mer information finns under PrintJob." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Använd Container.removeChild(childName). Mer information finns under klassen DisplayObjectContainer." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Flyttad till paketet flash.utils.  Du kan använda klassen Timer i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Mer information finns under MovieClip.nextFrame()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Mer information finns under MovieClip.startDrag()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_stop, "Mer information finns under MovieClip.stop()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Mer information finns under Sound.stopAllSounds()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Mer information finns under MovieClip.stopDrag()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Använd operatorn punkt (.) eller programsatsen with i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Mer information finns under DisplayObject.stage och Stage.quality." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Använd DisplayObjectContainer.removeChild(childName) i stället. Mer information finns under klassen DisplayObjectContainer." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Använd DisplayObjectContainer.removeChild(childName) i stället. Mer information finns under klassen DisplayObjectContainer." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Den här funktionen är inte längre en global funktion, men den är fortfarande tillgänglig som metod i klasserna TimerEvent, MouseEvent och KeyboardEvent." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Mer information finns under Video.attachNetStream och Video.attachCamera." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Använd klassen URLLoader för att utföra inläsning och skicka resultatet till StyleSheet.parseCSS()" );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "I ActionScript 3.0 registreras alla klasser som standard.  Om du använder AMF finns mer information i flash.utils.registerClassAlias()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Använd åtkomstegenskaper (get/set-funktioner) eller klassen flash.utils.Proxy om du vill ha liknande funktionalitet." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Använd åtkomstegenskaper (get/set-funktioner) eller klassen flash.utils.Proxy om du vill ha liknande funktionalitet." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Mer information finns under MovieClip.loadMovie()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Mer information finns under MovieClip.loadMovieNum()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Mer information finns under Loader.load()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Mer information finns under Loader.load()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Mer information finns under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Mer information finns under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Mer information finns under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Mer information finns under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Mer information finns under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Mer information finns under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Mer information finns under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Mer information finns under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Använd klassen SWF för att skapa ljud från biblioteket" );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onStatus, "Händelsehanteraren onStatus aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('status', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onID3, "Händelsehanteraren onID3 aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('id3', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onLoad, "Händelsehanteraren onLoad aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('load', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onSoundComplete, "Händelsehanteraren onSoundComplete aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('soundComplete', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onSetFocus, "Händelsehanteraren onSetFocus aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('focusIn', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onResize, "Händelsehanteraren onResize aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('resize', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onChanged, "Händelsehanteraren onChanged aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('change', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onKillFocus, "Händelsehanteraren onKillFocus aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('focusOut', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onScroller, "Händelsehanteraren onScroller aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('scroll', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onMouseDown, "Händelsehanteraren onMouseDown aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('mouseDown', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onMouseUp, "Händelsehanteraren onMouseUp aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('mouseUp', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onMouseMove, "Händelsehanteraren onMouseMove aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('mouseMove', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onMouseWheel, "Händelsehanteraren onMouseWheel aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('mouseWheel', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onKeyDown, "Händelsehanteraren onKeyDown aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('keyDown', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onKeyUp, "Händelsehanteraren onKeyUp aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('keyUp', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onData, "Händelsehanteraren onData aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('data', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "Händelsehanteraren onHTTPStatus aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('httpStatus', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onDragOut, "Händelsehanteraren onDragOut aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('mouseOut', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onDragOver, "Händelsehanteraren onDragOver aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('mouseOver', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onPress, "Händelsehanteraren onPress aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('mouseDown', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onRelease, "Händelsehanteraren onRelease aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('click', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "Händelsehanteraren onReleaseOutside aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('mouseUp', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onRollOut, "Händelsehanteraren onRollOut aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('mouseOut', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onRollOver, "Händelsehanteraren onRollOver aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('mouseOver', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onActivity, "Händelsehanteraren onActivity aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('activity', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onSelect, "Händelsehanteraren onSelect aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('menuSelect', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onEnterFrame, "Händelsehanteraren onEnterFrame aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('enterFrame', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onUnload, "Händelsehanteraren onUnload aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('unload', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onLoadComplete, "Händelsehanteraren onLoadComplete aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('load', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onLoadError, "Händelsehanteraren onLoadError aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('error', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onLoadInit, "Händelsehanteraren onLoadInit aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('init', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onLoadProgress, "Händelsehanteraren onLoadProgress aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('progress', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onLoadStart, "Händelsehanteraren onLoadStart aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('start', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onClose, "Händelsehanteraren onClose aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('close', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onConnect, "Händelsehanteraren onConnect aktiveras inte automatiskt av Flash Player i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('connect', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onXML, "onXML aktiveras inte automatiskt av Flash Player i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('xml', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Använd egenskapen hasChildNodes i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "Klassen XMLEvent har tagits bort. Händelsen xml skickas inte längre. Bara datahändelsen skickas under filinläsning." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "Namnet på klassen XMLDoc har ändrats till XMLDocument." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Använd egenskapen Accessibility.active i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Använd konstanten ActivityEvent.ACTIVITY i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Använd DisplayObjectContainer.parent.getChildIndex i stället. Mer information finns i hjälpen för klassen DisplayObjectContainer, som utökas av MovieClip." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Använd DisplayObjectContainer.parent.setChildIndex i stället. Mer information finns i hjälpen för klassen DisplayObjectContainer, som utökas av MovieClip." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Använd DisplayObjectContainer.getChildAt i stället. Mer information finns i hjälpen för klassen DisplayObjectContainer, som utökas av MovieClip." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Använd DisplayObjectContainer.numChildren i stället. DisplayObjectContainer.addChild lägger alltid till det nya underordnade objektet i indexet DisplayObjectContainer.numChildren." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Använd egenskapen ByteArray.bytesAvailable i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Använd egenskapen ByteArray.position i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Använd egenskapen ByteArray.position i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Använd metoden Camera.getCamera() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Använd egenskapen Camera.currentFPS i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Använd egenskapen Camera.keyFrameInterval i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Använd egenskapen Camera.loopback i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Använd egenskapen ColorTransform.color i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Använd egenskapen ColorTransform.color i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Använd egenskapen Container.textSnapshot i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Använd metoden ContextMenu.clone() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Använd egenskapen ContextMenu.forwardAndBack i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Använd egenskapen ContextMenuItem.clone() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Använd egenskapen CustomActions.actionsList i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Använd konstanten DataEvent.DATA i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Använd egenskapen DisplayObject.scaleX i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Använd egenskapen DisplayObject.scaleX i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Använd egenskapen DisplayObject.scaleY i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Använd egenskapen DisplayObject.scaleY i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Använd egenskapen DisplayObject.mouseX i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Använd egenskapen DisplayObject.mouseX i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Använd egenskapen DisplayObject.mouseY i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Använd egenskapen DisplayObject.mouseY i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Den här funktionen stöds inte längre." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Den här funktionen stöds inte längre." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Använd egenskapen DisplayObject.name i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Använd egenskapen DisplayObject.parent i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Använd egenskapen DisplayObject.mask i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Använd egenskapen DisplayObject.visible i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Använd egenskapen DisplayObject.x i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Använd egenskapen DisplayObject.y i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Använd egenskapen DisplayObject.rotation i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Använd egenskapen DisplayObject.alpha i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Använd egenskapen DisplayObject.width i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Använd egenskapen DisplayObject.height i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Använd egenskapen ExternalInterface.available i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Använd konstanten ErrorEvent.ERROR i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Använd egenskapen Event.isDefaultPrevented i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Använd konstanten Event.ACTIVATE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Använd konstanten Event.ADDED i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Använd konstanten Event.CANCEL i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Använd konstanten Event.CHANGE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Använd konstanten Event.CLOSE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Använd konstanten Event.COMPLETE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Använd konstanten Event.CONNECT i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Använd konstanten Event.DEACTIVATE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Använd konstanten Event.ENTER_FRAME i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Använd konstanten Event.ID3 i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Använd konstanten Event.INIT i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Använd konstanten Event.MOUSE_LEAVE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Använd konstanten Event.OPEN i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Använd konstanten Event.REMOVED i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Använd konstanten Event.RENDER i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Använd konstanten Event.RESIZE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Använd konstanten Event.SCROLL i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Använd konstanten Event.SELECT i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Använd konstanten Event.SOUND_COMPLETE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Använd konstanten Event.TAB_CHILDREN_CHANGE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Använd konstanten Event.TAB_ENABLED_CHANGE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Använd konstanten Event.TAB_INDEX_CHANGE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Använd konstanten Event.UNLOAD i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Använd konstanten FocusEvent.FOCUS_IN i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Använd konstanten FocusEvent.FOCUS_OUT i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Använd konstanten FocusEvent.KEY_FOCUS_CHANGE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Använd konstanten FocusEvent.MOUSE_FOCUS_CHANGE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Använd metoden Graphics.beginBitmapFill() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Använd egenskapen BitmapFilter.quality i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Använd KeyboardEvent.charCode i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Använd KeyboardEvent.keyCode i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Mer information finns under klassen KeyboardEvent." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Mer information finns under KeyboardEvent.ctrlKey, KeyboardEvent.altKey och KeyboardEvent.shiftKey." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Använd konstanten PAGE_DOWN i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Använd konstanten PAGE_UP i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Använd konstanten DELETE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Använd konstanten CAPS_LOCK i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Använd någon av konstanterna NUMPAD_0 -> NUMPAD_9 i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Använd egenskapen InteractiveObject.focusRect i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Använd egenskapen InteractiveObject.contextMenu i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Använd egenskapen KeyboardEvent.charCode i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Använd egenskapen KeyboardEvent.keyCode i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Använd egenskapen Loader.contentLoaderInfo i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Den här funktionen stöds inte längre." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Den här funktionen stöds inte längre." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Använd egenskapen LoaderInfo.loaderURL i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Använd egenskapen LocalConnection.domain i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Använd egenskapen MenuEvent.contextMenuOwner i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Använd metoden Microphone.getMicrophone() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Om MovieClip-underklassens namn är A använder du var mc= new A(); addChild(mc). Mer information finns under klassen DisplayObjectContainer." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Använd var mc= new MovieClip(); addChild(mc). Mer information finns under klassen DisplayObjectContainer." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Använd var tf= new TextField(); addChild(mc). Mer information finns under klassen DisplayObjectContainer." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Använd Container.removeChild(childName). Mer information finns under klassen DisplayObjectContainer." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Använd var l = new Loader(); addChild(l); l.load(new URLRequest(\"din url\"));. Mer information finns under klasserna Loader och DisplayObjectContainer." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Använd DisplayObjectContainer.removeChild(childName) i stället. Mer information finns under klassen DisplayObjectContainer." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Använd DisplayObjectContainer.removeChild(childName) i stället. Mer information finns under klassen DisplayObjectContainer." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Använd DisplayObjectContainer.parent.getChildIndex i stället. Mer information finns under klassen DisplayObjectContainer, som utökas av MovieClip." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Använd DisplayObjectContainer.parent.setChildIndex i stället. Mer information finns under klassen DisplayObjectContainer, som utökas av MovieClip." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Använd DisplayObjectContainer.getChildAt i stället. Mer information finns under klassen DisplayObjectContainer, som utökas av MovieClip." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Använd DisplayObjectContainer.numChildren i stället. DisplayObjectContainer.addChild lägger alltid till det nya underordnade objektet i indexet DisplayObjectContainer.numChildren." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Mer information finns under DisplayObject.addChild." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Mer information finns under LoaderInfo.bytesLoaded och klassen Loader." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Mer information finns under LoaderInfo.bytesTotal och klassen Loader." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Motsvarande funktionalitet beskrivs under flash.net.URLLoader.  Paketet flash.net innehåller också paketnivåfunktionerna navigateToURL() och sendToURL()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Mer information finns under LoaderInfo.url och klassen Loader." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Mer information finns under LoaderInfo.url och klassen Loader." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Använd egenskapen MovieClip.mask i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Mer information finns under LoaderInfo.swfVersion och klassen Loader." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Använd egenskapen MovieClip.currentFrame i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Använd egenskapen MovieClip.framesLoaded i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Använd egenskapen MovieClip.totalFrames i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Mer information finns under displayObjectInstance.root." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Mer information finns under displayObjectInstance.root." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Använd den statiska egenskapen flash.media.SoundMixer.bufferTime i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Mer information finns under klassen Graphics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Använd egenskapen NetStream.bufferTime i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Använd egenskapen NetStream.currentFPS i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Använd egenskapen NetStream.videoCodec i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Använd egenskapen NetStream.audioCodec i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Använd egenskapen ProductManager.isInstalled i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Använd egenskapen ProductManager.installedVersion i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Använd egenskapen ProductManager.isRunning i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Använd metoden Point.add() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Använd egenskapen Proxy.deleteDescendants i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Använd metoden heapDump() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Använd egenskapen ProgressEvent.bytesLoaded i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Använd egenskapen ProgressEvent.bytesTotal i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Använd egenskapen Rectangle.isEmpty i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Använd egenskapen SoundTransform.pan i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Använd egenskapen Socket.bytesAvailable i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Använd egenskapen SharedObject.size i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Använd egenskapen SharedObject.fps i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Detta stöds inte längre." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Använd metoden Sprite.constructChildren() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Använd metoden Sprite.dropTarget i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Använd egenskapen Stage.focus i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Använd egenskapen Stage.focus i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Använd egenskapen Stage.showDefaultContextMenu i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Använd egenskapen StyleSheet.styleNames i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Använd en förekomst av URLLoader för att läsa in StyleSheet-data och skicka sedan data från inläsaren till metoden StyleSheet.parseCSS. Mer information finns under klasserna URLLoader och EventDispatcher." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Använd en förekomst av URLLoader för att läsa in StyleSheet-data och skicka sedan data från inläsaren till metoden StyleSheet.parseCSS. Mer information finns under klasserna URLLoader och EventDispatcher." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Använd en förekomst av URLLoader för att läsa in StyleSheet-data och skicka sedan data från inläsaren till metoden StyleSheet.parseCSS. Mer information finns under klasserna URLLoader och EventDispatcher." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Använd en förekomst av URLLoader för att läsa in StyleSheet-data och skicka sedan data från inläsaren till metoden StyleSheet.parseCSS. Mer information finns under klasserna URLLoader och EventDispatcher." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Använd en förekomst av URLLoader för att läsa in StyleSheet-data och skicka sedan data från inläsaren till metoden StyleSheet.parseCSS. Mer information finns under klasserna URLLoader och EventDispatcher." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Använd egenskapen IME.enabled i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Använd egenskapen IME.enabled i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Använd egenskapen IME.instance i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Använd egenskapen IME.conversionMode i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Använd egenskapen IME.conversionMode i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Använd egenskapen System.vmVersion i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Använd egenskapen SWFLoaderInfo.swfVersion i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Använd egenskapen SWFLoaderInfo.actionScriptVersion i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Använd egenskapen TextField.defaultTextFormat i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Använd egenskapen TextField.defaultTextFormat i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Använd DisplayObjectContainer.parent.getChildIndex i stället. Mer information finns under klassen DisplayObjectContainer, som utökas av MovieClip." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Använd DisplayObjectContainer.parent.setChildIndex i stället. Mer information finns under klassen DisplayObjectContainer, som utökas av MovieClip." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Använd DisplayObjectContainer.getChildAt i stället. Mer information finns under klassen DisplayObjectContainer, som utökas av MovieClip." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Använd DisplayObjectContainer.numChildren i stället.  DisplayObjectContainer.addChild lägger alltid till det nya underordnade objektet i indexet DisplayObjectContainer.numChildren." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Använd metoden TextField.replaceSelectedText() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Använd metoden TextField.getLineIndexOfChar() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Använd egenskapen TextField.selectionBeginIndex i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Använd egenskapen TextField.selectionEndIndex i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Använd egenskapen TextField.caretIndex i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Använd metoden Font.enumerateFonts() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Använd egenskapen TextField.maxScrollV i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Använd egenskapen TextField.scrollH i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Använd egenskapen TextField.maxScrollH i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Använd egenskapen TextField.defaultTextFormat i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Skapa ett tillfälligt TextField och använd TextField.getLineMetrics i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Använd egenskapen TextSnapshot.charCount i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Använd metoden navigateToURL() i paketet flash.net i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Använd metoden sendToURL() i paketet flash.net i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Använd egenskapen URLLoader.dataFormat i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Använd egenskapen URLStream.bytesAvailable i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Den här egenskapen stöds inte längre." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Använd egenskapen URLRequest.applicationDomain i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Lägg till begäranrubriker genom att ställa in egenskapen URLRequest.requestHeaders på en array med URLRequestHeader-objekt." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Läs in XML-filen med en förekomst av URLLoader och skicka URLLoaders-data till XMLDocuments-konstruktorn. Mer information finns under klasserna URLLoader och EventDispatcher." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Använd metoden sendToURL() i paketet flash.net i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Ställ in ett URLRequest-objekts postData-egenskap och använd den med ett URLLoader-objekt för att läsa in XML-filen.  Skicka URLLoaders-data till XMLDocuments-konstruktorn. Mer information finns under klasserna URLLoader, URLRequest och EventDispatcher." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Läs in XML-filen med en förekomst av URLLoader och skicka URLLoaders-data till XMLDocuments-konstruktorn. Mer information finns under klasserna URLLoader och EventDispatcher." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Lägg till begäranrubriker genom att ställa in egenskapen URLRequest.requestHeaders på en array med URLRequestHeader-objekt." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Mer information finns under URLLoader.bytesLoaded och klassen URLLoader." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Mer information finns under URLLoader.bytesTotal och klassen URLLoader." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Läs in XML-filen med en förekomst av URLLoader och skicka sedan inläsarens data till metoden StyleSheet.parseCSS. Mer information finns under klasserna URLLoader och EventDispatcher." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Använd egenskapen URLRequest.contentType i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Kontrollera om XMLDocument-konstruktorn eller metoden XMLDocument.parseXML har gett några undantag i stället. Mer information finns under XMLDocument." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Button, "Namnet på klassen Button har ändrats till SimpleButton." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Container, "Namnet på klassen Container har ändrats till DisplayObjectContainer." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Image, "Namnet på klassen Image har ändrats till BitmapData." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "Namnet på klassen ImageFilter har ändrats till BitmapFilter." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "Namnet på klassen ImageSprite har ändrats till Bitmap." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "Namnet på klassen ImageLoaderInfo har ändrats till BitmapLoaderInfo." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "Namnet på klassen ImeEvent har ändrats till IMEEvent." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Key, "Namnet på klassen Key har ändrats till Keyboard." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "Namnet på klassen LineMetrics har ändrats till TextLineMetrics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Mer information finns under klassen URLVariables, egenskaperna URLRequest.urlVariables och URLRequest.postData, samt egenskapen URLLoader.dataFormat." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "Namnet på klassen MenuEvent har ändrats till ContextMenuEvent." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "Namnet på klassen SystemCapabilities har ändrats till Capabilities." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Använd egenskapen TextField.getLineMetrics i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Button, "Namnet på klassen Button har ändrats till SimpleButton." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Container, "Namnet på klassen Container har ändrats till DisplayObjectContainer." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Image, "Namnet på klassen Image har ändrats till BitmapData." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "Namnet på klassen ImageFilter har ändrats till BitmapFilter." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "Namnet på klassen ImageSprite har ändrats till Bitmap." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "Namnet på klassen ImageLoaderInfo har ändrats till BitmapLoaderInfo." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "Namnet på klassen ImeEvent har ändrats till IMEEvent." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Key, "Namnet på klassen Key har ändrats till Keyboard." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "Namnet på klassen LineMetrics har ändrats till TextLineMetrics." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Mer information finns under klassen URLVariables, egenskaperna URLRequest.urlVariables och URLRequest.postData, samt egenskapen URLLoader.dataFormat." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "Namnet på klassen MenuEvent har ändrats till ContextMenuEvent." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "Namnet på klassen SystemCapabilities har ändrats till Capabilities." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Använd egenskapen TextField.getLineMetrics i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Mer information finns i hjälpen för klassen Proxy, som har liknande funktionalitet." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Använd metoden XMLUI.getProperty i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Använd metoden XMLUI.setProperty i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Använd egenskapen DisplayObject.accessibilityProperties i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Använd egenskapen DisplayObject.scale9Grid i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Använd metoden Graphics.drawOval i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Använd egenskapen NetConnection.connected i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Använd egenskapen Socket.connected i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Använd egenskapen URLStream.connected i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Använd egenskapen SyncEvent.changeList i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Använd egenskapen TextField.scrollV i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Använd egenskapen TextField.bottomScrollV i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Använd konstanten BitmapDataChannel.RED i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Använd konstanten BitmapDataChannel.GREEN i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Använd konstanten BitmapDataChannel.BLUE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Använd konstanten BitmapDataChannel.ALPHA i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Använd operatorn is i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Använd metoden flash.system.Security.showSettings i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Använd egenskapen System.useCodePage i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Använd klassen flash.events.EventDispatcher i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Använd den statiska egenskapen flash.media.SoundMixer.bufferTime i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Skapa i stället en ny förekomst av bitmappsbibliotekets symbolklass, till exempel new myBitmapName()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Mer information finns under Loader.load()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "Klassen MovieClipLoader har ersatts av klassen flash.display.Loader." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "Klassen MovieClipLoader har ersatts av klassen flash.display.Loader." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Mer information finns under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Mer information finns under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Använd konstanten flash.system.IMEConversionMode.ALPHANUMERIC_FULL i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Använd konstanten flash.system.IMEConversionMode.ALPHANUMERIC_HALF i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Använd konstanten flash.system.IMEConversionMode.CHINESE i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Använd konstanten flash.system.IMEConversionMode.JAPANESE_HIRAGANA i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Använd konstanten flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Använd konstanten flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Använd konstanten flash.system.IMEConversionMode.KOREAN i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Använd konstanten flash.system.IMEConversionMode.UNKNOWN i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Mer information finns under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Mer information finns under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onCancel, "Händelsehanteraren onCancel aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener (cancel, onCancel)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Det finns ingen direkt ersättning. Metoden willTrigger() kan användas för att avgöra om några avlyssnare har registrerats." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onIMEComposition, "Händelsehanteraren onIMEComposition aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener (imeComposition, handlerName)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Mer information finns under LoaderInfo.url och klassen Loader." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Använd metoden getFullYear() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Använd metoden setFullYear() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Använd metoden getUTCFullYear() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Använd egenskapen rate i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Selection, "Klassen Selection har tagits bort. Mer information finns under metoden addEventListener för den klass du vill ha markeringsinformation från." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Selection, "Klassen Selection har tagits bort. Mer information finns under metoden addEventListener för den klass du vill ha markeringsinformation från." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Använd egenskapen gain i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Färgvärden kan tilldelas direkt med ColorTransform-klassens konstruktor eller egenskaper." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Färgvärden kan tilldelas direkt med ColorTransform-klassens konstruktor eller egenskaper." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Mer information finns under de fokusrelaterade egenskaperna i klassen flash.display.InteractiveObject." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Mer information finns i hjälpen för metoden flash.display.Graphics.beginBitmapFill." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Mer information finns i hjälpen för metoden flash.display.DisplayObject.hitTestObject()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Mer information finns i hjälpen för metoden addChild()." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Använd metoden load() i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Använd flash.media.SoundChannel.leftPeak och flash.media.SoundChannel.rightPeak för att övervaka och styra en ljudkanals amplitud." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Använd egenskapen soundTransform i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Använd egenskapen SoundTransform.pan i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Använd egenskapen SoundTransform.pan i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Använd egenskapen bytesLoaded i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Använd egenskapen bytesTotal i stället." );
        warningConstantsSV[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Ineffektiv användning av += i ett TextField." );
        warningConstantsSV[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Det går flera gånger långsammare att lägga till text i ett TextField med += än med metoden TextField.appendText()." );
        warningConstantsSV[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Parenteser kanske saknas." );
        warningConstantsSV[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Ett funktionsvärde användes där typen %s förväntades.  Parentesen () kanske saknas efter den här funktionsreferensen." );
        warningConstantsSV[index++] = new AscWarning(kWarning_InstanceOfChanges, "Använd operatorn instanceof." );
        warningConstantsSV[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "Operatorn instanceof har tagits bort, använd operatorn is i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "Händelsehanteraren allowDomain() är nu en standardmetod i stället för en händelse-callback. Mer information finns under den nya metoden LocalConnection.allowDomain." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "Händelsehanteraren allowInsecureDomain() är nu en standardmetod i stället för en händelse-callback. Mer information finns under den nya metoden LocalConnection.allowInsecureDomain." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_call, "Metoden global.call() stöds inte längre." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_Color, "Klassen Color har tagits bort. Använd klassen flash.geom.ColorTransform om du vill ha motsvarande funktionalitet." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Color, "Klassen Color har tagits bort. Använd klassen flash.geom.ColorTransform om du vill ha motsvarande funktionalitet." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "I SWF-filer för ActionScript 3.0 används alltid exakt domänmatchning." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp_capabilities, "Namnet på klassen capabilities har ändrats till Capabilities." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_capabilities, "Namnet på klassen capabilities har ändrats till Capabilities." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Mer information finns under addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Mer information finns under removeEventListener (eventName, listener, useCapture)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onComplete, "Händelsehanteraren onComplete aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('complete', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onHTTPError, "Händelsehanteraren onHTTPError aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('httpError', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onIOError, "Händelsehanteraren onIOError aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('ioError', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onProgress, "Händelsehanteraren onProgress aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('progress', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onSecurityError, "Händelsehanteraren onSecurityError aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('securityError', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Event_onOpen, "Händelsehanteraren onOpen aktiveras inte automatiskt av Flash Player vid körning i ActionScript 3.0.  Du måste först registrera hanteraren för händelsen med addEventListener ('open', callback_handler)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Möjlig användning av klassen XML från ActionScript 2.0." );
        warningConstantsSV[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Migreringsproblem: Namnet på ActionScript 2.0-klassen XML har ändrats till XMLDocument." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadDateCast, "Ogiltig Date-typbestämning." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) fungerar på samma sätt som new Date().toString(). Om du vill byta ett värde till typen Date använder du \"x as Date\" i stället för Date(x)." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ImportHidesClass, "Om ett paket med samma namn som den nuvarande klassen importeras, döljs klassidentifieraren i det här omfånget." );
        warningConstantsSV[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Om ett paket med samma namn som den nuvarande klassen importeras, döljs klassidentifieraren i det här omfånget." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Mer än ett argument har samma namn." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Mer än ett argument har namnet '%s'.  Referenser till det argumentet tolkas alltid som det sista." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Använd metoden Rectangle.containsRect i stället." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_eval, "Den här funktionaliteten har tagits bort." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Den här funktionaliteten har ersatts av egenskapen flash.system.Capabilities.version." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Den här funktionaliteten har ersatts av egenskapen flash.display.MovieClip.framesLoaded." );
        warningConstantsSV[index++] = new AscWarning(kUnsupportedProp__global, "Egenskapen _global har tagits bort.  Använd en statisk medlem av en klass om du vill ha motsvarande funktionalitet." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadBoolAssignment, "Ett icke-booleskt värde användes där ett booleskt värde förväntades." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "%s användes där ett booleskt värde förväntades.  Uttrycket kommer att typomvandlas till Boolean." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadES3TypeProp, "Okänd egenskap." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s är inte en egenskap som känns igen av den dynamiska klassen %s." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Okänd metod." );
        warningConstantsSV[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s är inte en metod som känns igen av den dynamiska klassen %s." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Duplicerad variabeldefinition." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Duplicerad variabeldefinition." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Definitionsnamnet är samma som namnet på ett importerat paket.  Okvalificerade referenser till det namnet tolkas som paketet och inte som definitionen." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Definitionsnamnet är samma som namnet på ett importerat paket.  Okvalificerade referenser till det namnet tolkas som paketet och inte som definitionen." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Möjligt försök att ta bort en fast egenskap." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "Den deklarerade egenskapen %s kan inte tas bort. Frigör associerat minne genom att ställa in värdet på null." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Deprecated, "Det går inte att använda en funktion som har fasats ut." );
        warningConstantsSV[index++] = new AscWarning(kWarning_Deprecated_specific, "%s har fasats ut." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DeprecatedMessage, "Det går inte att använda en funktion som har fasats ut." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsSV[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Det går inte att använda en funktion som har fasats ut." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "%s har fasats ut.  Använd %s istället." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DeprecatedSince, "Det går inte att använda en funktion som har fasats ut." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "%s fasades ut %s. Använd %s istället." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Det går inte att använda en funktion som har fasats ut." );
        warningConstantsSV[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "%s fasades ut %s." );
   }

   static final AscWarning[] warningConstantsTR= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsTR() 
   {
      int index=0;
        warningConstantsTR[index++] = new AscWarning(kWarning_NoTypeDecl, "Eksik tür bildirimi." );
        warningConstantsTR[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' hiçbir tür bildirimine sahip değildir." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Tanımlanmamış ile mantıksız karşılaştırma.  Yalnızca türsüz değişkenler (veya * türündeki değişkenler) tanımlanmamış olabilir." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "%s türündeki değişkenler tanımlanmamış olamaz. Tanımlanmamış değer, karşılaştırmadan önce %s öğesine dayatılan tür olacaktır." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "Yeni ifadede kullanılan işlev bir değer döndürür.  Sonuç, işlevin yeni bir hali yerine işlevin döndürdüğü olacaktır." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Taşıma konusu: Yeni %s sonucu bu işlevin yeni bir örneği değil %s dönüş değeri olacaktır." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Hiçbir değişkeni olmayan Boolean(), ActionScript 3.0’da false döndürür.  Boolean(), ActionScript 2.0’de tanımsız döndürürdü." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Değişkensiz Boolean() kullanımı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_NumberFromStringChanges, "ActionScript 3.0’te beyaz boşluk yok sayılır ve \" 0 döndürür. ActionScript 2.0’de parametre \" ise veya beyaz boşluk içeriyorsa, Number() NaN döndürür." );
        warningConstantsTR[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Taşıma konusu: Number('') işlevi boş bir dizgi değişkeni ile çağrıldığında, ActionScript 3.0’te 0 ve ActionScript 2.0’de NaN döndürür." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString() formatı değişti." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Taşıma konusu: Array.toString() boş ve tanımsız öğe işlemesi değişti." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Desteklenmeyen ActionScript 2.0 özelliği." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Taşıma konusu: %s özelliği artık desteklenmiyor.  %s." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Desteklenmeyen ActionScript 2.0 işlevi." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Taşıma konusu: %s yöntemi artık desteklenmiyor.  %s." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve artık desteklenmiyor." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Taşıma konusu: __resolve artık desteklenmiyor.  Benzer işlevsellik için yeni Proxy sınıfını kullanın." );
        warningConstantsTR[index++] = new AscWarning(kWarning_LevelNotSupported, "_level artık desteklenmiyor. Daha fazla bilgi için, bkz. flash.display paketi." );
        warningConstantsTR[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Taşıma konusu: _level artık desteklenmiyor. Daha fazla bilgi için, bkz. flash.display package." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ClassIsSealed, "Sınıf mühürlü.  Dinamik olarak eklenmiş üyelere sahip olamaz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Taşıma konusu: %s bir dinamik sınıf değildir.  Örneklerin dinamik olarak eklenmiş üyeleri olamaz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Anahtar kelime için kapsamda değişiklik.  Bir sınıfın örneğinden çıkarılan sınıf yöntemleri bunu her zaman o örneğe geri çözer.  ActionScript 2.0’de yöntemin nereden çağrıldığına bağlı olarak bu dinamik olarak aranır." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Taşıma konusu: Anahtar kelime için kapsamda değişiklik sonucunda %s yöntemi ActionScript 3.0’te farklı davranır. Daha fazla bilgi için, bkz. 1083 uyarı girişi." );
        warningConstantsTR[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Eksik ad alanı bildirimi (örneğin değişken genel, özel vb. olarak tanımlanmamış)." );
        warningConstantsTR[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s varsayılan ad alanına dahil edilecektir: %s dahili.  Bu paket dışında görünür olmayacaktır." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 bir nesnenin \"for x in target\" ifadesi içindeki özelliklerini rastgele sırayla adımlar." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Taşıma konusu: ActionScript 3.0 bir nesnenin \"for x in target\" ifadesi içindeki özelliklerini rastgele sırayla adımlar." );
        warningConstantsTR[index++] = new AscWarning(kWarning_InternalError, "Derleyicide dahili hata oluştu." );
        warningConstantsTR[index++] = new AscWarning(kWarning_InternalError_specific, "Hata kodu: %s." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler bir dinleyici olarak eklenmedi." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Taşıma konusu: %s" );
        warningConstantsTR[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Negatif değer uint veri türüne atandığında büyük bir pozitif değer haline gelecektir." );
        warningConstantsTR[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Bir uint (negatif olmayan) değer beklenirken negatif değer kullanıldı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadNullComparision, "Boş ile mantıksız karşılaştırma." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Boş ile mantıksal olmayan karşılaştırma.  %s türündeki değişkenler boş olamazlar." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadNaNComparision, "NaN ile mantıksal olmayan karşılaştırma. NaN içeren her türlü karşılaştırma işlemi false olarak değerlendirecektir, çünkü NaN != NaN." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "NaN ile mantıksal olmayan karşılaştırma.  İfade her zaman false olarak değerlendirilir." );
        warningConstantsTR[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Koşullu içinde atama." );
        warningConstantsTR[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Koşullu içinde atama.  =?yerine ==demek mi istediniz?" );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadNullAssignment, "İmkansız boş atama." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "%s değeri beklendiğinde boş kullanıldı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_NoConstructor, "Eksik yapıcı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_NoConstructor_specific, "%s sınıfı için hiçbir yapıcı işlevi belirlenmedi." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ConstNotInitialized, "Sabit başlatılmadı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "Sabit başlatılmadı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadArrayCast, "Muhtemelen geçersiz Dizi dağıtım işlemi." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) yeni Array(x) ile aynı şekilde davranır.  Array türü için değer dağıtırken, Array(x) yerine Array olarak x ifadesini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "super() ifadesi yapıcı içerisinde çağrılmadı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "super() ifadesi bu yapıcıya girilmeden önce çalıştırılacaktır.  Çalıştırılırken açık halde kontrol etmek istiyorsanız, yapıcı içerisinde super() öğesine çağrı ekleyin." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_version, "Yerine, Capabilities. sürümünü kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Daha fazla bilgi için, bkz. InteractiveObjectfocusRect." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Highquality, "Daha fazla bilgi için, bkz. Stage.quality." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Daha fazla bilgi için, bkz. Stage.quality." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Daha fazla bilgi için, bkz. Stage.quality." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Quality, "Daha fazla bilgi için, bkz. Stage.quality." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Yerine, statik özellikli flash.media.SoundMixer.bufferTime kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Bu işlevsellik artık desteklenmiyor." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Daha fazla bilgi için, bkz. LoaderInfo.url." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Bu işlevsellik artık desteklenmiyor." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_NewLine, "Yenisatır için '\n' kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Daha fazla bilgi için, bkz. textField.maxScroll." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Level, "Düzeyler kavramı ActionScript 3.0’da mevcut değildir, bunun yerine görüntüleme listesine doğrudan erişim sağlanır. Ayrıntılar için, bkz. flash.display paketi." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Parent, "Yerine, üst özelliği kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Root, "Bu özellik kaldırıldı. En yakın eşdeğer Stage'dir ve ActionScript 3.0 görüntüleme listesinin kökü olarak görev yapar." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "İşlev değişkeni olarak arayanı bildirmeyi deneyin." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Bu işlevsellik artık desteklenmiyor." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Yerine, üst özelliği kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Bu işlevsellik artık desteklenmiyor." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Daha fazla bilgi için, bkz. Sprite.hitArea." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Scroll, "Daha fazla bilgi için, bkz. flash.text.TextField sınıfı, scrollH ve scrollV özellikleri." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Yollar yerine doğrudan MovieClip nesnelerini değişken olarak kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Daha fazla bilgi için, bkz. Video.videoHeight." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Daha fazla bilgi için, bkz. Video.videoHeight." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp__Proto__, "Daha fazla bilgi için, bkz. obsolete  __proto__." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Stage, "Daha fazla bilgi için, bkz. DisplayObject.stage." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Yerine, flash.net paketi içinde registerClass() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_random, "Yerine, Math.random() kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_chr, "Yerine, String.fromCharCode() kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Yerine, String.fromCharCode() kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ord, "Yerine, String.charCodeAt() kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_mbord, "Yerine, String.charCodeAt() kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_substring, "Yerine, String.substr yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Yerine, String.substr yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_length, "Yerine, değişkenin uzunluk özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_mblength, "Yerine, değişkenin uzunluk özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Daha fazla bilgi için ASnative’de yapılan değişikliklere bakın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Özellikleri, nokta (.) notasyonunu kullanarak doğrudan örnek üzerinde ayarlayabilirsiniz." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Yerine nokta (.) notasyonunu kullanarak doğrudan özelliklere erişin." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Özellikleri, nokta (.) notasyonunu kullanarak doğrudan örnek üzerinde ayarlayabilirsiniz." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Daha fazla bilgi için bkz., TextEvent.LINK and addEventListener()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Bu yöntem flash.utils paketine taşındı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Yeni MovieClip sınıf yapıcı işleviyle değiştirildi." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_fscommand, "flash.system paketine taşındı. Ayrıca bkz. flash.external. Javascript/ActionScript iletişimi için HariciArabirim sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_getURL, "Eşdeğer işlevsellik için, bkz. flash.net.URLLoader.  flash.net paketinde aynı zamanda paket düzeyinde işlevler olan navigateToURL() ve sendToURL() bulunmaktadır." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Daha fazla bilgi için, bkz. MovieClip.gotoAndPlay()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Daha fazla bilgi için, bkz. MovieClip.gotoAndStop()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_play, "Daha fazla bilgi için, bkz. MovieClip.play()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_print, "Daha fazla bilgi için, bkz. PrintJob.start()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Daha fazla bilgi için, bkz. PrintJob." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Daha fazla bilgi için, bkz. PrintJob." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_printNum, "Daha fazla bilgi için, bkz. PrintJob." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Container.removeChild(childName) kullanın. Daha fazla bilgi için, bkz. DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_setInterval, "flash.utils paketine taşındı.  Yerine Timer sınıfını kullanmayı düşünün." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Daha fazla bilgi için, bkz. MovieClip.nextFrame()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Daha fazla bilgi için, bkz. MovieClip.startDrag()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_stop, "Daha fazla bilgi için, bkz. MovieClip.stop()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Daha fazla bilgi için, bkz. Sound.stopAllSounds()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Daha fazla bilgi için, bkz. MovieClip.stopDrag()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Yerine nokta (.) operatörünü veya with ifadesini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Daha fazla bilgi için bkz. DisplayObject.stage ve Stage.quality." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Yerine, DisplayObjectContainer.removeChild(childName) kullanın. Daha fazla bilgi için, bkz. DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Yerine, DisplayObjectContainer.removeChild(childName) kullanın. Daha fazla bilgi için, bkz. DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Bu işlev artık global işlev değil, ancak TimerEvent, MouseEvent ve KeyboardEvent sınıfları için kullanılabilir bir yöntemdir." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Daha fazla bilgi için, bkz. Video.attachNetStream, Video.attachCamera." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Yükleme yapmak ve sonucu StyleSheet.parseCSS()’a göndermek için URLLoader sınıfını kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "ActionScript 3.0'da bütün sınıflar varsayılan olarak kaydedilir.  AMF kullanıyorsanız, daha fazla bilgi için, bkz. flash.utils.registerClassAlias()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Benzer işlevsellik için, erişimci özelliklerini (get/set işlevleri) veya flash.utils.Proxy sınıfını kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Benzer işlevsellik için, erişimci özelliklerini (get/set işlevleri) veya flash.utils.Proxy sınıfını kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Daha fazla bilgi için, bkz. MovieClip.loadMovie()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Daha fazla bilgi için, bkz. MovieClip.loadMovieNum()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Daha fazla bilgi için bkz. Loader.load()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Daha fazla bilgi için bkz. Loader.load()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Daha fazla bilgi için, bkz. addEventListener ( eventName, dinleyici, useCapture, öncelik)." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Daha fazla bilgi için, bkz. removeEventListener ( eventName, dinleyici, useCapture)." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Daha fazla bilgi için, bkz. addEventListener ( eventName, dinleyici, useCapture, öncelik)." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Daha fazla bilgi için, bkz. removeEventListener ( eventName, dinleyici, useCapture)." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Daha fazla bilgi için, bkz. addEventListener ( eventName, dinleyici, useCapture, öncelik)." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Daha fazla bilgi için, bkz. removeEventListener ( eventName, dinleyici, useCapture)." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Daha fazla bilgi için, bkz. addEventListener ( eventName, dinleyici, useCapture, öncelik)." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Daha fazla bilgi için, bkz. removeEventListener ( eventName, dinleyici, useCapture)." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Kütüphaneden ses oluşturmak için SWF sınıfını kullanın." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onStatus, "ActionScript 3.0’da, onStatus olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'status', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onID3, "ActionScript 3.0’da, onID3 olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'id3', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onLoad, "ActionScript 3.0’da, onLoad olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'load', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onSoundComplete, "ActionScript 3.0’da, onSoundComplete olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'soundComplete', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onSetFocus, "ActionScript 3.0’da, onSetFocus olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'focusIn', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onResize, "ActionScript 3.0’da, onResize olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'resize', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onChanged, "ActionScript 3.0’da, onChanged olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'change', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onKillFocus, "ActionScript 3.0’da, onKillFocus olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'focusOut', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onScroller, "ActionScript 3.0’da, onScroller olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'scroll', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onMouseDown, "ActionScript 3.0’da, onMouseDown olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'mouseDown', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onMouseUp, "ActionScript 3.0’da, onMouseUp olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'mouseUp', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onMouseMove, "ActionScript 3.0’da, onMouseMove olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'mouseMove', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onMouseWheel, "ActionScript 3.0’da, onMouseWheel olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'mouseWheel', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onKeyDown, "ActionScript 3.0’da, onKeyDown olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'keyDown', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onKeyUp, "ActionScript 3.0’da, onKeyUp olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'keyUp', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onData, "ActionScript 3.0’da, onData olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'data', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "ActionScript 3.0’da, onHTTPStatus olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'httpStatus', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onDragOut, "ActionScript 3.0’da, onDragOut olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'mouseOut', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onDragOver, "ActionScript 3.0’da, onDragOver olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'mouseOver', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onPress, "ActionScript 3.0’da, onPress olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'mouseDown', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onRelease, "ActionScript 3.0’da, onRelease olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'click', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "ActionScript 3.0’da, onReleaseOutside olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'mouseUp', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onRollOut, "ActionScript 3.0’da, onRollOut olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'mouseOut', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onRollOver, "ActionScript 3.0’da, onRollOver olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'mouseOver', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onActivity, "ActionScript 3.0’da, onActivity olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'activity', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onSelect, "ActionScript 3.0’da, onSelect olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'menuSelect', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onEnterFrame, "ActionScript 3.0’da, onEnterFrame, Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'enterFrame', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onUnload, "ActionScript 3.0’da, onUnload olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'unload', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onLoadComplete, "ActionScript 3.0’da, onLoadComplete, Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'load', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onLoadError, "ActionScript 3.0’da, onLoadError olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'error', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onLoadInit, "ActionScript 3.0’da, onLoadInit olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'init', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onLoadProgress, "ActionScript 3.0’da, onLoadProgress olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'progress', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onLoadStart, "ActionScript 3.0’da, onLoadStart, Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'start', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onClose, "ActionScript 3.0’da, onClose olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'close', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onConnect, "ActionScript 3.0’da, onConnect olay işleyicisi Flash Player tarafından otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'connect', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onXML, "ActionScript 3.0'da onXML Flash Player tarafından otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'xml', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Yerine, hasChildNodes özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "XMLEvent sınıfı kullanılamaz ve xml olayı artık gönderilemez. Dosya yüklemesi sırasında yalnızca veri olayı gönderilir." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "XMLDoc sınıfı XMLDocument olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Yerine, Accessibility.active özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Yerine, ActivityEvent.ACTIVITY sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Yerine, DisplayObjectContainer.parent.getChildIndex kullanın. MovieClip tarafından genişletilen DisplayObjectContainer sınıfı için yardıma bakın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Yerine, DisplayObjectContainer.parent.setChildIndex kullanın. MovieClip tarafından genişletilen DisplayObjectContainer sınıfı için yardıma bakın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Yerine, DisplayObjectContainer.getChildAt kullanın. MovieClip tarafından genişletilen DisplayObjectContainer sınıfı için yardıma bakın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Yerine, DisplayObjectContainer.numChildren kullanın. DisplayObjectContainer.addChild her zaman DisplayObjectContainer.numChildren dizinine yeni bir alt öğe ekler." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Yerine, ByteArray.bytesAvailable özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Yerine ByteArray.position özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Yerine ByteArray.position özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Yerine, Camera.getCamera() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Yerine, Camera.currentFPS özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Yerine, Camera.keyFrameInterval özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Yerine, Camera.loopback özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Yerine, ColorTransform.color özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Yerine, ColorTransform.color özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Yerine, Container.textSnapshot özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Yerine, ContextMenu.clone() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Yerine ContextMenu.forwardAndBack özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Yerine, ContextMenuItem.clone() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Yerine, CustomActions.actionsList özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Yerine, DataEvent.DATA sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Yerine, DisplayObject.scaleX özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Yerine, DisplayObject.scaleX özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Yerine, DisplayObject.scaleY özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Yerine, DisplayObject.scaleY özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Yerine, DisplayObject.mouseX özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Yerine, DisplayObject.mouseX özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Yerine, DisplayObject.mouseY özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Yerine, DisplayObject.mouseY özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Bu özellik artık desteklenmiyor." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Bu özellik artık desteklenmiyor." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Yerine, DisplayObject.name özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Yerine, DisplayObject.parent özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Yerine, DisplayObject.mask özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Yerine, DisplayObject.visible özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Yerine, DisplayObject.x özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Yerine, DisplayObject.y özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Yerine, DisplayObject.rotation özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Yerine, DisplayObject.alpha özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Yerine, DisplayObject.width özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Yerine, DisplayObject.height özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Yerine, ExternalInterface.available özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Yerine, ErrorEvent.ERROR sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Yerine, Event.isDefaultPrevented özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Yerine, Event.ACTIVATE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Yerine, Event.ADDED sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Yerine, Event.CANCEL sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Yerine, Event.CHANGE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Yerine, Event.CLOSE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Yerine, Event.COMPLETE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Yerine, Event.CONNECT sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Yerine, Event.DEACTIVATE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Yerine, Event.ENTER_FRAME sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Yerine, Event.ID3 sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Yerine, Event.INIT sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Yerine, Event.MOUSE_LEAVE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Yerine, Event.OPEN sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Yerine, Event.REMOVED sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Yerine, Event.RENDER sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Yerine, Event.RESIZE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Yerine, Event.SCROLL sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Yerine, Event.SELECT sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Yerine, Event.SOUND_COMPLETE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Yerine, Event.TAB_CHILDREN_CHANGE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Yerine, Event.TAB_ENABLED_CHANGE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Yerine, Event.TAB_INDEX_CHANGE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Yerine, Event.UNLOAD sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Yerine, FocusEvent.FOCUS_IN sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Yerine, FocusEvent.FOCUS_OUT sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Yerine, FocusEvent.KEY_FOCUS_CHANGE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Yerine, FocusEvent.MOUSE_FOCUS_CHANGE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Yerine, Graphics.beginBitmapFill() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Yerine, BitmapFilter.quality özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Yerine, KeyboardEvent.charCode kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Yerine, KeyboardEvent.keyCode kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Daha fazla bilgi için, bkz. KeyboardEvent." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Daha fazla bilgi için, bkz. KeyboardEvent.ctrlKey, KeyboardEvent.altKey ve KeyboardEvent.shiftKey." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Yerine, PAGE_DOWN sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Yerine, PAGE_UP sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Yerine, DELETE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Yerine, CAPS_LOCK sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Yerine, NUMPAD_0 -> NUMPAD_9 sabitlerinden birini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Yerine, InteractiveObject.focusRect özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Yerine, InteractiveObject.contextMenu özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Yerine, KeyboardEvent.charCode özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Yerine, KeyboardEvent.keyCode özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Yerine, Loader.contentLoaderInfo özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Bu özellik artık desteklenmiyor." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Bu özellik artık desteklenmiyor." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Yerine, LoaderInfo.loaderURL özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Yerine, LocalConnection.domain özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Yerine, MenuEvent.contextMenuOwner özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Yerine, Microphone.getMicrophone() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "MovieClip alt sınıf adı A ise var mc= new A(); addChild(mc) kullanın. Daha fazla bilgi için, bkz. DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "var mc= new MovieClip(); addChild(mc) kullanın. Daha fazla bilgi için, bkz. DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "var tf= new TextField(); addChild(mc) kullanın. Daha fazla bilgi için, bkz. DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Container.removeChild(childName) kullanın. Daha fazla bilgi için, bkz. DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\")) kullanın;. Daha fazla bilgi için, bkz. Loader ve DisplayObjectContainer sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Yerine, DisplayObjectContainer.removeChild(childName) kullanın. Daha fazla bilgi için, bkz. DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Yerine, DisplayObjectContainer.removeChild(childName) kullanın. Daha fazla bilgi için, bkz. DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Yerine, DisplayObjectContainer.parent.getChildIndex kullanın. Daha fazla bilgi için, bkz. MovieClip tarafından genişletilen DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Yerine, DisplayObjectContainer.parent.setChildIndex kullanın. Daha fazla bilgi için, bkz. MovieClip tarafından genişletilen DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Yerine, DisplayObjectContainer.getChildAt kullanın. Daha fazla bilgi için, bkz. MovieClip tarafından genişletilen DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Yerine, DisplayObjectContainer.numChildren kullanın. DisplayObjectContainer.addChild her zaman DisplayObjectContainer.numChildren dizinine yeni bir alt öğe ekler." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Daha fazla bilgi için, bkz. DisplayObject.addChild." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Daha fazla bilgi için, bkz. LoaderInfo.bytesLoaded ve Loader sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Daha fazla bilgi için, bkz. LoaderInfo.bytesTotal ve Loader sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Eşdeğer işlevsellik için, bkz. flash.net.URLLoader.  flash.net paketinde aynı zamanda paket düzeyinde işlevler olan navigateToURL() ve sendToURL() bulunmaktadır." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Daha fazla bilgi için, bkz. LoaderInfo.url ve Loader sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Daha fazla bilgi için, bkz. LoaderInfo.url ve Loader sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Yerine, MovieClip.mask özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Daha fazla bilgi için, bkz. LoaderInfo.swfVersion ve Loader sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Yerine, MovieClip.currentFrame özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Yerine, MovieClip.framesLoaded özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Yerine, MovieClip.totalFrames özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Daha fazla bilgi için, bkz. displayObjectInstance.root." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Daha fazla bilgi için, bkz. displayObjectInstance.root." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Yerine, statik özellikli flash.media.SoundMixer.bufferTime kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Daha fazla bilgi için, bkz. Graphics sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Yerine, NetStream.bufferTime özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Yerine, NetStream.currentFPS özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Yerine, NetStream.videoCodec özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Yerine, NetStream.audioCodec özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Yerine, ProductManager.isInstalled özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Yerine, ProductManager.installedVersion özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Yerine, ProductManager.isRunning özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Yerine, Point.add() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Yerine, Proxy.deleteDescendants özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Yerine, heapDump() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Yerine, ProgressEvent.bytesLoaded özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Yerine, ProgressEvent.bytesTotal özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Yerine, Rectangle.isEmpty özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Yerine, SoundTransform.pan özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Yerine, Sockect.bytesAvailable özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Yerine, SharedObject.size özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Yerine, SharedObject.fps özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Bu artık desteklenmiyor." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Yerine, Sprite.constructChildren() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Yerine, Sprite.dropTarget özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Yerine Stage.focus özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Yerine Stage.focus özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Yerine Stage.showDefaultContextMenu özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Yerine StyleSheet.styleNames özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "StyleSheet verilerini yüklemek için bir URLLoader örneği kullanın ve yükleyici verilerini to StyleSheet.parseCSS yöntemine aktarın. Daha fazla bilgi için, bkz. URLLoader ve EventDispatcher sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "StyleSheet verilerini yüklemek için bir URLLoader örneği kullanın ve yükleyici verilerini to StyleSheet.parseCSS yöntemine aktarın. Daha fazla bilgi için, bkz. URLLoader ve EventDispatcher sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "StyleSheet verilerini yüklemek için bir URLLoader örneği kullanın ve yükleyici verilerini to StyleSheet.parseCSS yöntemine aktarın. Daha fazla bilgi için, bkz. URLLoader ve EventDispatcher sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "StyleSheet verilerini yüklemek için bir URLLoader örneği kullanın ve yükleyici verilerini to StyleSheet.parseCSS yöntemine aktarın. Daha fazla bilgi için, bkz. URLLoader ve EventDispatcher sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "StyleSheet verilerini yüklemek için bir URLLoader örneği kullanın ve yükleyici verilerini to StyleSheet.parseCSS yöntemine aktarın. Daha fazla bilgi için, bkz. URLLoader ve EventDispatcher sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Yerine, IME.enabled özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Yerine, IME.enabled özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Yerine, IME.instance özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Yerine IME.conversionMode özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Yerine IME.conversionMode özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Yerine System.vmVersion özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Yerine SWFLoaderInfo.swfVersion özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Yerine, SWFLoaderInfo.actionScriptVersion özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Yerine TextField.defaultTextFormat özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Yerine TextField.defaultTextFormat özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Yerine, DisplayObjectContainer.parent.getChildIndex kullanın. Daha fazla bilgi için, bkz. MovieClip tarafından genişletilen DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Yerine, DisplayObjectContainer.parent.setChildIndex kullanın. Daha fazla bilgi için, bkz. MovieClip tarafından genişletilen DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Yerine, DisplayObjectContainer.getChildAt kullanın. Daha fazla bilgi için, bkz. MovieClip tarafından genişletilen DisplayObjectContainer sınıfı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Yerine, DisplayObjectContainer.numChildren kullanın.  DisplayObjectContainer.addChild her zaman DisplayObjectContainer.numChildren dizinine yeni bir alt öğe ekler." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Yerine, TextField.replaceSelectedText() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Yerine, TextField.getLineIndexOfChar() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Yerine, TextField.selectionBeginIndex özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Yerine, TextField.selectionEndIndex özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Yerine, TextField.caretIndex özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Yerine, Font.enumerateFonts() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Yerine, TextField.maxScrollV özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Yerine, TextField.ScrollH özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Yerine, TextField.maxScrollH özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Yerine, TextField.defaultTextFormat özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Geçici bir TextField oluşturun ve yerine, TextField.getLineMetrics kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Yerine, TextSnapshot.charCount özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Yerine, flash.net paketi içindeki navigateToURL() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Yerine, flash.net paketi içindeki sendToURL() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Yerine, URLLoader.dataFormat özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Yerine, URLStream.bytesAvailable özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Bu özellik artık desteklenmiyor." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Yerine, URLRequest.application.Domain özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "İstek başlıkları eklemek için, URLRequest.requestHeaders özelliğini URLRequestHeader nesnelerindeki bir diziye ayarlayın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "XML dosyasını yüklemek için bir URLLoader örneği kullanın ve URLLoaders verilerini XMLDocuments yapıcısına aktarın. Daha fazla bilgi için, bkz. URLLoader ve EventDispatcher sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Yerine, flash.net paketi içindeki sendToURL() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Bir URLRequest nesnesi postData özelliği ayarlayın ve bunu XML dosyasını yüklemek için URLLoader nesnesiyle birlikte kullanın.  URLLoaders verilerini XMLDocuments yapıcısına aktarın. Daha fazla bilgi için, bkz. URLLoader, URLRequest ve EventDispatcher sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "XML dosyasını yüklemek için bir URLLoader örneği kullanın ve URLLoaders verilerini XMLDocuments yapıcısına aktarın. Daha fazla bilgi için, bkz. URLLoader ve EventDispatcher sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "İstek başlıkları eklemek için, URLRequest.requestHeaders özelliğini URLRequestHeader nesnelerindeki bir diziye ayarlayın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Daha fazla bilgi için, bkz. URLLoader.bytesLoaded ve URLLoader sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Daha fazla bilgi için, bkz. URLLoader.bytesTotal ve URLLoader sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "XML dosyasını yüklemek için bir URLLoader örneği kullanın ve yükleyicilerin verilerini StyleSheet.parceCSS yöntemine aktarın. Daha fazla bilgi için, bkz. URLLoader ve EventDispatcher sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Yerine, URLRequest.contentType özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Yerine, XMLDocument yapıcısı veya XMLDocument.parseXML yöntemi tarafından ortaya atılan olası istisnaları kontrol edin. Daha fazla bilgi için, bkz. XMLDocument." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Button, "Button sınıfı SimpleButton olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Container, "Container sınıfı DisplayObjectContainer olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Image, "Image sınıfı BitmapData olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "ImageFilter sınıfı BitmapFilter olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "ImageSprite sınıfı Bitmap olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "ImageLoaderInfo sınıfı BitmapLoaderInfo olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "ImeEvent sınıfı IMEEvent olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Key, "Key sınıfı Keyboard olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "LineMetrics sınıfı TextLine Metrics olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Daha fazla bilgi için, bkz. URLVariables sınıfı; URLRequest.urlVariables ve URLRequest.postData özellikleri ve URLLoader.dataFormat özelliği." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "MenuEvent sınıfı ContextMenuEvent olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "SystemCapabilities sınıfı Capabilities olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Yerine TextField.getLineMetrics özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Button, "Button sınıfı SimpleButton olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Container, "Container sınıfı DisplayObjectContainer olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Image, "Image sınıfı BitmapData olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "ImageFilter sınıfı BitmapFilter olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "ImageSprite sınıfı Bitmap olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "ImageLoaderInfo sınıfı BitmapLoaderInfo olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "ImeEvent sınıfı IMEEvent olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Key, "Key sınıfı Keyboard olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "LineMetrics sınıfı TextLine Metrics olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Daha fazla bilgi için, bkz. URLVariables sınıfı; URLRequest.urlVariables ve URLRequest.postData özellikleri ve URLLoader.dataFormat özelliği." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "MenuEvent sınıfı ContextMenuEvent olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "SystemCapabilities sınıfı Capabilities olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Yerine TextField.getLineMetrics özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Daha fazla bilgi için, bkz. benzer işlevsellikler sunan Proxy sınıfı için yardım." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Yerine, XMLUI.getProperty yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Yerine XMLUI.setProperty yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Yerine DisplayObject.accessibilityProperties özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Yerine DisplayObject.scale9Grid özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Yerine, Graphics.drawOval yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Yerine, NetConnection.connected özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Yerine, Socket.connected özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Yerine, URLStream.connected özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Yerine SyncEvent.changeList özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Yerine, TextField.scrollV özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Yerine, TextField.bottomScrollV özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Yerine, BitmapDataChannel.RED sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Yerine, BitmapDataChannel.GREEN sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Yerine, BitmapDataChannel.BLUE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Yerine, BitmapDataChannel.ALPHA sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Yerine is operatörünü kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Yerine, flash.system.Security.showSettings yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Yerine, System.useCodePage özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Yerine, flash.events.EventDispatcher sınıfını kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Yerine, statik özellikli flash.media.SoundMixer.bufferTime kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Yerine, yeni bir Bitmap kütüphane sembolü sınıfı örneği oluşturun, örneğin yeni myBitmapName()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Daha fazla bilgi için bkz. Loader.load()." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "MovieClipLoader sınıfı, flash.display.Loader sınıfıyla değiştirildi." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "MovieClipLoader sınıfı, flash.display.Loader sınıfıyla değiştirildi." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Daha fazla bilgi için, bkz. addEventListener ( eventName, dinleyici, useCapture, öncelik)." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Daha fazla bilgi için, bkz. removeEventListener( eventName, dinleyici, useCapture)." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Yerine, flash.system.IMEConversionMode.ALPHANUMERIC_FULL sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Yerine, flash.system.IMEConversionMode.ALPHANUMERIC_HALF sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Yerine, flash.system.IMEConversionMode.CHINESE sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Yerine, flash.system.IMEConversionMode.JAPANESE_HIRAGANA sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Yerine, flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Yerine, flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Yerine, flash.system.IMEConversionMode.KOREAN sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Yerine, flash.system.IMEConversionMode.UNKNOWN sabitini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Daha fazla bilgi için, bkz. addEventListener ( eventName, dinleyici, useCapture, öncelik)." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Daha fazla bilgi için, bkz. removeEventListener( eventName, dinleyici, useCapture)." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onCancel, "ActionScript 3.0’da, onCancel olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için addEventListener ( cancel, onCancel) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Doğrudan değiştirme yoktur. Dinleyicilerin kaydedilip kaydedilmediğini söylemek için willTrigger() yöntemi kullanılabilir." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onIMEComposition, "ActionScript 3.0’da, onIMEComposition olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için önce addEventListener ( imeComposition, handlerName) kullanarak bu işleyiciyi kaydedin." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Daha fazla bilgi için, bkz. LoaderInfo.url ve Loader sınıfları." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Yerine, getFullYear() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Yerine, setFullYear() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Yerine, getUTCFullYear() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Yerine, hız özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Selection, "Selection sınıfı kaldırıldı. Daha fazla bilgi için, seçim bilgisini istediğiniz sınıfın addEventListener yöntemine bakın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Selection, "Selection sınıfı kaldırıldı. Daha fazla bilgi için, seçim bilgisini istediğiniz sınıfın addEventListener yöntemine bakın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Yerine, kazanç özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Renk değerleri, ColorTransform sınıfı yapıcısı veya özellikleri kullanılarak doğrudan atanabilir." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Renk değerleri, ColorTransform sınıfı yapıcısı veya özellikleri kullanılarak doğrudan atanabilir." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "flash.display.InteractiveObject sınıfının özellikleriyle ilgili odak için yardıma bakın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "flash.display.Graphics.beginBitmapFill yöntemi için yardıma bakın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "flash.display.DisplayObject.hitTestObject() yöntemi için yardıma bakın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "addChild() yöntemi için yardıma bakın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Yerine load() yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Bir ses kanalının genliğini izlemek ve kontrol etmek için  flash.media.SoundChannel.leftPeak ve flash.media.SoundChannel.rightPeak kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Yerine, soundTransform özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Yerine, SoundTransform.pan özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Yerine, SoundTransform.pan özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Yerine, bytesLoaded özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Yerine, bytesTotal özelliğini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Bir TextField üzerinde etkin olmayan += kullanımı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "+= kullanarak TextField’a metin eklemek çoğunlukla TextField.appendText() yöntemini kullanmaktan daha yavaştır." );
        warningConstantsTR[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Olası eksik parantezler." );
        warningConstantsTR[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "%s türü beklendiğinde işlev değeri kullanıldı.  Bu işlev referansından sonra muhtemelen parantezler () eksiktir." );
        warningConstantsTR[index++] = new AscWarning(kWarning_InstanceOfChanges, "Operatör örneğinin kullanılması." );
        warningConstantsTR[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "Operatör örneğine itiraz edildi, onun yerine is operatörünü kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "allowDomain() olay işleyicisi artık olay geri çağırma değil, standart bir yöntemdir. Daha fazla bilgi için, bkz. yeni LocalConnection.allowDomain yöntemi." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "allowInsecureDomain() olay işleyicisi artık olay geri çağırma değil, standart bir yöntemdir. Daha fazla bilgi için, bkz. LocalConnection.allowInsecureDomain yöntemi." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_call, "global call() yöntemi artık desteklenmiyor." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_Color, "Renk sınıfı kaldırıldı. Eşdeğer işlevsellik için flash.geom.ColorTransform sınıfını kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Color, "Renk sınıfı kaldırıldı. Eşdeğer işlevsellik için flash.geom.ColorTransform sınıfını kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF dosyaları her zaman tam etki alanı eşleşme kurallarını kullanır." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp_capabilities, "capabilities sınıfı Capabilities olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_capabilities, "capabilities sınıfı Capabilities olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Daha fazla bilgi için, bkz. addEventListener ( eventName, dinleyici, useCapture, öncelik)." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Daha fazla bilgi için, bkz. removeEventListener( eventName, dinleyici, useCapture)." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onComplete, "ActionScript 3.0’da, onComplete olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'complete', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onHTTPError, "ActionScript 3.0’da, onHTTPError olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'httpError', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onIOError, "ActionScript 3.0’da, onIOError olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'ioError', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onProgress, "ActionScript 3.0’da, onProgress olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'progress', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onSecurityError, "ActionScript 3.0’da, onSecurityError olay işleyicisi Flash Player tarafından çalıştırma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'securityError', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Event_onOpen, "ActionScript 3.0’da, onOpen olay işleyicisi Flash Player tarafından çalışma zamanında otomatik olarak tetiklenmez.  Olay için öncelikle addEventListener ( 'open', callback_handler) kullanarak bu işleyiciyi kaydetmelisiniz." );
        warningConstantsTR[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "ActionScript 2.0 XML sınıfının olası kullanımı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Taşıma konusu: ActionScript 2.0 XML sınıfı XMLDocument olarak yeniden adlandırıldı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadDateCast, "Geçersiz Tarih dağıtım işlemi." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) yeni Date().toString() ile aynı şekilde davranır. Date türüne bir değer dağıtmak için Date(x) yerine \"x as Date\" kullanın." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ImportHidesClass, "Geçerli sınıfla aynı adda bir paket içe aktarma, o sınıf kimliğini kapsam dahilinde gizler." );
        warningConstantsTR[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Geçerli sınıfla aynı adda bir paket içe aktarma, o sınıf kimliğini kapsam dahilinde gizler." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Birden fazla değişkenin adı aynı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "%s' adında birden fazla değişken belirlendi.  O değişkenle ilgili başvurular her zaman sonuncuya çözülecektir." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Yerine, Rectangle.containsRect yöntemini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_eval, "Bu işlevsellik kaldırıldı." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Bu işlevsellik flash.system.Capabilities.version özelliğiyle değiştirildi." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Bu işlevsellik flash.display.MovieClip.framesLoaded özelliğiyle değiştirildi." );
        warningConstantsTR[index++] = new AscWarning(kUnsupportedProp__global, "_global özelliği kaldırıldı.  Eşdeğer işlevsellik için, sınıfın statik bir üyesini kullanın." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadBoolAssignment, "Boolean değeri beklenirken, Non-Boolean değeri kullanıldı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "Boolean değeri beklenirken %s değeri kullanıldı.  İfade, Boolean’a dayatılmış tür olacaktır." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadES3TypeProp, "Bilinmeyen özellik." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s, %s dinamik sınıfının tanınmış bir özelliği değildir." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Bilinmeyen özellik." );
        warningConstantsTR[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s, %s dinamik sınıfının tanınmış bir yöntemi değildir." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Yinelenen değişken tanımı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Yinelenen değişken tanımı." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Tanım adı içe aktarılan bir paket adıyla aynıdır.  Bu adla ilgili nitelenmemiş başvurular pakete çözülecektir, tanıma değil." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Tanım adı içe aktarılan bir paket adıyla aynıdır.  Bu adla ilgili nitelenmemiş başvurular pakete çözülecektir, tanıma değil." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Sabit bir özelliği silme girişimi." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "%s bildirilen özelliği silinemiyor. İlişkilendirilmiş bellekte alan açmak için, değerini boş olarak ayarlayın." );
        warningConstantsTR[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "Empty statement." );
        warningConstantsTR[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "Empty statement found where block of code expected. Did you type ';' accidentally?" );
        warningConstantsTR[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsTR[index++] = new AscWarning(kWarning_Deprecated_specific, "'%s' has been deprecated." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsTR[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "'%s' has been deprecated.  Please use '%s'." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "'%s' has been deprecated since %s.  Please use '%s'." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsTR[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "'%s' has been deprecated since %s." );
   }

   static final AscWarning[] warningConstantsTW= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsTW() 
   {
      int index=0;
        warningConstantsTW[index++] = new AscWarning(kWarning_NoTypeDecl, "缺少類型宣告。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' 沒有類型宣告。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadUndefinedComparision, "與 undefined 的比較不合邏輯。僅不具類型的變數 (或是類型 * 的變數) 可以是未定義的。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "%s 類型的變數不能是未定義的。未定義的值在比較之前，會強制轉型成 %s。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "用於新運算式中的函數傳回一個值。結果會是函數傳回的內容，而不是該函數的新實體。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "移轉問題：新的 %s 結果會是 %s 的傳回值，而不是該函數的新實體。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "在 ActionScript 3.0 中，沒有引數的 Boolean() 會傳回 false。在 ActionScript 2.0 中，Boolean() 會傳回 undefined。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "使用沒有引數的 Boolean()。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NumberFromStringChanges, "在 ActionScript 3.0 中，空白會被忽略，而 '' 會傳回 0。在 ActionScript 2.0 中，Number() 會在參數為 '' 或包含空白時傳回 NaN。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "移轉問題：如果是用空字串引數呼叫 Number('') 函數，此函數會在 ActionScript 3.0 中傳回 0，而在 ActionScript 2.0 中傳回 NaN。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString() 格式已經變更。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "移轉問題：null 和 undefined 元素使用的 Array.toString() 處理方式已經變更。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DepricatedPropertyError, "不支援的 ActionScript 2.0 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "移轉問題：不再支援 %s 屬性。%s。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DepricatedFunctionError, "不支援的 ActionScript 2.0 函數。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "移轉問題：不再支援 %s 方法。%s。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ChangesInResolve, "不再支援 __resolve。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "移轉問題：不再支援 __resolve。請使用新的 Proxy 類別進行相似的功能。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_LevelNotSupported, "不再支援 _level。如需詳細資訊，請查看 flash.display 套件。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "移轉問題：不再支援 _level。如需詳細資訊，請查看 flash.display 套件。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ClassIsSealed, "類別已密封。不能以動態方式加入成員。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "移轉問題：%s 不是動態的類別。不能以動態方式在實體中加入成員。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ScopingChangeInThis, "this 關鍵字範圍變更。從類別實體擷取出來的類別方法永遠會將 this 解析回該實體。ActionScript 2.0 會根據被呼叫方法的來源位置，以動態方式查詢 this。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "移轉問題：因為 this 關鍵字的範圍變更，所以 ActionScript 3.0 中的 %s 方法會出現不同的行為模式。如需詳細資訊，請查看警告 1083 的項目。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "缺少 namespace 宣告 (例如，變數未定義為公用、私用等)。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s 的範圍將設定成預設的 namespace：%s 內部。它將不會顯示在此套件之外。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 會以隨機順序重複 \"for x in target\" 陳述式內的物件屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "移轉問題：ActionScript 3.0 會以隨機順序重複 \"for x in target\" 陳述式內的物件屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_InternalError, "編譯器內部錯誤。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_InternalError_specific, "錯誤碼：%s。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler 並未以偵聽程式加入。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "移轉問題：%s" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NegativeUintLiteral, "負值會在指定成 uint 資料類型時變成很大的正值。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "需要使用 uint 值 (非負值) 的位置使用了負值。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadNullComparision, "與 null 的比較不合邏輯。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadNullComparision_specific, "與 null 的比較不合邏輯。%s 類型的變數不能是 null。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadNaNComparision, "與 NaN 的比較不合邏輯。因為 NaN != NaN，所以任何有關 NaN 的比較操作都會評估成 false。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "與 NaN 的比較不合邏輯。這個陳述式永遠會評估成 false。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "條件式的指定。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "條件式的指定。您指的是否為 == (而不是 =)？" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadNullAssignment, "不可能的 null 指定。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "需要 %s 值的位置使用了 null。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NoConstructor, "遺失建構函式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NoConstructor_specific, "未指定 %s 類別的建構函式函數。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement, "空陳述式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_UnexpectedEmptyStatement_specific, "在預期是程式碼區塊的位置發現空陳述式。是否不小心輸入了「;」?" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ConstNotInitialized, "常數尚未初始化。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "常數尚未初始化。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadArrayCast, "Array 轉換操作可能無效。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) 的行為模式相同於新的 Array(x)。若要將值轉換成 Array 類型，請將運算式 x 當作 Array 使用，而不要當作 Array(x)。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "super() 陳述式不是在建構函式中呼叫。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "super() 陳述式會在進入這個建構函式之前執行。如果您要以明確方式控制何時執行此陳述式，請在建構函式中加入 super() 的呼叫。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_version, "請改用 Capabilities.version。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Focusrect, "如需詳細資訊，請查看 InteractiveObject.focusRect。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Highquality, "如需詳細資訊，請查看 Stage.quality。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "如需詳細資訊，請查看 Stage.quality。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "如需詳細資訊，請查看 Stage.quality。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Quality, "如需詳細資訊，請查看 Stage.quality。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "請改用 static 屬性 flash.media.SoundMixer.bufferTime。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "如需詳細資訊，請查看 LoaderInfo.url。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_NewLine, "請使用 '\n' 換行。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "如需詳細資訊，請查看 textField.maxScroll。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Level, "ActionScript 3.0 中沒有層級的概念，而是改成提供顯示清單的直接存取權限。如需詳細資訊，請查看 flash.display 套件。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Parent, "請改用 parent 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Root, "這個屬性已經移除。最接近的相等項目是 Stage，此項目會作為 ActionScript 3.0 顯示清單的根位置。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "請嘗試將 caller 宣告為函數的引數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Button_Target, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "請改用 parent 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "如需詳細資訊，請查看 Sprite.hitArea。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Scroll, "如需詳細資訊，請查看 flash.text.TextField 類別的 scrollH 和 scrollV 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TargetPath, "請直接將 MovieClip 物件當作引數 (而非路徑) 使用。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Video_Height, "如需詳細資訊，請查看 Video.videoHeight。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Video_Width, "如需詳細資訊，請查看 Video.videoWidth。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp__Proto__, "如需詳細資訊，請查看已過時的 __proto__。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Stage, "如需詳細資訊，請查看 DisplayObject.stage。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp__remoteClass, "請改用 flash.net 套件中的 registerClass() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_random, "請改用 Math.random()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_chr, "請改用 String.fromCharCode()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_mbchr, "請改用 String.fromCharCode()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ord, "請改用 String.charCodeAt()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_mbord, "請改用 String.charCodeAt()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_substring, "請改用 String.substr 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "請改用 String.substr 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_length, "請改用引數的 length 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_mblength, "請改用引數的 length 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ASNative, "如需詳細資訊，請查看 ASnative 的變更部分。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_addProperty, "請改用句號 (.) 註釋，直接在實體上設定屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_getProperty, "請改用句號 (.) 註釋，直接存取屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_setProperty, "請改用句號 (.) 註釋，直接在實體上設定屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_asfunction, "如需詳細資訊，請查看 TextEvent.LINK 和 addEventListener()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "這個方法已經移到 flash.utils 套件。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "已由新的 MovieClip 類別建構函式函數所取代。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_fscommand, "已經移到 flash.system 套件。另外，如需使用 Javascript/ActionScript 通訊，請查看 flash.external.ExternalInterface 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_getURL, "如需相等的功能，請查看 flash.net.URLLoader。flash.net 套件也包含 navigateToURL() 和 sendToURL() 等套件層級的函數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "如需詳細資訊，請查看 MovieClip.gotoAndPlay()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "如需詳細資訊，請查看 MovieClip.gotoAndStop()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_play, "如需詳細資訊，請查看 MovieClip.play()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_print, "如需詳細資訊，請查看 PrintJob.start()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "如需詳細資訊，請查看 PrintJob。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "如需詳細資訊，請查看 PrintJob。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_printNum, "如需詳細資訊，請查看 PrintJob。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "請使用 Container.removeChild(childName)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_setInterval, "已經移到 flash.utils 套件。請考慮改用 Timer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "如需詳細資訊，請查看 MovieClip.nextFrame()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_startDrag, "如需詳細資訊，請查看 MovieClip.startDrag()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_stop, "如需詳細資訊，請查看 MovieClip.stop()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "如需詳細資訊，請查看 Sound.stopAllSounds()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "如需詳細資訊，請查看 MovieClip.stopDrag()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "請改用句號 (.) 運算子或 with 陳述式。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "如需詳細資訊，請查看 DisplayObject.stage 和 Stage.quality。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "請改用 DisplayObjectContainer.removeChild(childName)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "請改用 DisplayObjectContainer.removeChild(childName)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "這個函數不再是全域函數，但是仍然可作為 TimerEvent、MouseEvent 和 KeyboardEvent 等類別的方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "如需詳細資訊，請查看 Video.attachNetStream 和 Video.attachCamera。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "請使用 URLLoader 類別來執行載入，並將結果傳遞到 StyleSheet.parseCSS()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "根據預設，在 ActionScript 3.0 中的所有類別都已註冊。如果您正在使用 AMF，請查看 flash.utils.registerClassAlias() 取得更多詳細資訊。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "請使用存取子屬性 (get/set 函數) 或 flash.utils.Proxy 類別進行相似的功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "請使用存取子屬性 (get/set 函數) 或 flash.utils.Proxy 類別進行相似的功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "如需詳細資訊，請查看 MovieClip.loadMovie()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "如需詳細資訊，請查看 MovieClip.loadMovieNum()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "如需詳細資訊，請查看 Loader.load()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "如需詳細資訊，請查看 Loader.load()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "請使用 SWF 類別，從元件庫建立音效。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onStatus, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onStatus 事件處理常式。您必須使用 addEventListener ( 'status', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onID3, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onID3 事件處理常式。您必須使用 addEventListener ( 'id3', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onLoad, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onLoad 事件處理常式。您必須使用 addEventListener ( 'load', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onSoundComplete, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onSoundComplete 事件處理常式。您必須使用 addEventListener ( 'soundComplete', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onSetFocus, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onSetFocus 事件處理常式。您必須使用 addEventListener ( 'focusIn', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onResize, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onResize 事件處理常式。您必須使用 addEventListener ( 'resize', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onChanged, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onChanged 事件處理常式。您必須使用 addEventListener ( 'change', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onKillFocus, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onKillFocus 事件處理常式。您必須使用 addEventListener ( 'focusOut', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onScroller, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onScroller 事件處理常式。您必須使用 addEventListener ( 'scroll', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onMouseDown, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onMouseDown 事件處理常式。您必須使用 addEventListener ( 'mouseDown', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onMouseUp, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onMouseUp 事件處理常式。您必須使用 addEventListener ( 'mouseUp', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onMouseMove, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onMouseMove 事件處理常式。您必須使用 addEventListener ( 'mouseMove', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onMouseWheel, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onMouseWheel 事件處理常式。您必須使用 addEventListener ( 'mouseWheel', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onKeyDown, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onKeyDown 事件處理常式。您必須使用 addEventListener ( 'keyDown', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onKeyUp, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onKeyUp 事件處理常式。您必須使用 addEventListener ( 'keyUp', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onData, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onData 事件處理常式。您必須使用 addEventListener ( 'data', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onHTTPStatus 事件處理常式。您必須使用 addEventListener ( 'httpStatus', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onDragOut, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onDragOut 事件處理常式。您必須使用 addEventListener ( 'mouseOut', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onDragOver, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onDragOver 事件處理常式。您必須使用 addEventListener ( 'mouseOver', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onPress, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onPress 事件處理常式。您必須使用 addEventListener ( 'mouseDown', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onRelease, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onRelease 事件處理常式。您必須使用 addEventListener ( 'click', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onReleaseOutside 事件處理常式。您必須使用 addEventListener ( 'mouseUp', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onRollOut, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onRollOut 事件處理常式。您必須使用 addEventListener ( 'mouseOut', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onRollOver, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onRollOver 事件處理常式。您必須使用 addEventListener ( 'mouseOver', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onActivity, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onActivity 事件處理常式。您必須使用 addEventListener ( 'activity', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onSelect, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onSelect 事件處理常式。您必須使用 addEventListener ( 'menuSelect', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onEnterFrame, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onEnterFrame。您必須使用 addEventListener ( 'enterFrame', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onUnload, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onUnload 事件處理常式。您必須使用 addEventListener ( 'unload', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onLoadComplete, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onLoadComplete。您必須使用 addEventListener ( 'load', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onLoadError, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onLoadError 事件處理常式。您必須使用 addEventListener ( 'error', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onLoadInit, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onLoadInit 事件處理常式。您必須使用 addEventListener ( 'init', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onLoadProgress, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onLoadProgress 事件處理常式。您必須使用 addEventListener ( 'progress', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onLoadStart, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onLoadStart。您必須使用 addEventListener ( 'start', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onClose, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onClose 事件處理常式。您必須使用 addEventListener ( 'close', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onConnect, "在 ActionScript 3.0 中，Flash Player 不會自動觸發 onConnect 事件處理常式。您必須使用 addEventListener ( 'connect', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onXML, "在 ActionScript 3.0 中，Flash Player 不會自動觸發 onXML。您必須使用 addEventListener ( 'xml', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "請改用 hasChildNodes 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "此 XMLEvent 類別已經淘汰，所以此 xml 事件將不再發送。在檔案載入期間只會發送 data 事件。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "XMLDoc 類別已經更名為 XMLDocument。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "請改用 Accessibility.active 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "請改用 ActivityEvent.ACTIVITY 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "請改用 DisplayObjectContainer.parent.getChildIndex。請參閱由 MovieClip 擴充之 DisplayObjectContainer 類別的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "請改用 DisplayObjectContainer.parent.setChildIndex。請參閱由 MovieClip 擴充之 DisplayObjectContainer 類別的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "請改用 DisplayObjectContainer.getChildAt。請參閱由 MovieClip 擴充之 DisplayObjectContainer 類別的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "請改用 DisplayObjectContainer.numChildren。DisplayObjectContainer.addChild 永遠會加入新子系來索引 DisplayObjectContainer.numChildren。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "請改用 ByteArray.bytesAvailable 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "請改用 ByteArray.position 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "請改用 ByteArray.position 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "請改用 Camera.getCamera() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "請改用 Camera.currentFPS 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "請改用 Camera.keyFrameInterval 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "請改用 Camera.loopback 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "請改用 ColorTransform.color 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "請改用 ColorTransform.color 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "請改用 Container.textSnapshot 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "請改用 ContextMenu.clone() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "請改用 ContextMenu.forwardAndBack 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "請改用 ContextMenuItem.clone() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "請改用 CustomActions.actionsList 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "請改用 DataEvent.DATA 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "請改用 DisplayObject.scaleX 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "請改用 DisplayObject.scaleX 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "請改用 DisplayObject.scaleY 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "請改用 DisplayObject.scaleY 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "請改用 DisplayObject.mouseX 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "請改用 DisplayObject.mouseX 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "請改用 DisplayObject.mouseY 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "請改用 DisplayObject.mouseY 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "請改用 DisplayObject.name 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "請改用 DisplayObject.parent 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "請改用 DisplayObject.mask 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "請改用 DisplayObject.visible 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "請改用 DisplayObject.x 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "請改用 DisplayObject.y 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "請改用 DisplayObject.rotation 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "請改用 DisplayObject.alpha 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "請改用 DisplayObject.width 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "請改用 DisplayObject.height 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "請改用 ExternalInterface.available 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "請改用 ErrorEvent.ERROR 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "請改用 Event.isDefaultPrevented 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "請改用 Event.ACTIVATE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "請改用 Event.ADDED 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "請改用 Event.CANCEL 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "請改用 Event.CHANGE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "請改用 Event.CLOSE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "請改用 Event.COMPLETE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "請改用 Event.CONNECT 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "請改用 Event.DEACTIVATE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "請改用 Event.ENTER_FRAME 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "請改用 Event.ID3 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "請改用 Event.INIT 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "請改用 Event.MOUSE_LEAVE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "請改用 Event.OPEN 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "請改用 Event.REMOVED 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "請改用 Event.RENDER 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "請改用 Event.RESIZE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "請改用 Event.SCROLL 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "請改用 Event.SELECT 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "請改用 Event.SOUND_COMPLETE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "請改用 Event.TAB_CHILDREN_CHANGE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "請改用 Event.TAB_ENABLED_CHANGE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "請改用 Event.TAB_INDEX_CHANGE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "請改用 Event.UNLOAD 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "請改用 FocusEvent.FOCUS_IN 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "請改用 FocusEvent.FOCUS_OUT 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "請改用 FocusEvent.KEY_FOCUS_CHANGE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "請改用 FocusEvent.MOUSE_FOCUS_CHANGE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "請改用 Graphics.beginBitmapFill() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "請改用 BitmapFilter.quality 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "請改用 KeyboardEvent.charCode。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "請改用 KeyboardEvent.keyCode。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "如需詳細資訊，請查看 KeyboardEvent 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "如需詳細資訊，請查看 KeyboardEvent.ctrlKey、KeyboardEvent.altKey 和 KeyboardEvent.shiftKey。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "請改用 PAGE_DOWN 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "請改用 PAGE_UP 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "請改用 DELETE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "請改用 CAPS_LOCK 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "請改用 NUMPAD_0 -> NUMPAD_9 等常數其中之一。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "請改用 InteractiveObject.focusRect 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "請改用 InteractiveObject.contextMenu 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "請改用 KeyboardEvent.charCode 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "請改用 KeyboardEvent.keyCode 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "請改用 Loader.contentLoaderInfo 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "請改用 LoaderInfo.loaderURL 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "請改用 LocalConnection.domain 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "請改用 MenuEvent.contextMenuOwner 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "請改用 Microphone.getMicrophone() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "如果 MovieClip 子類別名稱為 A，請使用 var mc= new A(); addChild(mc)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "請使用 var mc= new MovieClip(); addChild(mc)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "請使用 var tf= new TextField(); addChild(mc)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "請使用 Container.removeChild(childName)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "請使用 var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));。如需詳細資訊，請查看 Loader 和 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "請改用 DisplayObjectContainer.removeChild(childName)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "請改用 DisplayObjectContainer.removeChild(childName)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "請改用 DisplayObjectContainer.parent.getChildIndex。如需詳細資訊，請查看由 MovieClip 擴充的 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "請改用 DisplayObjectContainer.parent.setChildIndex。如需詳細資訊，請查看由 MovieClip 擴充的 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "請改用 DisplayObjectContainer.getChildAt。如需詳細資訊，請查看由 MovieClip 擴充的 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "請改用 DisplayObjectContainer.numChildren。DisplayObjectContainer.addChild 永遠會加入新子系來索引 DisplayObjectContainer.numChildren。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "如需詳細資訊，請查看 DisplayObject.addChild。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "如需詳細資訊，請查看 LoaderInfo.bytesLoaded 和 Loader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "如需詳細資訊，請查看 LoaderInfo.bytesTotal 和 Loader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "如需相等的功能，請查看 flash.net.URLLoader。flash.net 套件也包含 navigateToURL() 和 sendToURL() 等套件層級的函數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "如需詳細資訊，請查看 LoaderInfo.url 和 Loader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "如需詳細資訊，請查看 LoaderInfo.url 和 Loader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "請改用 MovieClip.mask 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "如需詳細資訊，請查看  LoaderInfo.swfVersion 和 Loader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "請改用 MovieClip.currentFrame 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "請改用 MovieClip.framesLoaded 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "請改用 MovieClip.totalFrames 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "如需詳細資訊，請查看 displayObjectInstance.root。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "如需詳細資訊，請查看 displayObjectInstance.root。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "請改用 static 屬性 flash.media.SoundMixer.bufferTime。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "請改用 NetStream.bufferTime 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "請改用 NetStream.currentFPS 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "請改用 NetStream.videoCodec 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "請改用 NetStream.audioCodec 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "請改用 ProductManager.isInstalled 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "請改用 ProductManager.installedVersion 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "請改用 ProductManager.isRunning 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "請改用 Point.add() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "請改用 Proxy.deleteDescendants 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "請改用 heapDump() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "請改用 ProgressEvent.bytesLoaded 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "請改用 ProgressEvent.bytesTotal 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "請改用 Rectangle.isEmpty 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "請改用 SoundTransform.pan 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "請改用 Sockect.bytesAvailable 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "請改用 SharedObject.size 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "請改用 SharedObject.fps 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "請改用 Sprite.constructChildren() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "請改用 Sprite.dropTarget 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "請改用 Stage.focus 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "請改用 Stage.focus 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "請改用 Stage.showDefaultContextMenu 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "請改用 StyleSheet.styleNames 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "請使用 URLLoader 的實體來載入 StyleSheet 資料，然後將載入器資料傳遞到 StyleSheet.parseCSS 方法。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "請使用 URLLoader 的實體來載入 StyleSheet 資料，然後將載入器資料傳遞到 StyleSheet.parseCSS 方法。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "請使用 URLLoader 的實體來載入 StyleSheet 資料，然後將載入器資料傳遞到 StyleSheet.parseCSS 方法。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "請使用 URLLoader 的實體來載入 StyleSheet 資料，然後將載入器資料傳遞到 StyleSheet.parseCSS 方法。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "請使用 URLLoader 的實體來載入 StyleSheet 資料，然後將載入器資料傳遞到 StyleSheet.parseCSS 方法。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "請改用 IME.enabled 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "請改用 IME.enabled 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "請改用 IME.instance 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "請改用 IME.conversionMode 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "請改用 IME.conversionMode 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "請改用 System.vmVersion 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "請改用 SWFLoaderInfo.swfVersion 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "請改用 SWFLoaderInfo.actionScriptVersion 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "請改用 TextField.defaultTextFormat 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "請改用 TextField.defaultTextFormat 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "請改用 DisplayObjectContainer.parent.getChildIndex。如需詳細資訊，請查看由 MovieClip 擴充的 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "請改用 DisplayObjectContainer.parent.setChildIndex。如需詳細資訊，請查看由 MovieClip 擴充的 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "請改用 DisplayObjectContainer.getChildAt。如需詳細資訊，請查看由 MovieClip 擴充的 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "請改用 DisplayObjectContainer.numChildren。DisplayObjectContainer.addChild 永遠會加入新子系來索引 DisplayObjectContainer.numChildren。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "請改用 TextField.replaceSelectedText() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "請改用 TextField.getLineIndexOfChar() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "請改用 TextField.selectionBeginIndex 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "請改用 TextField.selectionEndIndex 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "請改用 TextField.caretIndex 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "請改用 Font.enumerateFonts() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "請改用 TextField.maxScrollV 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "請改用 TextField.scrollH 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "請改用 TextField.maxScrollH 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "請改用 TextField.defaultTextFormat 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "請建立暫時的 TextField，並改用 TextField.getLineMetrics。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "請改用 TextSnapshot.charCount 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "請改用 flash.net 套件中的 navigateToURL() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "請改用 flash.net 套件中的 sendToURL() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "請改用 URLLoader.dataFormat 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "請改用 URLStream.bytesAvailable 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "不再支援這項屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "請改用 URLRequest.applicationDomain 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "若要加入請求標頭，請將 URLRequest.requestHeaders 屬性設定成 URLRequestHeader 物件的陣列。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "請使用 URLLoader 的實體來載入 XML 檔案，然後將 URLLoaders 資料傳遞到 XMLDocuments 建構函式。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "請改用 flash.net 套件中的 sendToURL() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "將 URLRequest 物件設定成 postData 屬性，然後配合 URLLoader 物件一起使用來載入 XML 檔案。將 URLLoaders 資料載入到 XMLDocuments 建構函式。如需詳細資訊，請查看 URLLoader 和 URLRequest 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "請使用 URLLoader 的實體來載入 XML 檔案，然後將 URLLoaders 資料傳遞到 XMLDocuments 建構函式。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "若要加入請求標頭，請將 URLRequest.requestHeaders 屬性設定成 URLRequestHeader 物件的陣列。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "如需詳細資訊，請查看 URLLoader.bytesLoaded 和 URLLoader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "如需詳細資訊，請查看 URLLoader.bytesTotal 和 URLLoader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "請使用 URLLoader 的實體來載入 XML 檔案，然後將載入器資料傳遞到 StyleSheet.parseCSS 方法。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "請改用 URLRequest.contentType 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "請檢查由 XMLDocument 建構函式或是 XMLDocument.parseXML 方法擲出的可能例外狀況。如需詳細資訊，請查看 XMLDocument。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Button, "Button 類別已經更名為 SimpleButton。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Container, "Container 類別已經更名為 DisplayObjectContainer。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Image, "Image 類別已經更名為 BitmapData。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "ImageFilter 類別已經更名為 BitmapFilter。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "ImageSprite 類別已經更名為 Bitmap。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "ImageLoaderInfo 類別已經更名為 BitmapLoaderInfo。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "ImeEvent 類別已經更名為 IMEEvent。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Key, "Key 類別已經更名為 Keyboard。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "LineMetrics 類別已經更名為 TextLineMetrics。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_LoadVars, "如需詳細資訊，請查看 URLVariables 類別、URLRequest.urlVariables 和 URLRequest.postData 等屬性，以及 URLLoader.dataFormat 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "MenuEvent 類別已經更名為 ContextMenuEvent。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "SystemCapabilities 類別已經更名為 Capabilities。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextExtents, "請改用 TextField.getLineMetrics 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Button, "Button 類別已經更名為 SimpleButton。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Container, "Container 類別已經更名為 DisplayObjectContainer。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Image, "Image 類別已經更名為 BitmapData。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "ImageFilter 類別已經更名為 BitmapFilter。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "ImageSprite 類別已經更名為 Bitmap。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "ImageLoaderInfo 類別已經更名為 BitmapLoaderInfo。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "ImeEvent 類別已經更名為 IMEEvent。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Key, "Key 類別已經更名為 Keyboard。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "LineMetrics 類別已經更名為 TextLineMetrics。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "如需詳細資訊，請查看 URLVariables 類別、URLRequest.urlVariables 和 URLRequest.postData 等屬性，以及 URLLoader.dataFormat 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "MenuEvent 類別已經更名為 ContextMenuEvent。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "SystemCapabilities 類別已經更名為 Capabilities。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "請改用 TextField.getLineMetrics 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "如需詳細資訊，請查看提供相似功能之 Proxy 類別的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "請改用 XMLUI.getProperty 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "請改用 XMLUI.setProperty 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "請改用 DisplayObject.accessibilityProperties 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "請改用 DisplayObject.scale9Grid 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "請改用 Graphics.drawOval 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "請改用 NetConnection.connected 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "請改用 Socket.connected 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "請改用 URLStream.connected 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "請改用 SyncEvent.changeList 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "請改用 TextField.scrollV 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "請改用 TextField.bottomScrollV 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "請改用 BitmapDataChannel.RED 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "請改用 BitmapDataChannel.GREEN 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "請改用 BitmapDataChannel.BLUE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "請改用 BitmapDataChannel.ALPHA 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_instanceof, "請改用 is 運算子。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "請改用 flash.system.Security.showSettings 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "請改用 System.useCodePage 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "請改用 flash.events.EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "請改用 static 屬性 flash.media.SoundMixer.bufferTime。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "請改為建立點陣圖圖庫元件類別的新實體，例如，新的 myBitmapName()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "如需詳細資訊，請查看 Loader.load()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "MovieClipLoader 類別已經由 flash.display.Loader 類別所取代。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "MovieClipLoader 類別已經由 flash.display.Loader 類別所取代。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "請改用 flash.system.IMEConversionMode.ALPHANUMERIC_FULL 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "請改用 flash.system.IMEConversionMode.ALPHANUMERIC_HALF 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "請改用 flash.system.IMEConversionMode.CHINESE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "請改用 flash.system.IMEConversionMode.JAPANESE_HIRAGANA 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "請改用 flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "請改用 flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "請改用 flash.system.IMEConversionMode.KOREAN 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "請改用 flash.system.IMEConversionMode.UNKNOWN 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onCancel, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onCancel 事件處理常式。您必須使用 addEventListener ( cancel, onCancel)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "沒有直接取代。willTrigger() 方法可以用來判定是否有偵聽程式完成註冊。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onIMEComposition, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onIMEComposition 事件處理常式。您必須使用 addEventListener ( imeComposition, handlerName)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "如需詳細資訊，請查看 LoaderInfo.url 和 Loader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "請改用 getFullYear() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "請改用 setFullYear() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "請改用 getUTCFullYear() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "請改用 rate 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Selection, "Selection 類別已經移除。如需詳細資訊，請查看需要其中選取範圍資訊之類別的 addEventListener 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Selection, "Selection 類別已經移除。如需詳細資訊，請查看需要其中選取範圍資訊之類別的 addEventListener 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "請改用 gain 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "顏色值可以直接使用 ColorTransform 類別建構函式或屬性加以指定。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "顏色值可以直接使用 ColorTransform 類別建構函式或屬性加以指定。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "請參閱 flash.display.InteractiveObject 類別中與焦點相關屬性的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "請參閱 flash.display.Graphics.beginBitmapFill 方法的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "請參閱 flash.display.DisplayObject.hitTestObject() 方法的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "請參閱 addChild() 方法的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "請改用 load() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "請使用 flash.media.SoundChannel.leftPeak 和 flash.media.SoundChannel.rightPeak 來監視和控制聲道的振幅。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "請改用 soundTransform 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "請改用 SoundTransform.pan 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "請改用 SoundTransform.pan 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "請改用 bytesLoaded 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "請改用 bytesTotal 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "不當地在文字欄位上使用 +=。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "使用 += is 將文字附加到文字欄位的速度，會比使用 TextField.appendText() 方法的速度慢很多。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "可能遺失括號。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "需要 %s 類型的位置使用了函數值。可能是因為這個函數參考後面的括號 () 已遺失。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_InstanceOfChanges, "使用 instanceof 運算子。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "不再支援 instanceof 運算子，請改用 is 運算子。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "allowDomain() 事件處理常式現在是標準的方法，而非事件回呼。如需詳細資訊，請查看新的 LocalConnection.allowDomain 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "allowInsecureDomain() 事件處理常式現在是標準的方法，而非事件回呼。如需詳細資訊，請查看新的 LocalConnection.allowInsecureDomain 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_call, "不再支援 global call() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Color, "Color 類別已經移除。請使用 flash.geom.ColorTransform 類別進行相等的功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Color, "Color 類別已經移除。請使用 flash.geom.ColorTransform 類別進行相等的功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF 檔案永遠會使用完全符合網域對應規則。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_capabilities, "capabilities 類別已經更名為 Capabilities。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_capabilities, "capabilities 類別已經更名為 Capabilities。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onComplete, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onComplete 事件處理常式。您必須使用 addEventListener ('complete', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onHTTPError, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onHTTPError 事件處理常式。您必須使用 addEventListener ('httpError', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onIOError, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onIOError 事件處理常式。您必須使用 addEventListener ('ioError', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onProgress, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onProgress 事件處理常式。您必須使用 addEventListener ( 'progress', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onSecurityError, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onSecurityError 事件處理常式。您必須使用 addEventListener ('securityError', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onOpen, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onOpen 事件處理常式。您必須使用 addEventListener ('open', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "可能使用 ActionScript 2.0 XML 類別。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "移轉問題：ActionScript 2.0 XML 類別已經更名為 XMLDocument。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadDateCast, "Date 轉換操作無效。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) 的行為模式與新的 Date().toString() 相同。若要將值轉換成 Date 類型，請使用 \"x as Date\" 而不要使用 Date(x)。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ImportHidesClass, "依據相同於目前類別的名稱來匯入套件，將會造成在此範圍中隱藏類別識別名稱。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "依據相同於目前類別的名稱來匯入套件，將會造成在此範圍中隱藏類別識別名稱。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "一個以上具有相同名稱的引數。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "指定了一個以上名為 '%s' 的引數。該引數的參考永遠會解析回最後一個。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "請改用 Rectangle.containsRect 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_eval, "這項功能已經移除。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_getVersion, "這項功能已經由 flash.system.Capabilities.version 屬性所取代。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "這項功能已經由 flash.display.MovieClip.framesLoaded 屬性所取代。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp__global, "_global 屬性已經移除。如需相等的功能，請使用類別中的靜態成員。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadBoolAssignment, "需要 Boolean 值的位置使用了非 Boolean 值。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "需要 Boolean 值的位置使用了 %s。運算式會強制轉型成 Boolean 值。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadES3TypeProp, "不明的屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s 不是動態類別 %s 的辨識屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadES3TypeMethod, "不明的方法。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s 不是動態類別 %s 的辨識方法。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DuplicateVariableDef, "變數定義重複。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "變數定義重複。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "定義名稱相同於匯入的套件名稱。名稱的不合格參考將解析回套件，而不是解析回定義。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "定義名稱相同於匯入的套件名稱。名稱的不合格參考將解析回套件，而不是解析回定義。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "可能嘗試刪除固定的屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "無法刪除已宣告的屬性 %s。若要釋放相關聯的記憶體，請將其值設定為 null。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Deprecated, "使用已過時的定義。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Deprecated_specific, "「%s」已過時。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedMessage, "使用已過時的定義。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "使用已過時的定義。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "「%s」已過時。請使用「%s」。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedSince, "使用已過時的定義。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "「%s」從 %s 起已經過時。請使用「%s」。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "使用已過時的定義。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "「%s」從 %s 起已經過時。" );
   }

   static final AscWarningInstance[] unsupportedProperties =
    {
        new AscWarningInstance(kUnsupportedProp_version, kVoidType, "$version", false ),
        new AscWarningInstance(kUnsupportedProp_Focusrect, kVoidType, "_focusrect", false ),
        new AscWarningInstance(kUnsupportedProp__global, kVoidType, "_global", false ),
        new AscWarningInstance(kUnsupportedProp_Highquality, kVoidType, "_highquality", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObj_HighQuality, kDisplayObjectType, "_highquality", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObj_Quality, kDisplayObjectType, "_quality", false ),
        new AscWarningInstance(kUnsupportedProp_Quality, kVoidType, "_quality", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_Soundbuftime, kTextFieldType, "_soundbuftime", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_Target, kTextFieldType, "_target", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_Url, kTextFieldType, "_url", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_Variable, kTextFieldType, "variable", false ),
        new AscWarningInstance(kUnsupportedProp_NewLine, kVoidType, "newline", false ),
        new AscWarningInstance(kUnsupportedProp_MaxScroll, kVoidType, "maxscroll", false ),
        new AscWarningInstance(kUnsupportedProp_Level, kVoidType, "_level", false ),
        new AscWarningInstance(kUnsupportedProp_Parent, kVoidType, "_parent", false ),
        new AscWarningInstance(kUnsupportedProp_Root, kVoidType, "_root", false ),
        new AscWarningInstance(kUnsupportedProp_Arguments_Caller, kArrayType, "caller", false ),
        new AscWarningInstance(kUnsupportedProp_Button_Target, kDisplayObjectType, "_target", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip_Parent, kDisplayObjectType, "_parent", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip_target, kDisplayObjectType, "_target", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip_hitArea, kDisplayObjectType, "hitArea", false ),
        new AscWarningInstance(kUnsupportedProp_Scroll, kVoidType, "scroll", false ),
        new AscWarningInstance(kUnsupportedProp_TargetPath, kVoidType, "targetPath", false ),
        new AscWarningInstance(kUnsupportedProp_Video_Height, kVideoType, "height", false ),
        new AscWarningInstance(kUnsupportedProp_Video_Width, kVideoType, "width", false ),
        new AscWarningInstance(kUnsupportedProp__Proto__, kObjectType, "__proto__", false ),
        new AscWarningInstance(kUnsupportedProp_Stage, kVoidType, "Stage", false ),
        new AscWarningInstance(kUnsupportedProp__remoteClass, kObjectType, "_remoteClass", false ),
        new AscWarningInstance(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, kActivityEventType, "ACTIVITY_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Camera_currentFps, kCameraType, "currentFps", false ),
        new AscWarningInstance(kUnsupportedProp_ContextMenu_forward_back, kContextMenuType, "forward_back", false ),
        new AscWarningInstance(kUnsupportedProp_DataEvent_DATA_TYPE, kDataEventType, "DATA_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_xscale, kDisplayObjectType, "xscale", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__xscale, kDisplayObjectType, "_xscale", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_yscale, kDisplayObjectType, "yscale", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__yscale, kDisplayObjectType, "_yscale", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_xmouse, kDisplayObjectType, "xmouse", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__xmouse, kDisplayObjectType, "_xmouse", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_ymouse, kDisplayObjectType, "ymouse", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__ymouse, kDisplayObjectType, "_ymouse", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_setRootClass, kDisplayObjectType, "setRootClass", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_mapSymbolToClass, kDisplayObjectType, "mapSymbolToClass", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__name, kDisplayObjectType, "_name", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__parent, kDisplayObjectType, "_parent", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__mask, kDisplayObjectType, "_mask", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__visible, kDisplayObjectType, "_visible", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__x, kDisplayObjectType, "_x", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__y, kDisplayObjectType, "_y", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__rotation, kDisplayObjectType, "_rotation", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__alpha, kDisplayObjectType, "_alpha", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__width, kDisplayObjectType, "_width", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__height, kDisplayObjectType, "_height", false ),
        new AscWarningInstance(kUnsupportedProp_ErrorEvent_ERROR_TYPE, kErrorEventType, "ERROR_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_ACTIVATE_TYPE, kEventType, "ACTIVATE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_ADDED_TYPE, kEventType, "ADDED_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_CANCEL_TYPE, kEventType, "CANCEL_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_CHANGE_TYPE, kEventType, "CHANGE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_CLOSE_TYPE, kEventType, "CLOSE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_COMPLETE_TYPE, kEventType, "COMPLETE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_CONNECT_TYPE, kEventType, "CONNECT_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_DEACTIVATE_TYPE, kEventType, "DEACTIVATE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_ENTER_FRAME_TYPE, kEventType, "ENTER_FRAME_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_ID3_TYPE, kEventType, "ID3_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_INIT_TYPE, kEventType, "INIT_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, kEventType, "MOUSE_LEAVE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_OPEN_TYPE, kEventType, "OPEN_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_REMOVED_TYPE, kEventType, "REMOVED_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_RENDER_TYPE, kEventType, "RENDER_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_RESIZE_TYPE, kEventType, "RESIZE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_SCROLL_TYPE, kEventType, "SCROLL_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_SELECT_TYPE, kEventType, "SELECT_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, kEventType, "SOUND_COMPLETE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, kEventType, "TAB_CHILDREN_CHANGE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, kEventType, "TAB_ENABLED_CHANGE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, kEventType, "TAB_INDEX_CHANGE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_UNLOAD_TYPE, kEventType, "UNLOAD_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, kFocusEventType, "FOCUS_IN_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, kFocusEventType, "FOCUS_OUT_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, kFocusEventType, "KEY_FOCUS_CHANGE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, kFocusEventType, "MOUSE_FOCUS_CHANGE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, kBitmapFilterType, "XYZ_QUALITY", false ),
        new AscWarningInstance(kUnsupportedProp_Keyboard_PGDN, kKeyboardType, "PGDN", true ),
        new AscWarningInstance(kUnsupportedProp_Keyboard_PGUP, kKeyboardType, "PGUP", true ),
        new AscWarningInstance(kUnsupportedProp_Keyboard_DELETEKEY, kKeyboardType, "DELETEKEY", true ),
        new AscWarningInstance(kUnsupportedProp_Keyboard_CAPSLOCK, kKeyboardType, "CAPSLOCK", true ),
        new AscWarningInstance(kUnsupportedProp_Keyboard_NUMPAD, kKeyboardType, "NUMPAD", true ),
        new AscWarningInstance(kUnsupportedProp_InteractiveObject__focusrect, kInteractiveObjectType, "_focusrect", false ),
        new AscWarningInstance(kUnsupportedProp_InteractiveObject_menu, kInteractiveObjectType, "menu", false ),
        new AscWarningInstance(kUnsupportedProp_KeyboardEvent_ascii, kKeyboardEventType, "ascii", false ),
        new AscWarningInstance(kUnsupportedProp_KeyboardEvent_code, kKeyboardEventType, "code", false ),
        new AscWarningInstance(kUnsupportedProp_Loader_loaderInfo, kLoaderType, "loaderInfo", false ),
        new AscWarningInstance(kUnsupportedProp_Loader_preload, kLoaderType, "preload", false ),
        new AscWarningInstance(kUnsupportedProp_Loader_loadCached, kLoaderType, "loadCached", false ),
        new AscWarningInstance(kUnsupportedProp_LoaderInfo_loaderUrl, kLoaderInfoType, "loaderUrl", false ),
        new AscWarningInstance(kUnsupportedProp_ContextMenuEvent_menuOwner, kContextMenuEventType, "menuOwner", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip_url, kMovieClipType, "url", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip__url, kMovieClipType, "_url", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip__currentframe, kMovieClipType, "_currentframe", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip__framesloaded, kMovieClipType, "_framesloaded", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip__totalframes, kMovieClipType, "_totalframes", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip_lockroot, kMovieClipType, "lockroot", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip__lockroot, kMovieClipType, "_lockroot", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip__soundbuftime, kMovieClipType, "_soundbuftime", false ),
        new AscWarningInstance(kUnsupportedProp_NetStream_currentFps, kNetStreamType, "currentFps", false ),
        new AscWarningInstance(kUnsupportedProp_NetStream_videocodec, kNetStreamType, "videocodec", false ),
        new AscWarningInstance(kUnsupportedProp_NetStream_audiocodec, kNetStreamType, "audiocodec", false ),
        new AscWarningInstance(kUnsupportedProp_Proxy_delDescendants, kProxyType, "delDescendants", false ),
        new AscWarningInstance(kUnsupportedProp_ProgressEvent_current, kProgressEventType, "current", false ),
        new AscWarningInstance(kUnsupportedProp_ProgressEvent_total, kProgressEventType, "total", false ),
        new AscWarningInstance(kUnsupportedProp_Sprite__droptarget, kSpriteType, "_droptarget", false ),
        new AscWarningInstance(kUnsupportedProp_Stage_showMenu, kStageType, "showMenu", false ),
        new AscWarningInstance(kUnsupportedProp_StyleSheet_loaded, kStyleSheetType, "loaded", false ),
        new AscWarningInstance(kUnsupportedProp_System_getAvmplusVersion, kSystemType, "getAvmplusVersion", true ),
        new AscWarningInstance(kUnsupportedProp_SWFLoaderInfo_SWFVersion, kSWFLoaderInfoType, "SWFVersion", false ),
        new AscWarningInstance(kUnsupportedProp_SWFLoaderInfo_ASVersion, kSWFLoaderInfoType, "ASVersion", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_maxscroll, kTextFieldType, "maxscroll", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_hscroll, kTextFieldType, "hscroll", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_maxhscroll, kTextFieldType, "maxhscroll", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_newTextFormat, kTextFieldType, "newTextFormat", false ),
        new AscWarningInstance(kUnsupportedProp_URLLoader_navigate, kURLLoaderType, "navigate", false ),
        new AscWarningInstance(kUnsupportedProp_URLLoader_binary, kURLLoaderType, "binary", false ),
        new AscWarningInstance(kUnsupportedProp_URLRequest_digest, kURLRequestType, "digest", false ),
        new AscWarningInstance(kUnsupportedProp_URLRequest_importToSandbox, kURLRequestType, "importToSandbox", false ),
        new AscWarningInstance(kUnsupportedProp_XMLDocument_loaded, kXMLDocumentType, "loaded", false ),
        new AscWarningInstance(kUnsupportedProp_XMLDocument_contentType, kXMLDocumentType, "contentType", false ),
        new AscWarningInstance(kUnsupportedProp_XMLDocument_status, kXMLDocumentType, "status", false ),
        new AscWarningInstance(kUnsupportedProp_Button, kVoidType, "Button", false ),
        new AscWarningInstance(kUnsupportedProp_Container, kVoidType, "Container", false ),
        new AscWarningInstance(kUnsupportedProp_Image, kVoidType, "Image", false ),
        new AscWarningInstance(kUnsupportedProp_ImageFilter, kVoidType, "ImageFilter", false ),
        new AscWarningInstance(kUnsupportedProp_ImageSprite, kVoidType, "ImageSprite", false ),
        new AscWarningInstance(kUnsupportedProp_ImageLoaderInfo, kVoidType, "ImageLoaderInfo", false ),
        new AscWarningInstance(kUnsupportedProp_ImeEvent, kVoidType, "ImeEvent", false ),
        new AscWarningInstance(kUnsupportedProp_Key, kVoidType, "Key", false ),
        new AscWarningInstance(kUnsupportedProp_LineMetrics, kVoidType, "LineMetrics", false ),
        new AscWarningInstance(kUnsupportedProp_LoadVars, kVoidType, "LoadVars", false ),
        new AscWarningInstance(kUnsupportedProp_MenuEvent, kVoidType, "MenuEvent", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClipLoader, kVoidType, "MovieClipLoader", false ),
        new AscWarningInstance(kUnsupportedProp_SystemCapabilities, kVoidType, "SystemCapabilities", false ),
        new AscWarningInstance(kUnsupportedProp_SystemCapabilities, kVoidType, "SystemCapabilities", false ),
        new AscWarningInstance(kUnsupportedProp_TextExtents, kVoidType, "TextExtents", false ),
        new AscWarningInstance(kUnsupportedProp_TextExtents, kVoidType, "TextExtents", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_accProps, kDisplayObjectType, "accProps", false ),
        new AscWarningInstance(kUnsupportedProp_NetConnection_isConnected, kNetConnectionType, "isConnected", false ),
        new AscWarningInstance(kUnsupportedProp_Socket_isConnected, kSocketType, "isConnected", false ),
        new AscWarningInstance(kUnsupportedProp_URLStream_isConnected, kURLStreamType, "isConnected", false ),
        new AscWarningInstance(kUnsupportedProp_SyncEvent_list, kSyncEventType, "list", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_scroll, kTextFieldType, "scroll", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_bottomScroll, kTextFieldType, "bottomScroll", false ),
        new AscWarningInstance(kUnsupportedProp_BitmapData_RED_CHANNEL, kBitmapDataType, "RED_CHANNEL", false ),
        new AscWarningInstance(kUnsupportedProp_BitmapData_GREEN_CHANNEL, kBitmapDataType, "GREEN_CHANNEL", false ),
        new AscWarningInstance(kUnsupportedProp_BitmapData_BLUE_CHANNEL, kBitmapDataType, "BLUE_CHANNEL", false ),
        new AscWarningInstance(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, kBitmapDataType, "ALPHA_CHANNEL", false ),
        new AscWarningInstance(kUnsupportedProp_System_useCodepage, kSystemType, "useCodepage", true ),
        new AscWarningInstance(kUnsupportedProp_SimpleButton_Soundbuftime, kSimpleButtonType, "_soundbuftime", false ),
        new AscWarningInstance(kUnsupportedProp_AsBroadcaster, kVoidType, "AsBroadcaster", false ),
        new AscWarningInstance(kUnsupportedProp_IME_ALPHANUMERIC_FULL, kIMEType, "ALPHANUMERIC_FULL", true ),
        new AscWarningInstance(kUnsupportedProp_IME_ALPHANUMERIC_HALF, kIMEType, "ALPHANUMERIC_HALF", true ),
        new AscWarningInstance(kUnsupportedProp_IME_CHINESE, kIMEType, "CHINESE", true ),
        new AscWarningInstance(kUnsupportedProp_IME_JAPANESE_HIRAGANA, kIMEType, "JAPANESE_HIRAGANA", true ),
        new AscWarningInstance(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, kIMEType, "JAPANESE_KATAKANA_FULL", true ),
        new AscWarningInstance(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, kIMEType, "JAPANESE_KATAKANA_HALF", true ),
        new AscWarningInstance(kUnsupportedProp_IME_KOREAN, kIMEType, "KOREAN", true ),
        new AscWarningInstance(kUnsupportedProp_IME_UNKNOWN, kIMEType, "UNKNOWN", true ),
        new AscWarningInstance(kUnsupportedProp_Keyboard__listeners, kKeyboardType, "_listeners", false ),
        new AscWarningInstance(kUnsupportedProp_SimpleButton__url, kSimpleButtonType, "_url", false ),
        new AscWarningInstance(kUnsupportedProp_Selection, kVoidType, "Selection", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip_focusEnabled, kDisplayObjectType, "focusEnabled", false ),
        new AscWarningInstance(kUnsupportedProp_LocalConnection_allowDomain, kLocalConnectionType, "allowDomain", false ),
        new AscWarningInstance(kUnsupportedProp_LocalConnection_allowInsecureDomain, kLocalConnectionType, "allowInsecureDomain", false ),
        new AscWarningInstance(kUnsupportedProp_Color, kVoidType, "Color", false ),
        new AscWarningInstance(kUnsupportedProp_System_exactSettings, kSystemType, "exactSettings", false ),
        new AscWarningInstance(kUnsupportedProp_capabilities, kVoidType, "capabilities", false ),
        new AscWarningInstance(kUnsupportedProp_Object___resolve, kObjectType, "__resolve", false ),
        };

    static final AscWarningInstance[] unsupportedMethods =
    {
        new AscWarningInstance(kUnsupportedMeth_instanceof, kVoidType, "instanceof", false ),
        new AscWarningInstance(kUnsupportedMeth_DisplayObject_setScalingGrid, kDisplayObjectType, "setScalingGrid", false ),
        new AscWarningInstance(kUnsupportedMeth_Graphics_drawCircle, kGraphicsType, "drawCircle", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLUI_get, kXMLUIType, "get", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLUI_set, kXMLUIType, "set", false ),
        new AscWarningInstance(kUnsupportedMeth_hasChildNodes, kXMLNodeType, "hasChildNodes", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLEvent, kVoidType, "XMLEvent", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDoc, kVoidType, "XMLDoc", false ),
        new AscWarningInstance(kUnsupportedMeth_random, kVoidType, "random", false ),
        new AscWarningInstance(kUnsupportedMeth_chr, kVoidType, "chr", false ),
        new AscWarningInstance(kUnsupportedMeth_mbchr, kVoidType, "mbchr", false ),
        new AscWarningInstance(kUnsupportedMeth_ord, kVoidType, "ord", false ),
        new AscWarningInstance(kUnsupportedMeth_mbord, kVoidType, "mbord", false ),
        new AscWarningInstance(kUnsupportedMeth_substring, kVoidType, "substring", false ),
        new AscWarningInstance(kUnsupportedMeth_mbsubstring, kVoidType, "mbsubstring", false ),
        new AscWarningInstance(kUnsupportedMeth_length, kVoidType, "length", false ),
        new AscWarningInstance(kUnsupportedMeth_mblength, kVoidType, "mblength", false ),
        new AscWarningInstance(kUnsupportedMeth_ASNative, kVoidType, "ASnative", false ),
        new AscWarningInstance(kUnsupportedMeth_addProperty, kObjectType, "addProperty", false ),
        new AscWarningInstance(kUnsupportedMeth_getProperty, kVoidType, "getProperty", false ),
        new AscWarningInstance(kUnsupportedMeth_setProperty, kVoidType, "setProperty", false ),
        new AscWarningInstance(kUnsupportedMeth_asfunction, kVoidType, "asfunction", false ),
        new AscWarningInstance(kUnsupportedMeth_clearInterval, kVoidType, "clearInterval", false ),
        new AscWarningInstance(kUnsupportedMeth_duplicateMovieClip, kVoidType, "duplicateMovieClip", false ),
        new AscWarningInstance(kUnsupportedMeth_fscommand, kVoidType, "fscommand", false ),
        new AscWarningInstance(kUnsupportedMeth_getURL, kVoidType, "getURL", false ),
        new AscWarningInstance(kUnsupportedMeth_gotoAndPlay, kVoidType, "gotoAndPlay", false ),
        new AscWarningInstance(kUnsupportedMeth_gotoAndStop, kVoidType, "gotoAndStop", false ),
        new AscWarningInstance(kUnsupportedMeth_play, kVoidType, "play", false ),
        new AscWarningInstance(kUnsupportedMeth_print, kVoidType, "print", false ),
        new AscWarningInstance(kUnsupportedMeth_printAsBitmap, kVoidType, "printAsBitmap", false ),
        new AscWarningInstance(kUnsupportedMeth_printAsBitmapNum, kVoidType, "printAsBitmapNum", false ),
        new AscWarningInstance(kUnsupportedMeth_printNum, kVoidType, "printNum", false ),
        new AscWarningInstance(kUnsupportedMeth_removeMovieClip, kVoidType, "removeMovieClip", false ),
        new AscWarningInstance(kUnsupportedMeth_setInterval, kVoidType, "setInterval", false ),
        new AscWarningInstance(kUnsupportedMeth_nextFrame, kVoidType, "nextFrame", false ),
        new AscWarningInstance(kUnsupportedMeth_startDrag, kVoidType, "startDrag", false ),
        new AscWarningInstance(kUnsupportedMeth_stop, kVoidType, "stop", false ),
        new AscWarningInstance(kUnsupportedMeth_stopAllSounds, kVoidType, "stopAllSounds", false ),
        new AscWarningInstance(kUnsupportedMeth_stopDrag, kVoidType, "stopDrag", false ),
        new AscWarningInstance(kUnsupportedMeth_tellTarget, kVoidType, "tellTarget", false ),
        new AscWarningInstance(kUnsupportedMeth_toggleHighQuality, kVoidType, "toggleHighQuality", false ),
        new AscWarningInstance(kUnsupportedMeth_unloadMovie, kVoidType, "unloadMovie", false ),
        new AscWarningInstance(kUnsupportedMeth_unloadMovieNum, kVoidType, "unloadMovieNum", false ),
        new AscWarningInstance(kUnsupportedMeth_updateAfterEvent, kVoidType, "updateAfterEvent", false ),
        new AscWarningInstance(kUnsupportedMeth_Video_attachVideo, kVideoType, "attachVideo", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_StyleSheet_load, kStyleSheetType, "load", false ),
        new AscWarningInstance(kUnsupportedMeth_Object_registerClass, kObjectType, "registerClass", false ),
        new AscWarningInstance(kUnsupportedMeth_Object_unwatch, kObjectType, "unwatch", false ),
        new AscWarningInstance(kUnsupportedMeth_Object_watch, kObjectType, "watch", false ),
        new AscWarningInstance(kUnsupportedMeth_loadMovie, kVoidType, "loadMovie", false ),
        new AscWarningInstance(kUnsupportedMeth_loadMovieNum, kVoidType, "loadMovieNum", false ),
        new AscWarningInstance(kUnsupportedMeth_loadVariables, kVoidType, "loadVariables", false ),
        new AscWarningInstance(kUnsupportedMeth_loadVariablesNum, kVoidType, "loadVariablesNum", false ),
        new AscWarningInstance(kUnsupportedMeth_Stage_addListener, kStageType, "addListener", false ),
        new AscWarningInstance(kUnsupportedMeth_Stage_removeListener, kStageType, "removeListener", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_addListener, kTextFieldType, "addListener", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_removeListener, kTextFieldType, "removeListener", false ),
        new AscWarningInstance(kUnsupportedMeth_Mouse_addListener, kMouseType, "addListener", false ),
        new AscWarningInstance(kUnsupportedMeth_Mouse_removeListener, kMouseType, "removeListener", false ),
        new AscWarningInstance(kUnsupportedMeth_Keyboard_addListener, kKeyboardType, "addListener", true ),
        new AscWarningInstance(kUnsupportedMeth_Keyboard_removeListener, kKeyboardType, "removeListener", true ),
        new AscWarningInstance(kUnsupportedMeth_Sound_attachSound, kSoundType, "attachSound", false ),
        new AscWarningInstance(kUnsupportedMeth_Accessibility_isActive, kAccessibilityType, "isActive", false ),
        new AscWarningInstance(kUnsupportedMeth_SimpleButton_getDepth, kSimpleButtonType, "getDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_SimpleButton_swapDepths, kSimpleButtonType, "swapDepths", false ),
        new AscWarningInstance(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, kSimpleButtonType, "getInstanceAtDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_SimpleButton_getNextHighestDepth, kSimpleButtonType, "getNextHighestDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_ByteArray_available, kByteArrayType, "available", false ),
        new AscWarningInstance(kUnsupportedMeth_ByteArray_getFilePointer, kByteArrayType, "getFilePointer", false ),
        new AscWarningInstance(kUnsupportedMeth_ByteArray_seek, kByteArrayType, "seek", false ),
        new AscWarningInstance(kUnsupportedMeth_Camera_get, kCameraType, "get", false ),
        new AscWarningInstance(kUnsupportedMeth_Camera_setKeyFrameInterval, kCameraType, "setKeyFrameInterval", false ),
        new AscWarningInstance(kUnsupportedMeth_Camera_setLoopback, kCameraType, "setLoopback", false ),
        new AscWarningInstance(kUnsupportedMeth_ColorTransform_getRGB, kColorTransformType, "getRGB", false ),
        new AscWarningInstance(kUnsupportedMeth_ColorTransform_setRGB, kColorTransformType, "setRGB", false ),
        new AscWarningInstance(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, kDisplayObjectContainerType, "getTextSnapshot", false ),
        new AscWarningInstance(kUnsupportedMeth_ContextMenu_copy, kContextMenuType, "copy", false ),
        new AscWarningInstance(kUnsupportedMeth_ContextMenuItem_copy, kContextMenuItemType, "copy", false ),
        new AscWarningInstance(kUnsupportedMeth_CustomActions_listActions, kCustomActionsType, "listActions", false ),
        new AscWarningInstance(kUnsupportedMeth_ExternalInterface_available, kExternalInterfaceType, "available", false ),
        new AscWarningInstance(kUnsupportedMeth_Event_isDefaultPrevented, kEventType, "isDefaultPrevented", false ),
        new AscWarningInstance(kUnsupportedMeth_Graphics_beginImageFill, kGraphicsType, "beginImageFill", false ),
        new AscWarningInstance(kUnsupportedMeth_Keyboard_getAscii, kKeyboardType, "getAscii", false ),
        new AscWarningInstance(kUnsupportedMeth_Keyboard_getCode, kKeyboardType, "getCode", false ),
        new AscWarningInstance(kUnsupportedMeth_Keyboard_isDown, kKeyboardType, "isDown", false ),
        new AscWarningInstance(kUnsupportedMeth_Keyboard_isToggled, kKeyboardType, "isToggled", false ),
        new AscWarningInstance(kUnsupportedMeth_LocalConnection_domain, kLocalConnectionType, "domain", false ),
        new AscWarningInstance(kUnsupportedMeth_Microphone_get, kMicrophoneType, "get", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_attachMovie, kMovieClipType, "attachMovie", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_createEmptyMovieClip, kMovieClipType, "createEmptyMovieClip", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_createTextField, kMovieClipType, "createTextField", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_removeMovieClip, kMovieClipType, "removeMovieClip", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_loadMovie, kMovieClipType, "loadMovie", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_unloadMovie, kMovieClipType, "unloadMovie", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_unloadMovieNum, kMovieClipType, "unloadMovieNum", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getDepth, kMovieClipType, "getDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_swapDepths, kMovieClipType, "swapDepths", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getInstanceAtDepth, kMovieClipType, "getInstanceAtDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getNextHighestDepth, kMovieClipType, "getNextHighestDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_attachAudio, kMovieClipType, "attachAudio", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getBytesLoaded, kMovieClipType, "getBytesLoaded", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getBytesTotal, kMovieClipType, "getBytesTotal", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getURL, kMovieClipType, "getURL", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_setMask, kMovieClipType, "setMask", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getSWFVersion, kMovieClipType, "getSWFVersion", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_clear, kMovieClipType, "clear", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_beginFill, kMovieClipType, "beginFill", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_beginGradientFill, kMovieClipType, "beginGradientFill", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_lineGradientStyle, kMovieClipType, "lineGradientStyle", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_beginImageFill, kMovieClipType, "beginImageFill", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_lineStyle, kMovieClipType, "lineStyle", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_drawRect, kMovieClipType, "drawRect", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_drawRoundRect, kMovieClipType, "drawRoundRect", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_drawRoundRectComplex, kMovieClipType, "drawRoundRectComplex", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_drawCircle, kMovieClipType, "drawCircle", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_moveTo, kMovieClipType, "moveTo", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_lineTo, kMovieClipType, "lineTo", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_curveTo, kMovieClipType, "curveTo", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_endFill, kMovieClipType, "endFill", false ),
        new AscWarningInstance(kUnsupportedMeth_NetStream_setBufferTime, kNetStreamType, "setBufferTime", false ),
        new AscWarningInstance(kUnsupportedMeth_ProductManager_isIntalled, kProductManagerType, "isIntalled", false ),
        new AscWarningInstance(kUnsupportedMeth_ProductManager_installedVersion, kProductManagerType, "installedVersion", false ),
        new AscWarningInstance(kUnsupportedMeth_ProductManager_isRunning, kProductManagerType, "isRunning", false ),
        new AscWarningInstance(kUnsupportedMeth_Point_addTo, kPointType, "addTo", false ),
        new AscWarningInstance(kUnsupportedMeth_Profiler_heapdump, kVoidType, "heapdump", false ),
        new AscWarningInstance(kUnsupportedMeth_Rectangle_isEmpty, kRectangleType, "isEmpty", false ),
        new AscWarningInstance(kUnsupportedMeth_Rectangle_containsRectangle, kRectangleType, "containsRectangle", false ),
        new AscWarningInstance(kUnsupportedMeth_SoundTransform_setPan, kSoundTransformType, "setPan", false ),
        new AscWarningInstance(kUnsupportedMeth_Socket_available, kSocketType, "available", false ),
        new AscWarningInstance(kUnsupportedMeth_SharedObject_getSize, kSharedObjectType, "getSize", false ),
        new AscWarningInstance(kUnsupportedMeth_SharedObject_setFps, kSharedObjectType, "setFps", false ),
        new AscWarningInstance(kUnsupportedMeth_Sprite_getSWF, kSpriteType, "getSWF", false ),
        new AscWarningInstance(kUnsupportedMeth_Sprite_constructChild, kSpriteType, "constructChild", false ),
        new AscWarningInstance(kUnsupportedMeth_Stage_getFocus, kStageType, "getFocus", false ),
        new AscWarningInstance(kUnsupportedMeth_Stage_setFocus, kStageType, "setFocus", false ),
        new AscWarningInstance(kUnsupportedMeth_StyleSheet_getStyleNames, kStyleSheetType, "getStyleNames", false ),
        new AscWarningInstance(kUnsupportedMeth_StyleSheet_onData, kStyleSheetType, "onData", false ),
        new AscWarningInstance(kUnsupportedMeth_StyleSheet_load, kStyleSheetType, "load", false ),
        new AscWarningInstance(kUnsupportedMeth_StyleSheet_getBytesLoaded, kStyleSheetType, "getBytesLoaded", false ),
        new AscWarningInstance(kUnsupportedMeth_StyleSheet_getBytesTotal, kStyleSheetType, "getBytesTotal", false ),
        new AscWarningInstance(kUnsupportedMeth_IME_addListener, kIMEType, "addListener", true ),
        new AscWarningInstance(kUnsupportedMeth_IME_removeListener, kIMEType, "removeListener", true ),
        new AscWarningInstance(kUnsupportedMeth_IME_getEnabled, kIMEType, "getEnabled", false ),
        new AscWarningInstance(kUnsupportedMeth_IME_setEnabled, kIMEType, "setEnabled", false ),
        new AscWarningInstance(kUnsupportedMeth_IME_getInstance, kIMEType, "getInstance", false ),
        new AscWarningInstance(kUnsupportedMeth_IME_getConversionMode, kIMEType, "getConversionMode", false ),
        new AscWarningInstance(kUnsupportedMeth_IME_setConversionMode, kIMEType, "setConversionMode", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getNewTextFormat, kTextFieldType, "getNewTextFormat", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_setNewTextFormat, kTextFieldType, "setNewTextFormat", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getDepth, kTextFieldType, "getDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_swapDepths, kTextFieldType, "swapDepths", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getInstanceAtDepth, kTextFieldType, "getInstanceAtDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getNextHighestDepth, kTextFieldType, "getNextHighestDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_replaceSel, kTextFieldType, "replaceSel", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getLineIndexOfCharacter, kTextFieldType, "getLineIndexOfCharacter", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getSelectionBeginIndex, kTextFieldType, "getSelectionBeginIndex", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getSelectionEndIndex, kTextFieldType, "getSelectionEndIndex", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getCaretIndex, kTextFieldType, "getCaretIndex", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getFontList, kTextFieldType, "getFontList", false ),
        new AscWarningInstance(kUnsupportedMeth_TextSnapshot_getCount, kTextSnapshotType, "getCount", false ),
        new AscWarningInstance(kUnsupportedMeth_URLLoader_send, kURLLoaderType, "send", false ),
        new AscWarningInstance(kUnsupportedMeth_URLStream_available, kURLStreamType, "available", false ),
        new AscWarningInstance(kUnsupportedMeth_URLRequest_addRequestHeader, kURLRequestType, "addRequestHeader", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_load, kXMLDocumentType, "load", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_send, kXMLDocumentType, "send", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_sendAndLoad, kXMLDocumentType, "sendAndLoad", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_onData, kXMLDocumentType, "onData", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_addRequestHeader, kXMLDocumentType, "addRequestHeader", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_getBytesLoaded, kXMLDocumentType, "getBytesLoaded", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_getBytesTotal, kXMLDocumentType, "getBytesTotal", false ),
        new AscWarningInstance(kUnsupportedMeth_Button, kVoidType, "Button", false ),
        new AscWarningInstance(kUnsupportedMeth_Container, kVoidType, "Container", false ),
        new AscWarningInstance(kUnsupportedMeth_Image, kVoidType, "Image", false ),
        new AscWarningInstance(kUnsupportedMeth_ImageFilter, kVoidType, "ImageFilter", false ),
        new AscWarningInstance(kUnsupportedMeth_ImageSprite, kVoidType, "ImageSprite", false ),
        new AscWarningInstance(kUnsupportedMeth_ImageLoaderInfo, kVoidType, "ImageLoaderInfo", false ),
        new AscWarningInstance(kUnsupportedMeth_ImeEvent, kVoidType, "ImeEvent", false ),
        new AscWarningInstance(kUnsupportedMeth_Key, kVoidType, "Key", false ),
        new AscWarningInstance(kUnsupportedMeth_LineMetrics, kVoidType, "LineMetrics", false ),
        new AscWarningInstance(kUnsupportedMeth_LoadVars, kVoidType, "LoadVars", false ),
        new AscWarningInstance(kUnsupportedMeth_MenuEvent, kVoidType, "MenuEvent", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClipLoader, kVoidType, "MovieClipLoader", false ),
        new AscWarningInstance(kUnsupportedMeth_SystemCapabilities, kVoidType, "SystemCapabilities", false ),
        new AscWarningInstance(kUnsupportedMeth_SystemCapabilities, kVoidType, "SystemCapabilities", false ),
        new AscWarningInstance(kUnsupportedMeth_TextExtents, kVoidType, "TextExtents", false ),
        new AscWarningInstance(kUnsupportedMeth_System_showSettings, kSystemType, "showSettings", true ),
        new AscWarningInstance(kUnsupportedMeth_BitmapData_loadBitmap, kBitmapDataType, "loadBitmap", true ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_loadVariables, kMovieClipType, "loadVariables", false ),
        new AscWarningInstance(kUnsupportedMeth_FileReferenceList_addListener, kFileReferenceListType, "addListener", false ),
        new AscWarningInstance(kUnsupportedMeth_FileReferenceList_removeListener, kFileReferenceListType, "removeListener", false ),
        new AscWarningInstance(kUnsupportedMeth_Date_getYear, kDateType, "getYear", false ),
        new AscWarningInstance(kUnsupportedMeth_Date_setYear, kDateType, "setYear", false ),
        new AscWarningInstance(kUnsupportedMeth_Date_getUTCYear, kDateType, "getUTCYear", false ),
        new AscWarningInstance(kUnsupportedMeth_Microphone_setGain, kMicrophoneType, "setGain", false ),
        new AscWarningInstance(kUnsupportedMeth_Microphone_setRate, kMicrophoneType, "setRate", false ),
        new AscWarningInstance(kUnsupportedMeth_Selection, kVoidType, "Selection", false ),
        new AscWarningInstance(kUnsupportedMeth_ColorTransform_getTransform, kColorTransformType, "getTransform", false ),
        new AscWarningInstance(kUnsupportedMeth_ColorTransform_setTransform, kColorTransformType, "setTransform", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_loadSound, kSoundType, "loadSound", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_getVolume, kSoundType, "getVolume", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_getTransform, kSoundType, "getTransform", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_getPan, kSoundType, "getPan", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_setPan, kSoundType, "setPan", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_beginBitmapFill, kDisplayObjectType, "beginBitmapFill", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_hitTest, kDisplayObjectType, "hitTest", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_attachBitmap, kDisplayObjectType, "attachBitmap", false ),
        new AscWarningInstance(kUnsupportedMeth_call, kVoidType, "call", false ),
        new AscWarningInstance(kUnsupportedMeth_Color, kVoidType, "Color", false ),
        new AscWarningInstance(kUnsupportedMeth_capabilities, kVoidType, "capabilities", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_getBytesLoaded, kSoundType, "getBytesLoaded", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_getBytesTotal, kSoundType, "getBytesTotal", false ),
        new AscWarningInstance(kUnsupportedMeth_TextFormat_getTextExtent, kTextFormatType, "getTextExtent", false ),
        new AscWarningInstance(kUnsupportedMeth_FileReference_addListener, kFileReferenceType, "addListener", false ),
        new AscWarningInstance(kUnsupportedMeth_FileReference_removeListener, kFileReferenceType, "removeListener", false ),
        new AscWarningInstance(kUnsupportedMeth_eval, kVoidType, "eval", false ),
        new AscWarningInstance(kUnsupportedMeth_getVersion, kVoidType, "getVersion", false ),
        new AscWarningInstance(kUnsupportedMeth_ifFrameLoaded, kVoidType, "ifFrameLoaded", false ),
        };

    static final AscWarningInstance[] unsupportedEvents =
    {
        new AscWarningInstance(kWarning_Event_onStatus, kSystemType, "onStatus", false ),
        new AscWarningInstance(kWarning_Event_onID3, kSoundType, "onID3", false ),
        new AscWarningInstance(kWarning_Event_onLoad, kSoundType, "onLoad", false ),
        new AscWarningInstance(kWarning_Event_onSoundComplete, kSoundType, "onSoundComplete", false ),
        new AscWarningInstance(kWarning_Event_onResize, kStageType, "onResize", false ),
        new AscWarningInstance(kWarning_Event_onChanged, kTextFieldType, "onChanged", false ),
        new AscWarningInstance(kWarning_Event_onKillFocus, kTextFieldType, "onKillFocus", false ),
        new AscWarningInstance(kWarning_Event_onScroller, kTextFieldType, "onScroller", false ),
        new AscWarningInstance(kWarning_Event_onSetFocus, kTextFieldType, "onSetFocus", false ),
        new AscWarningInstance(kWarning_Event_onLoad, kStyleSheetType, "onLoad", false ),
        new AscWarningInstance(kWarning_Event_onMouseDown, kMouseType, "onMouseDown", false ),
        new AscWarningInstance(kWarning_Event_onMouseUp, kMouseType, "onMouseUp", false ),
        new AscWarningInstance(kWarning_Event_onMouseMove, kMouseType, "onMouseMove", false ),
        new AscWarningInstance(kWarning_Event_onMouseWheel, kMouseType, "onMouseWheel", false ),
        new AscWarningInstance(kWarning_Event_onKeyDown, kKeyboardType, "onKeyDown", false ),
        new AscWarningInstance(kWarning_Event_onKeyUp, kKeyboardType, "onKeyUp", false ),
        new AscWarningInstance(kWarning_Event_onData, kLoaderType, "onData", false ),
        new AscWarningInstance(kWarning_Event_onLoad, kLoaderType, "onLoad", false ),
        new AscWarningInstance(kWarning_Event_onDragOut, kSimpleButtonType, "onDragOut", false ),
        new AscWarningInstance(kWarning_Event_onDragOver, kSimpleButtonType, "onDragOver", false ),
        new AscWarningInstance(kWarning_Event_onKeyDown, kSimpleButtonType, "onKeyDown", false ),
        new AscWarningInstance(kWarning_Event_onKeyUp, kSimpleButtonType, "onKeyUp", false ),
        new AscWarningInstance(kWarning_Event_onKillFocus, kSimpleButtonType, "onKillFocus", false ),
        new AscWarningInstance(kWarning_Event_onPress, kSimpleButtonType, "onPress", false ),
        new AscWarningInstance(kWarning_Event_onRelease, kSimpleButtonType, "onRelease", false ),
        new AscWarningInstance(kWarning_Event_onReleaseOutside, kSimpleButtonType, "onReleaseOutside", false ),
        new AscWarningInstance(kWarning_Event_onRollOut, kSimpleButtonType, "onRollOut", false ),
        new AscWarningInstance(kWarning_Event_onRollOver, kSimpleButtonType, "onRollOver", false ),
        new AscWarningInstance(kWarning_Event_onSetFocus, kSimpleButtonType, "onSetFocus", false ),
        new AscWarningInstance(kWarning_Event_onActivity, kCameraType, "onActivity", false ),
        new AscWarningInstance(kWarning_Event_onStatus, kCameraType, "onStatus", false ),
        new AscWarningInstance(kWarning_Event_onSelect, kContextMenuType, "onSelect", false ),
        new AscWarningInstance(kWarning_Event_onSelect, kContextMenuItemType, "onSelect", false ),
        new AscWarningInstance(kWarning_Event_onActivity, kMicrophoneType, "onActivity", false ),
        new AscWarningInstance(kWarning_Event_onStatus, kMicrophoneType, "onStatus", false ),
        new AscWarningInstance(kWarning_Event_onData, kDisplayObjectType, "onData", false ),
        new AscWarningInstance(kWarning_Event_onDragOut, kDisplayObjectType, "onDragOut", false ),
        new AscWarningInstance(kWarning_Event_onDragOver, kDisplayObjectType, "onDragOver", false ),
        new AscWarningInstance(kWarning_Event_onEnterFrame, kDisplayObjectType, "onEnterFrame", false ),
        new AscWarningInstance(kWarning_Event_onKeyDown, kDisplayObjectType, "onKeyDown", false ),
        new AscWarningInstance(kWarning_Event_onKeyUp, kDisplayObjectType, "onKeyUp", false ),
        new AscWarningInstance(kWarning_Event_onKillFocus, kDisplayObjectType, "onKillFocus", false ),
        new AscWarningInstance(kWarning_Event_onLoad, kDisplayObjectType, "onLoad", false ),
        new AscWarningInstance(kWarning_Event_onMouseDown, kDisplayObjectType, "onMouseDown", false ),
        new AscWarningInstance(kWarning_Event_onMouseMove, kDisplayObjectType, "onMouseMove", false ),
        new AscWarningInstance(kWarning_Event_onMouseUp, kDisplayObjectType, "onMouseUp", false ),
        new AscWarningInstance(kWarning_Event_onPress, kDisplayObjectType, "onPress", false ),
        new AscWarningInstance(kWarning_Event_onRelease, kDisplayObjectType, "onRelease", false ),
        new AscWarningInstance(kWarning_Event_onReleaseOutside, kDisplayObjectType, "onReleaseOutside", false ),
        new AscWarningInstance(kWarning_Event_onRollOut, kDisplayObjectType, "onRollOut", false ),
        new AscWarningInstance(kWarning_Event_onRollOver, kDisplayObjectType, "onRollOver", false ),
        new AscWarningInstance(kWarning_Event_onSetFocus, kDisplayObjectType, "onSetFocus", false ),
        new AscWarningInstance(kWarning_Event_onUnload, kDisplayObjectType, "onUnload", false ),
        new AscWarningInstance(kWarning_Event_onLoadComplete, kLoaderType, "onLoadComplete", false ),
        new AscWarningInstance(kWarning_Event_onLoadError, kLoaderType, "onLoadError", false ),
        new AscWarningInstance(kWarning_Event_onLoadInit, kLoaderType, "onLoadInit", false ),
        new AscWarningInstance(kWarning_Event_onLoadProgress, kLoaderType, "onLoadProgress", false ),
        new AscWarningInstance(kWarning_Event_onLoadStart, kLoaderType, "onLoadStart", false ),
        new AscWarningInstance(kWarning_Event_onStatus, kNetStreamType, "onStatus", false ),
        new AscWarningInstance(kWarning_Event_onData, kXMLType, "onData", false ),
        new AscWarningInstance(kWarning_Event_onLoad, kXMLType, "onLoad", false ),
        new AscWarningInstance(kWarning_Event_onClose, kXMLSocketType, "onClose", false ),
        new AscWarningInstance(kWarning_Event_onConnect, kXMLSocketType, "onConnect", false ),
        new AscWarningInstance(kWarning_Event_onData, kXMLSocketType, "onData", false ),
        new AscWarningInstance(kWarning_Event_onXML, kXMLSocketType, "onXML", false ),
        new AscWarningInstance(kWarning_Event_onSelect, kFileReferenceListType, "onSelect", false ),
        new AscWarningInstance(kWarning_Event_onCancel, kFileReferenceListType, "onCancel", false ),
        new AscWarningInstance(kWarning_Event_onData, kXMLDocumentType, "onData", false ),
        new AscWarningInstance(kWarning_Event_onHTTPStatus, kXMLDocumentType, "onHTTPStatus", false ),
        new AscWarningInstance(kWarning_Event_onLoad, kXMLDocumentType, "onLoad", false ),
        new AscWarningInstance(kWarning_Event_onStatus, kSharedObjectType, "onStatus", false ),
        new AscWarningInstance(kWarning_Event_onStatus, kLocalConnectionType, "onStatus", false ),
        new AscWarningInstance(kWarning_Event_onIMEComposition, kIMEType, "onIMEComposition", false ),
        new AscWarningInstance(kWarning_Event_onCancel, kFileReferenceType, "onCancel", false ),
        new AscWarningInstance(kWarning_Event_onComplete, kFileReferenceType, "onComplete", false ),
        new AscWarningInstance(kWarning_Event_onHTTPError, kFileReferenceType, "onHTTPError", false ),
        new AscWarningInstance(kWarning_Event_onIOError, kFileReferenceType, "onIOError", false ),
        new AscWarningInstance(kWarning_Event_onOpen, kFileReferenceType, "onOpen", false ),
        new AscWarningInstance(kWarning_Event_onProgress, kFileReferenceType, "onProgress", false ),
        new AscWarningInstance(kWarning_Event_onSecurityError, kFileReferenceType, "onSecurityError", false ),
        new AscWarningInstance(kWarning_Event_onSelect, kFileReferenceType, "onSelect", false ),
        };

        public static final AscWarning[][] allWarningConstants =
        {
              warningConstantsEN,
              warningConstantsCN,
              warningConstantsCS,
              warningConstantsDA,
              warningConstantsDE,
              warningConstantsES,
              warningConstantsFI,
              warningConstantsFR,
              warningConstantsIT,
              warningConstantsJP,
              warningConstantsKR,
              warningConstantsNB,
              warningConstantsNL,
              warningConstantsPL,
              warningConstantsPT,
              warningConstantsRU,
              warningConstantsSV,
              warningConstantsTR,
              warningConstantsTW,
        };

}
